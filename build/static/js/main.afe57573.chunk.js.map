{"version":3,"sources":["components/Navbars/HeroNavbar.tsx","components/Utilities/Illustration.tsx","variants/index.ts","components/Buttons/DangerButton.tsx","assets/discussion-illustration.svg","screens/Landing/Landing.tsx","components/Utilities/PageBody.tsx","components/Backdrop/Backdrop.tsx","components/Utilities/Heading.tsx","components/Utilities/InputField.tsx","components/Buttons/SuccessButton.tsx","schema/loginSchema.ts","store/userSlice.ts","api/index.ts","components/Modals/ModalContainer.tsx","components/Utilities/ErrorMessage.tsx","components/Modals/LoginModal/LoginModal.tsx","schema/theadSchema.ts","components/Utilities/TextArea.tsx","components/Modals/CreateThreadModal/CreateThreadModal.tsx","components/Navbars/NavLink.tsx","components/Navbars/Navbar.tsx","components/Utilities/Sidebar.tsx","schema/registrationSchema.ts","assets/securelogin-illustration.svg","screens/Signup/Signup.tsx","assets/authentication-illustration.svg","screens/Login/Login.tsx","components/Cards/CardTitle.tsx","components/Cards/CardReactions.tsx","components/Cards/CardBody.tsx","components/Cards/PostCard/PostCard.tsx","components/Cards/ProfileCard/ProfileCard.tsx","screens/Profile/Profile.tsx","components/Cards/ThreadCard/ThreadCard.tsx","assets/chat-illustration.svg","screens/Threads/Threads.tsx","assets/post-illustration.svg","screens/ThreadDetails/ThreadDetails.tsx","components/Cards/FullPostCard/FullPostCard.tsx","components/Cards/CommentCard/CommentCard.tsx","components/Utilities/AddComment.tsx","screens/PostDetails/PostDetails.tsx","components/Utilities/TagsSelector.tsx","schema/postSchema.ts","assets/publish-post-illustration.svg","screens/NewPost/NewPost.tsx","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx","screens/Landing/Landing.module.scss","screens/Signup/Signup.module.scss","screens/Login/Login.module.scss","components/Cards/ThreadCard/ThreadCard.module.scss"],"names":["HeroNavbar","props","className","to","Illustration","src","alt","buttonVariants","hover","scale","transition","type","duration","routeVariants","hidden","x","opacity","visible","ease","exit","modalVariants","y","stiffness","backdropVariants","sidebarVariants","delay","cardVariants","DangerButton","motion","button","variants","whileHover","ref","buttonRef","children","Landing","section","initial","animate","classes","HeroHeader","DiscussionIllustration","PageBody","Backdrop","div","onClick","clicked","Heading","InputField","leftIconClass","icon","label","placeholder","required","inputRef","SuccessButton","loginSchema","Joi","object","username","alternatives","try","string","email","tlds","allow","alphanum","min","max","custom","value","helpers","test","Error","messages","password","userSlice","createSlice","name","initialState","isAuthenticated","id","undefined","permissionLevel","reducers","authenticate","state","deauthenticate","setId","action","payload","setUsername","setPermissionLevel","actions","API","axios","create","fetchAllThreads","get","fetchPostsBySearch","title","tags","userId","reactPost","patch","reactComment","commentId","login","loginData","post","getUsername","ModalContainer","e","stopPropagation","ErrorMessage","LoginModal","useState","errorMessage","setErrorMessage","dispatch","useDispatch","history","useHistory","location","useLocation","usernameRef","useRef","passwordRef","AnimatePresence","show","backdropClicked","onSubmit","preventDefault","current","error","validate","message","then","res","data","toast","success","onOpen","pathname","push","Flip","catch","err","response","status","threadSchema","description","TextArea","contentLength","setContentLength","textColor","setTextColor","limit","onChange","currentTarget","length","textAreaRef","CreateThreadModal","titleRef","descriptionRef","threadData","body","NavLink","Navbar","rightNavLinks","showLoginModal","setShowLoginModal","showCreateThreadModal","setShowCreateThreadModal","useSelector","user","backdropClickHandler","substring","htmlFor","xmlns","width","height","viewBox","d","Sidebar","bgMap","Map","set","titleMap","borderMap","descMap","has","bgColor","logo","titleColor","descriptionColor","illustration","registrationSchema","confirmPassword","valid","Signup","emailRef","confirmPasswordRef","SecureLoginIllustration","signupData","Login","AuthenticationIllustration","CardTitle","CardReactions","votes","setVotes","downVotes","setDownVotes","userUpvoted","setUserUpvoted","userDownvoted","setUserDownvoted","params","useParams","updateVotes","useCallback","passedVotes","passedDownVotes","includes","useEffect","likeHandler","comment","dislikeHandler","showComments","threadName","author","postId","delete","deleteComment","replace","goBack","CardBody","PostCard","ProfileCard","joinedAt","Date","toUTCString","slice","bio","score","numberOfPosts","numberOfComments","Profile","userInfo","setUserInfo","userPosts","setUserPosts","getUser","fetchedUser","_id","fetchedPost","posts","comments","toString","map","postBody","ThreadCard","threadBody","Threads","threads","setThreads","fetchedThreads","ChatIllustration","thread","ThreadDetails","setPosts","setThreadData","PostIllustration","FullPostCard","createdAt","date","join","CommentCard","AddComment","commentRef","createComment","PostDetails","setPost","setComments","fetchCommentsBySearch","TagsSelector","dropdownToggleHandler","readOnly","showDropdown","allThreads","tag","threadSelectHandler","postSchema","array","NewPost","threadList","setThreadList","setShowDropdown","selectedThreads","setSelectedThreads","tagsSelectorRef","threadTitles","forEach","PublishPostIllustration","postData","threadTitle","textContent","prevSelected","currentlySelected","splice","indexOf","console","log","prevState","App","exitBeforeEnter","path","exact","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById","module","exports"],"mappings":"0RAiCeA,EA3BqB,SAAAC,GAAK,OACrC,sBAAKC,UAAU,iGAAf,UACI,oBAAIA,UAAU,oBAAd,SACI,oBAAIA,UAAU,GAAd,SACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gJAAvB,sBAMR,qBAAIA,UAAU,8BAAd,UACI,6BACI,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,qJAA5B,qBAKJ,6BACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,qKAA7B,8BCdDE,EANuB,SAACH,GAAD,OAClC,qBAAKC,UAAU,iIAAf,SACI,qBAAKG,IAAKJ,EAAMI,IAAKC,IAAI,yB,0BCNpBC,EAAiB,CAC1BC,MAAO,CACHC,MAAO,KACPC,WAAY,CACRC,KAAM,QACNC,SAAU,MAKTC,EAAgB,CACzBC,OAAQ,CACJC,EAAG,IACHC,QAAS,GAEbC,QAAS,CACLF,EAAG,EACHC,QAAS,EACTN,WAAY,CACRC,KAAM,QACNC,SAAU,GACVM,KAAM,cAGdC,KAAM,CACFJ,GAAI,IACJC,QAAS,EACTN,WAAY,CACRC,KAAM,QACNC,SAAU,GACVM,KAAM,eAKLE,EAAgB,CACzBN,OAAQ,CACJE,QAAS,EACTK,GAAI,KAERJ,QAAS,CACLD,QAAS,EACTK,EAAG,EACHX,WAAY,CACRC,KAAM,SACNW,UAAW,MAGnBH,KAAM,CACFH,QAAS,EACTK,GAAI,IACJX,WAAY,CACRC,KAAM,WAKLY,EAAmB,CAC5BT,OAAQ,CACJE,QAAS,EACTN,WAAY,CACRC,KAAM,UAGdM,QAAS,CACLD,QAAS,EACTN,WAAY,CACRC,KAAM,WAKLa,EAAkB,CAC3BV,OAAQ,CACJE,QAAS,EACTD,GAAI,KAERE,QAAS,CACLD,QAAS,EACTD,EAAG,EACHL,WAAY,CACRC,KAAM,QACNO,KAAM,UACNN,SAAU,GACVa,MAAO,MAKNC,EAAe,CACxBlB,MAAO,CACHC,MAAO,KACPY,GAAI,EACJX,WAAY,CACRC,KAAM,QACNC,SAAU,GACVM,KAAM,aC5EHS,EAZuB,SAAA1B,GAAK,OACvC,cAAC2B,EAAA,EAAOC,OAAR,CAAe3B,UAAU,sMAErB4B,SAAUvB,EACVwB,WAAW,QACXpB,KAAMV,EAAMU,KACZqB,IAAK/B,EAAMgC,UALf,SAOKhC,EAAMiC,YChBA,MAA0B,oDCoC1BC,EA3BW,WAEtB,OACI,cAACP,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,SAMI,sBAAKjB,UAAS,oBAAeqC,IAAQC,YAArC,UACI,cAAC,EAAD,IAEA,0BAAStC,UAAU,+CAAnB,UACI,sBAAKA,UAAU,6KAAf,UACI,oBAAIA,UAAU,mEAAd,mBACA,mBAAGA,UAAU,8DAAb,4CACA,cAAC,IAAD,CAAMC,GAAG,WAAT,SACI,cAAC,EAAD,+BAGR,cAAC,EAAD,CAAcE,IAAKoC,a,OCpBxBC,EATY,SAAAzC,GAEvB,OACI,yBAAUC,UAAU,0EAApB,SACMD,EAAMiC,YCiBLS,EAdmB,SAAC1C,GAAD,OAC9B,cAAC2B,EAAA,EAAOgB,IAAR,CACI1C,UAAU,4IAEV2C,QAAS5C,EAAM6C,QACfhB,SAAUP,EACVc,QAAQ,SACRC,QAAQ,UACRnB,KAAK,SAPT,SASKlB,EAAMiC,YCVAa,EAPW,SAAA9C,GAAK,OAC3B,oBAAIC,UAAU,iHAAd,SAEKD,EAAMiC,YCkCAc,EA5BqB,SAAA/C,GAChC,IACIgD,EADEC,EAAOjD,EAAMiC,SAMnB,OAJIgB,IACAD,EAAgB,kBAIhB,sBAAK/C,UAAU,oCAAf,UACI,uBAAOA,UAAU,oBAAjB,SAAsCD,EAAMkD,QAC5C,sBAAKjD,UAAS,kBAAa+C,GAA3B,UACI,uBACI/C,UAAU,mBACVS,KAAMV,EAAMU,KACZyC,YAAanD,EAAMmD,YACnBC,SAAUpD,EAAMoD,SAChBrB,IAAK/B,EAAMqD,WACdJ,GACG,sBAAMhD,UAAU,yDAAhB,SACKgD,W,OCRVK,EAZwB,SAAAtD,GAAK,OACxC,cAAC2B,EAAA,EAAOC,OAAR,CAAe3B,UAAU,yMAErB4B,SAAUvB,EACVwB,WAAW,QACXpB,KAAMV,EAAMU,KACZqB,IAAK/B,EAAMgC,UALf,SAOKhC,EAAMiC,Y,gBCwCAsB,EAvCKC,IAAIC,OAAO,CAE3BC,SAAUF,IAAIG,eACTC,IAEGJ,IAAIK,SACCC,MAAM,CAEHC,KAAM,CAAEC,OAAO,KAElBZ,WAGLI,IAAIK,SACCI,WACAC,IAAI,GACJC,IAAI,IACJC,QArBU,SAACC,EAAeC,GACvC,IAAK,YAAYC,KAAKF,GAAQ,MAAM,IAAIG,QAoBA,uBAC3BpB,WACAqB,SAAS,CACN,aAAc,gEAGzBrB,WACAqB,SAAS,CACN,qBAAsB,2DAE9BC,SAAUlB,IAAIK,SACTK,IAAI,IACJC,IAAI,IACJC,QA7Ce,SAACC,EAAeC,GAEpC,IAAK,QAAQC,KAAKF,GAAQ,MAAM,IAAIG,MAEpC,IAAK,QAAQD,KAAKF,GAAQ,MAAM,IAAIG,MAEpC,IAAK,KAAKD,KAAKF,GAAQ,MAAM,IAAIG,MAEjC,OAAOH,IAqCsB,oBACxBjB,WACAF,MAAM,YACNuB,SAAS,CACN,aACI,mG,QClDVE,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACVC,iBAAiB,EACjBC,QAAIC,EACJvB,cAAUuB,EACVC,gBAAiB,GAErBC,SAAU,CACNC,aAAc,SAAAC,GACVA,EAAMN,iBAAkB,GAE5BO,eAAgB,SAAAD,GACZA,EAAMN,iBAAkB,GAE5BQ,MAAO,SAACF,EAAOG,GACXH,EAAML,GAAKQ,EAAOC,SAEtBC,YAAa,SAACL,EAAOG,GACjBH,EAAM3B,SAAW8B,EAAOC,SAE5BE,mBAAoB,SAACN,EAAOG,GACxBH,EAAMH,gBAAkBM,EAAOC,YAKpC,EAMHd,EAAUiB,QALVR,EADG,EACHA,aACAE,EAFG,EAEHA,eACAC,EAHG,EAGHA,MACAG,EAJG,EAIHA,YACAC,EALG,EAKHA,mBAGWhB,IAAf,Q,QClCMkB,E,OAAMC,EAAMC,SAGLC,EAAkB,kBAAMH,EAAII,IAAI,UAShCC,EAAqB,SAACC,EAAgBC,EAAeC,GAAhC,OAAoDR,EAAII,IAAJ,6BAA8BE,EAA9B,iBAA4CC,EAA5C,mBAA2DC,KAGpIC,EAAY,SAACtB,EAAYQ,GAAb,OAA4CK,EAAIU,MAAJ,yBAA4BvB,EAA5B,mBAAyCQ,KASjGgB,EAAe,SAACC,EAAmBjB,GAApB,OAAmDK,EAAIU,MAAJ,gCAAmCE,EAAnC,mBAAuDjB,KAMzHkB,EAAQ,SAACC,GAAD,OAAuBd,EAAIe,KAAK,aAAcD,IAGtDE,EAAc,SAACR,GAAD,OAAoBR,EAAII,IAAJ,+BAAgCI,K,SCnBhES,EAdkB,SAAA9G,GAAK,OAElC,cAAC2B,EAAA,EAAOgB,IAAR,CAAY1C,UAAU,+IAElB2C,QAAS,SAAAmE,GAAC,OAAIA,EAAEC,mBAChBnF,SAAUV,EACViB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OANT,SAQKlB,EAAMiC,Y,gBCPAgF,GANgB,SAAAjH,GAAK,OAChC,mBAAGC,UAAU,8DAAb,SACKD,EAAMiC,YCyHAiF,GApGqB,SAAAlH,GAChC,MAAwCmH,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWC,eACXC,EAAUC,cACVC,EAAWC,cACXC,EAAcC,iBAAyB,MACvCC,EAAcD,iBAAyB,MA2D7C,OACI,cAACE,EAAA,EAAD,UACK/H,EAAMgI,MACH,cAAC,EAAD,CAAUnF,QAAS7C,EAAMiI,gBAAzB,SACI,eAAC,EAAD,WACI,cAAC,EAAD,sBACA,uBAAMC,SA/DJ,SAACnB,GAAyC,IAAD,IAC3DA,EAAEoB,iBACF,IAAMzE,EAAQ,UAAGkE,EAAYQ,eAAf,aAAG,EAAqB/D,MAChCK,EAAQ,UAAGoD,EAAYM,eAAf,aAAG,EAAqB/D,MAE9BgE,EAAU9E,EAAY+E,SAAS,CACnC5E,WACAgB,aAFI2D,MAKJA,EACAhB,EAAgBgB,EAAME,UAGtBlB,OAAgBpC,GAChByB,EAAM,CACFhD,WACAgB,aAEC8D,MAAK,SAAAC,GAEFnB,EAASlC,KAETkC,EAAS/B,EAAMkD,EAAIC,KAAK1D,KACxBsC,EAAS5B,EAAY+C,EAAIC,KAAKhF,WAC9B4D,EAAS3B,EAAmB8C,EAAIC,KAAKxD,kBAErCyD,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAC5BM,OAAQ,WAGsB,YAAtBnB,EAASoB,UACa,WAAtBpB,EAASoB,UACT9I,EAAMiI,kBACNT,EAAQuB,KAAK,MAGb/I,EAAMiI,mBAEdxH,WAAYuI,SAGnBC,OAAM,SAAAC,GACH,OAAQA,EAAIC,SAASC,QACjB,KAAK,IACDT,IAAMN,MAAM,qBAAsB,CAAE5H,WAAYuI,MAChD,MACJ,KAAK,IACDL,IAAMN,MAAM,iCAAkC,CAAE5H,WAAYuI,MAC5D,MACJ,QACIL,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,YAY1B/I,UAAU,iCAAzC,UACI,cAAC,EAAD,CACIiD,MAAM,oBACNC,YAAY,uBACZzC,KAAK,OACL2C,SAAUuE,EAJd,SAMI,cAAC,IAAD,CAAU3H,UAAU,kBAExB,cAAC,EAAD,CACIiD,MAAM,WACNC,YAAY,WACZzC,KAAK,WACL2C,SAAUyE,EAJd,SAMI,cAAC,IAAD,CAAS7H,UAAU,kBAEvB,qBAAKA,UAAU,wCAAf,SACI,cAAC,EAAD,CAAeS,KAAK,SAApB,wBAGR,cAAC,GAAD,UAAe0G,YCpGxBiC,GAbM7F,IAAIC,OAAO,CAC5B0C,MAAO3C,IAAIK,SACNK,IAAI,GACJC,IAAI,IACJjB,MAAM,SACNE,WACLkG,YAAa9F,IAAIK,SACZK,IAAI,IACJC,IAAI,KACJjB,MAAM,eACNE,aC0BMmG,GA5BmB,SAAAvJ,GAC9B,MAA0CmH,mBAAiB,GAA3D,mBAAOqC,EAAP,KAAsBC,EAAtB,KACA,EAAkCtC,mBAAiB,cAAnD,mBAAOuC,EAAP,KAAkBC,EAAlB,KAWA,OACI,sBAAK1J,UAAU,wCAAf,UACI,sBAAKA,UAAU,2CAAf,UACI,mBAAGA,UAAS,qBAAZ,SAAqCD,EAAMkD,QAC3C,oBAAGjD,UAAS,eAAUyJ,GAAtB,UAAoCF,EAApC,MAAsDxJ,EAAM4J,YAEhE,0BAAU3J,UAAU,8BAChBkD,YAAanD,EAAMmD,YACnB0G,SAjBiB,SAAC9C,GAC1B0C,EAAiB1C,EAAE+C,cAAczF,MAAM0F,QACnChD,EAAE+C,cAAczF,MAAM0F,QAAU/J,EAAM4J,MACtCD,EAAa,cAEbA,EAAa,QAaT5H,IAAK/B,EAAMgK,YAAa5G,SAAUpD,EAAMoD,eCuCzC6G,GArD4B,SAAAjK,GACvC,MAAwCmH,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACM6C,EAAWrC,iBAAyB,MACpCsC,EAAiBtC,iBAA4B,MAyBnD,OACI,cAACE,EAAA,EAAD,UACM/H,EAAMgI,MACJ,cAAC,EAAD,CAAUnF,QAAS7C,EAAMiI,gBAAzB,SACI,eAAC,EAAD,WACI,cAAC,EAAD,4BACA,uBAAMC,SA7BJ,SAACnB,GAAmC,IAAD,IACrDA,EAAEoB,iBACF,INjBqBiC,EMiBfjE,EAAK,UAAG+D,EAAS9B,eAAZ,aAAG,EAAkB/D,MAC1BiF,EAAW,UAAGa,EAAe/B,eAAlB,aAAG,EAAwB/D,MAEpCgE,EAAUgB,GAAaf,SAAS,CACpCnC,QACAmD,gBAFIjB,MAKJA,EACAhB,EAAgBgB,EAAME,UAEtBlB,OAAgBpC,IN5BCmF,EM6BJ,CAAEjE,QAAOkE,KAAMf,GN7BiBzD,EAAIe,KAAK,eAAgBwD,IM8BjE5B,MAAK,SAAAC,GACFE,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAAE9H,WAAYuI,MAC9ChJ,EAAMiI,qBAETgB,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WAWvD/I,UAAU,8CADd,UAEI,cAAC,EAAD,CAAYkD,YAAY,eAAeD,MAAM,eAAexC,KAAK,OAC7D2C,SAAU6G,EAAU9G,UAAQ,IAEhC,cAAC,GAAD,CAAU4G,YAAaG,EAAgBhH,YAAY,qBAC/CyG,MAAO,IAAK1G,MAAM,qBAAqBE,UAAQ,IACnD,qBAAKnD,UAAU,wCAAf,SACI,cAAC,EAAD,CAAeS,KAAK,SAApB,yBAGR,cAAC,GAAD,UAAe0G,YChDxBkD,GAXkB,SAACtK,GAAD,OAC7B,6BACI,wBAAQC,UAAU,+LAEd2C,QAAS5C,EAAM6C,QAFnB,SAIK7C,EAAMiC,cCgHJsI,I,OA3GU,WACrB,IA4BIC,EA5BJ,EAA4CrD,oBAAS,GAArD,mBAAOsD,EAAP,KAAuBC,EAAvB,KACA,EAA0DvD,oBAAS,GAAnE,mBAAOwD,EAAP,KAA8BC,EAA9B,KACMtD,EAAWC,eACXxC,EAAkB8F,cAAoB,SAAAxF,GAAK,OAAIA,EAAMyF,KAAK/F,mBAC1DG,EAAkB2F,cAAoB,SAAAxF,GAAK,OAAIA,EAAMyF,KAAK5F,mBAC1DxB,EAAWmH,cAAoB,SAAAxF,GAAK,OAAIA,EAAMyF,KAAKpH,YAEnDqH,EAAuB,WACzBL,GAAkB,GAClBE,GAAyB,IA8D7B,OAxCIJ,EADAzF,EAEI,qCACKG,GAAmB,GAChB,cAAC,GAAD,CAASrC,QAtBQ,kBAAM+H,GAAyB,IAsBhD,2BAIJ,cAAC,IAAD,CAAM1K,GAAG,aAAT,SACI,cAAC,GAAD,yBAIJ,cAAC,IAAD,CAAMA,GAAE,iBAAYwD,GAApB,SACI,cAAC,GAAD,WACc,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUqG,QAAS,GACfrG,EAASsH,UAAU,EAAG,IAAM,KAC5BtH,MAGd,eAAC,GAAD,CAASb,QApCM,WREHgD,EAAIe,KAAK,eQAxB4B,MAAK,SAAAC,GACFnB,EAAShC,KACTgC,EAAS/B,OAAMN,IACfqC,EAAS5B,OAAYT,IACrBqC,EAAS3B,EAAmB,IAC5BgD,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAAE9H,WAAYuI,SAEjDC,OAAM,SAAAC,GACHP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,UA0BrD,UACI,sBAAK/I,UAAU,kBAAf,cAAkC,cAAC,IAAD,CAAYA,UAAU,yBAAxD,OACA,qBAAKA,UAAU,YAAf,4BAMR,qCACI,cAAC,IAAD,CAAMC,GAAG,UAAT,SACI,cAAC,GAAD,wBAIJ,cAAC,GAAD,CAAS2C,QArDK,kBAAM6H,GAAkB,IAqDtC,sBAQR,qCACI,cAAC,GAAD,CAAmB1C,KAAM2C,EAAuB1C,gBAAiB8C,IACjE,cAAC,GAAD,CAAY/C,KAAMyC,EAAgBxC,gBAAiB8C,IACnD,qBAAK9K,UAAU,sFACX+E,GAAG,SADP,SAEI,sBAAK/E,UAAU,oEAAf,UACI,oBAAIA,UAAU,sCAAd,SACI,oBAAIA,UAAU,iCAAd,SACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,yHAAvB,uBAOR,uBAAOgL,QAAQ,wBAAwBhL,UAAU,iEAAjD,SACI,sBAAKA,UAAU,yCAAyCiL,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAA1H,UACI,yCACA,sBAAMC,EAAE,qDAGhB,uBAAOrL,UAAU,SAASS,KAAK,WAAWsE,GAAG,0BAE7C,qBAAK/E,UAAU,wEAAwE+E,GAAG,iBAA1F,SACI,oBAAI/E,UAAU,uBAAd,SACKuK,gBClDde,I,OA/CkB,SAAAvL,GAC7B,IAAMwL,EAAQ,IAAIC,IAClBD,EAAME,IAAI,SAAU,gBACpBF,EAAME,IAAI,eAAgB,qBAE1B,IAAMC,EAAW,IAAIF,IACrBE,EAASD,IAAI,SAAU,mBAEvB,IAAME,EAAY,IAAIH,IACtBG,EAAUF,IAAI,SAAU,oBAExB,IAAMG,EAAU,IAAIJ,IAKpB,OAJAI,EAAQH,IAAI,SAAU,kBACtBG,EAAQH,IAAI,cAAe,sBAC3BG,EAAQH,IAAI,aAAc,qBAGtB,eAAC/J,EAAA,EAAOgB,IAAR,CAAY1C,UAAS,8FACduL,EAAMM,IAAI9L,EAAM+L,SAAWP,EAAMvF,IAAIjG,EAAM+L,SAAW,gBADxC,8BAEjBlK,SAAUN,EAAiBa,QAAQ,SACnCC,QAAQ,UAHZ,UAKKrC,EAAMgM,MACH,oBAAI/L,UAAU,uDAAd,mBAGHD,EAAMmG,OACH,qCACI,oBAAIlG,UAAW,+CACR0L,EAASG,IAAI9L,EAAMiM,YAAcN,EAAS1F,IAAIjG,EAAMiM,YAAc,mBAD1D,iCAAf,SAGKjM,EAAMmG,QAEX,oBAAIlG,UAAS,mBAAc2L,EAAU3F,IAAI,UAA5B,qBAIrB,mBAAGhG,UAAW,+CACP4L,EAAQC,IAAI9L,EAAMkM,kBAAoBL,EAAQ5F,IAAIjG,EAAMkM,kBAAoB,kBADrE,8CAAd,SAGKlM,EAAMsJ,cAEX,cAAC,EAAD,CAAclJ,IAAKJ,EAAMmM,oBCJtBC,GArCY5I,IAAIC,OAAO,CAClCK,MAAON,IAAIK,SACNC,MAAM,CAEHC,KAAM,CAAEC,OAAO,KAElBd,MAAM,SACNE,WACLM,SAAUF,IAAIK,SACTI,WACAC,IAAI,GACJC,IAAI,IACJC,QAhBkB,SAACC,EAAeC,GACvC,IAAK,YAAYC,KAAKF,GAAQ,MAAM,IAAIG,QAeR,uBAC3BpB,WACAF,MAAM,YACNuB,SAAS,CACN,aAAc,+DAEtBC,SAAUlB,IAAIK,SACTK,IAAI,IACJC,IAAI,IACJC,QApCe,SAACC,EAAeC,GAEpC,IAAK,QAAQC,KAAKF,GAAQ,MAAM,IAAIG,MAEpC,IAAK,QAAQD,KAAKF,GAAQ,MAAM,IAAIG,MAEpC,IAAK,KAAKD,KAAKF,GAAQ,MAAM,IAAIG,MAEjC,OAAOH,IA4BsB,oBACxBjB,WACAF,MAAM,YACNuB,SAAS,CACN,aACI,iGAEZ4H,gBAAiB7I,IAAIK,SAChByI,MAAM9I,IAAIzB,IAAI,aACdqB,WACAF,MAAM,oBACNuB,SAAS,CACN,WAAY,6BClDT,OAA0B,qD,oBC4H1B8H,GAxGU,WACrB,MAAwCpF,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMG,EAAUC,cAEV+E,EAAW3E,iBAAyB,MACpCD,EAAcC,iBAAyB,MACvCC,EAAcD,iBAAyB,MACvC4E,EAAqB5E,iBAAyB,MA0CpD,OACI,eAAClG,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,UAMI,cAAC,GAAD,IACA,eAAC,EAAD,WACI,cAAC,GAAD,CACI8K,MAAI,EACJ1C,YAAY,+CACZ4C,iBAAiB,cACjBH,QAAQ,SACRI,aAAcO,KAIlB,qBAAKzM,UAAU,qDAAf,SACI,sBAAKA,UAAS,4GACIqC,KAAQiK,OADZ,6CAAd,UAEI,cAAC,EAAD,uCAGA,uBAAMrE,SAhEJ,SAACnB,GAAyC,IAAD,QACrDjD,EAAK,UAAG0I,EAASpE,eAAZ,aAAG,EAAkB/D,MAC1BX,EAAQ,UAAGkE,EAAYQ,eAAf,aAAG,EAAqB/D,MAChCK,EAAQ,UAAGoD,EAAYM,eAAf,aAAG,EAAqB/D,MAChCgI,EAAe,UAAGI,EAAmBrE,eAAtB,aAAG,EAA4B/D,MAEpD0C,EAAEoB,iBAEF,IZHewE,EYGPtE,EAAU+D,GAAmB9D,SAAS,CAC1CxE,QACAJ,WACAgB,WACA2H,oBAJIhE,MAQJA,EACAhB,EAAgBgB,EAAME,UAGtBlB,OAAgBpC,IZfL0H,EYgBJ,CAAE7I,QAAOJ,WAAUgB,YZhBSmB,EAAIe,KAAK,cAAe+F,IYiBtDnE,MAAK,SAAAC,GACFE,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAC5BM,OAAQ,kBAAMrB,EAAQuB,KAAK,MAC3BtI,WAAYuI,SAGnBC,OAAM,SAAAC,GACyB,MAAxBA,EAAIC,SAASC,OACbT,IAAMN,MAAM,qBACR,CAAE5H,WAAYuI,MAGlBL,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WA8BtB/I,UAAU,mDAAzC,UACI,cAAC,EAAD,CAAYkD,YAAY,uBAAuBzC,KAAK,QAAQmE,KAAK,QAAQzB,UAAQ,EAC7EF,MAAM,QAAQG,SAAUmJ,EAD5B,SAEI,cAAC,IAAD,CAAUvM,UAAU,kBAGxB,cAAC,EAAD,CAAYkD,YAAY,UAAUzC,KAAK,OAAOmE,KAAK,WAAWzB,UAAQ,EAClEF,MAAM,WAAWG,SAAUuE,EAD/B,SAEI,cAAC,IAAD,CAAU3H,UAAU,kBAGxB,cAAC,EAAD,CAAYkD,YAAY,WAAWzC,KAAK,WAAWmE,KAAK,WAAWzB,UAAQ,EACvEF,MAAM,WAAWG,SAAUyE,EAD/B,SAEI,cAAC,IAAD,CAAS7H,UAAU,kBAGvB,cAAC,EAAD,CAAYkD,YAAY,mBAAmBzC,KAAK,WAAW0C,UAAQ,EAC/DF,MAAM,mBAAmBG,SAAUoJ,EADvC,SAEI,cAAC,IAAD,CAASxM,UAAU,kBAGvB,cAAC,EAAD,CAAeS,KAAK,SAApB,wBAEJ,cAAC,GAAD,UAAe0G,gBCpHxB,OAA0B,wD,oBC+H1BwF,GAzGS,WACpB,MAAwCzF,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMG,EAAUC,cACVH,EAAWC,eAEXK,EAAcC,iBAAyB,MACvCC,EAAcD,iBAAyB,MAqD7C,OACI,eAAClG,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,UAMI,cAAC,GAAD,IACA,eAAC,EAAD,WAEI,cAAC,GAAD,CACI8K,MAAI,EACJ1C,YAAY,+CACZ4C,iBAAiB,cACjBH,QAAQ,SACRI,aAAcU,KAIlB,qBAAK5M,UAAU,0CAAf,SACI,sBAAKA,UAAS,yHACAqC,KAAQsK,MADR,6CAAd,UAEI,cAAC,EAAD,6BAGA,uBAAM1E,SA5EJ,SAACnB,GAAyC,IAAD,IACrDrD,EAAQ,UAAGkE,EAAYQ,eAAf,aAAG,EAAqB/D,MAChCK,EAAQ,UAAGoD,EAAYM,eAAf,aAAG,EAAqB/D,MAEtC0C,EAAEoB,iBAEF,IAAQE,EAAU9E,EAAY+E,SAAS,CACnC5E,WACAgB,aAFI2D,MAMJA,EACAhB,EAAgBgB,EAAME,UAGtBlB,OAAgBpC,GAChByB,EAAM,CACFhD,WACAgB,aAEC8D,MAAK,SAAAC,GAEFnB,EAASlC,KAETkC,EAAS/B,EAAMkD,EAAIC,KAAK1D,KACxBsC,EAAS5B,EAAY+C,EAAIC,KAAKhF,WAC9B4D,EAAS3B,EAAmB8C,EAAIC,KAAKxD,kBAErCyD,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAC5BM,OAAQ,WAEJrB,EAAQuB,KAAK,WAIxBE,OAAM,SAAAC,GACH,OAAQA,EAAIC,SAASC,QACjB,KAAK,IACDT,IAAMN,MAAM,qBAAsB,CAAE5H,WAAYuI,MAChD,MACJ,KAAK,IACDL,IAAMN,MAAM,iCAAkC,CAAE5H,WAAYuI,MAC5D,MACJ,QACIL,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,YA+B1B/I,UAAU,mDAAzC,UACI,cAAC,EAAD,CAAYkD,YAAY,uBAAuBzC,KAAK,OAAOmE,KAAK,WAAWzB,UAAQ,EAC/EF,MAAM,oBAAoBG,SAAUuE,EADxC,SAEI,cAAC,IAAD,CAAU3H,UAAU,kBAGxB,cAAC,EAAD,CAAYkD,YAAY,WAAWzC,KAAK,WAAWmE,KAAK,WAAWzB,UAAQ,EACvEF,MAAM,WAAWG,SAAUyE,EAD/B,SAEI,cAAC,IAAD,CAAS7H,UAAU,kBAGvB,cAAC,EAAD,CAAeS,KAAK,SAApB,sBAEJ,cAAC,GAAD,UAAe0G,gBCjHxB0F,GANa,SAAA9M,GAAK,OAC7B,oBAAIC,UAAU,qFAAd,SACKD,EAAMiC,YCuJA8K,GAnIwB,SAAA/M,GACnC,MAA0BmH,qBAA1B,mBAAO6F,EAAP,KAAcC,EAAd,KACA,EAAkC9F,qBAAlC,mBAAO+F,EAAP,KAAkBC,EAAlB,KACA,EAAsChG,oBAAS,GAA/C,mBAAOiG,EAAP,KAAoBC,EAApB,KACA,EAA0ClG,oBAAS,GAAnD,mBAAOmG,EAAP,KAAsBC,EAAtB,KACMlH,EAASwE,cAAoB,SAAAxF,GAAK,OAAIA,EAAMyF,KAAK9F,MACjDE,EAAkB2F,cAAoB,SAAAxF,GAAK,OAAIA,EAAMyF,KAAK5F,mBAC1DsI,EAASC,cACT/F,EAAWC,cACXH,EAAUC,cAEViG,EAAcC,uBAAY,SAACC,EAAuBC,GAChDD,EAAYE,SAASzH,IACrBgH,GAAe,GACfE,GAAiB,IACVM,EAAgBC,SAASzH,IAChCgH,GAAe,GACfE,GAAiB,KAEjBF,GAAe,GACfE,GAAiB,MAEtB,CAAClH,IAEJ0H,qBAAU,WACNd,EAASjN,EAAMgN,OACfG,EAAanN,EAAMkN,WACnBQ,EAAY1N,EAAMgN,MAAOhN,EAAMkN,aAChC,CAAClN,EAAMgN,MAAOhN,EAAMkN,UAAW7G,EAAQqH,IAE1C,IAAMM,EAAc,WACZhO,EAAMiO,QACNzH,EAAaxG,EAAMgF,GAAI,QAClBwD,MAAK,SAAAC,GACFwE,EAASxE,EAAIC,KAAKsE,OAClBG,EAAa1E,EAAIC,KAAKwE,WACtBQ,EAAYjF,EAAIC,KAAKsE,MAAOvE,EAAIC,KAAKwE,cAExCjE,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,SAEvE1C,EAAUtG,EAAMgF,GAAI,QACfwD,MAAK,SAAAC,GACFwE,EAASxE,EAAIC,KAAKsE,OAClBG,EAAa1E,EAAIC,KAAKwE,WACtBQ,EAAYjF,EAAIC,KAAKsE,MAAOvE,EAAIC,KAAKwE,cAExCjE,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,UAIzEkF,EAAiB,WACflO,EAAMiO,QACNzH,EAAaxG,EAAMgF,GAAI,WAClBwD,MAAK,SAAAC,GACFwE,EAASxE,EAAIC,KAAKsE,OAClBG,EAAa1E,EAAIC,KAAKwE,WACtBQ,EAAYjF,EAAIC,KAAKsE,MAAOvE,EAAIC,KAAKwE,cAExCjE,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,SAEvE1C,EAAUtG,EAAMgF,GAAI,WACfwD,MAAK,SAAAC,GACFwE,EAASxE,EAAIC,KAAKsE,OAClBG,EAAa1E,EAAIC,KAAKwE,WACtBQ,EAAYjF,EAAIC,KAAKsE,MAAOvE,EAAIC,KAAKwE,cAExCjE,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,UAwB/E,OACI,sBAAK/I,UAAU,qHAAf,UAEI,sBAAKA,UAAU,kCAAf,UACKmN,EACG,cAAC,IAAD,CAAanN,UAAU,uDACnB2C,QAASoL,IAEb,cAAC,IAAD,CAAa/N,UAAU,uDACnB2C,QAASoL,IAGjB,mBAAI/N,UAAU,uBAAd,gBAAsC+M,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAOjD,SAE5CuD,EACG,cAAC,IAAD,CAAerN,UAAU,yDACrB2C,QAASsL,IAEb,cAAC,IAAD,CAAejO,UAAU,yDACrB2C,QAASsL,IAGjB,mBAAIjO,UAAU,uBAAd,gBAAsCiN,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAWnD,YAEpD/J,EAAMmO,cACH,cAAC,IAAD,CAAMjO,GAAE,mBAAcF,EAAMoO,WAApB,YAAkCpO,EAAMgF,IAAhD,SACI,sBAAK/E,UAAU,yEAAf,UACI,cAAC,IAAD,CAAgBA,UAAU,QAC1B,mBAAGA,UAAU,uBAAb,4BAIVD,EAAMmO,eAAiB9H,IAAWrG,EAAMqO,QAAUnJ,EAAkB,GAClE,qBAAKjF,UAAU,yEAAf,SACI,cAAC,IAAD,CAAW2C,QAtDL,WAClB,GAAI5C,EAAMiO,QAAS,CACf,IAAMK,EAASd,EAAOc,QhBlEL,SAAC7H,EAAmB6H,GAApB,OAAuCzI,EAAI0I,OAAJ,8BAAkCD,EAAlC,sBAAsD7H,KgBmE9G+H,CAAcxO,EAAMgF,GAAIsJ,GACnB9F,MAAK,SAAAC,GACFE,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAAE9H,WAAYuI,MAC9CxB,EAAQiH,QAAQ/G,EAASoB,aAE5BG,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,chBjFxDhE,EgBmFJhF,EAAMgF,GhBnFaa,EAAI0I,OAAJ,0BAA8BvJ,KgBoFvDwD,MAAK,SAAAC,GACFE,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAAE9H,WAAYuI,MAC9CxB,EAAQkH,YAEXzF,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,ShBxFzD,IAAChE,GgB+H4B/E,UAAU,kCAEjD,SC9ID0O,GANY,SAAA3O,GAAK,OAC5B,mBAAGC,UAAU,6EAAb,SACKD,EAAMiC,YCkDA2M,GAlCmB,SAAA5O,GAC9B,IACMoO,EADSX,cACWW,WAE1B,OACI,sBACInO,UAAU,4HADd,UAKI,qBAAKA,UAAU,8DAAf,SACI,eAAC,IAAD,CAAMC,GAAE,mBAAckO,EAAd,YAA4BpO,EAAMgF,IAA1C,UACI,cAAC,GAAD,UACKhF,EAAMmG,QAGX,oBAAIlG,UAAU,4BAEd,cAAC,GAAD,UACKD,EAAMqK,YAInB,cAAC,GAAD,CACIrF,GAAIhF,EAAMgF,GACVgI,MAAOhN,EAAMgN,MACbE,UAAWlN,EAAMkN,UACjBiB,cAAY,EACZC,WAAYA,QC6BbS,GA/DsB,SAAA7O,GAAU,IAAD,IACpC8O,EAAW,IAAIC,KAAK/O,EAAM8O,UAAY,IAAIE,cAAcC,MAAM,GAAI,IAExE,OACI,sBACIhP,UAAU,sKADd,UAKI,sBAAKA,UAAU,+CAAf,UACI,qBAAIA,UAAU,0HAAd,UACI,sBAAKA,UAAU,mCAAf,UACKD,EAAM0D,SACN1D,EAAMkF,iBAA6C,IAA1BlF,EAAMkF,gBAAwB,cAAC,IAAD,CAAWjF,UAAU,aAAe,KAC3FD,EAAMkF,iBAA6C,IAA1BlF,EAAMkF,gBAAwB,cAAC,IAAD,CAAiBjF,UAAU,aAAe,KACjGD,EAAMkF,iBAA6C,IAA1BlF,EAAMkF,gBAAwB,cAAC,IAAD,CAASjF,UAAU,aAAe,QAE9F,oBAAGA,UAAU,iDAAb,cACM6O,EADN,UAKJ,oBAAI7O,UAAU,8BAEd,mBAAGA,UAAU,8EAAb,SACMD,EAAMkP,MAAO,UAAAlP,EAAMkP,WAAN,eAAWnF,QAAS,KAAO,UAAA/J,EAAMkP,WAAN,eAAWlE,UAAU,EAAG,MAAK,MAAQhL,EAAMkP,SAK7F,sBAAKjP,UAAU,wGAAf,UAEI,sBAAKA,UAAU,mEAAf,UACI,cAAC,IAAD,CAASA,UAAU,QACnB,mBAAGA,UAAU,uBAAb,2BACA,oBAAGA,UAAU,kBAAb,cAAiCD,EAAMmP,MAAvC,UAEJ,sBAAKlP,UAAU,mEAAf,UACI,mBAAGA,UAAU,uBAAb,sBACED,EAAMmP,QAAc,OAALnP,QAAK,IAALA,OAAA,EAAAA,EAAOmP,OAAQ,GAAK,cAAC,IAAD,CAAWlP,UAAU,QAAW,KACnED,EAAMmP,QAAc,OAALnP,QAAK,IAALA,OAAA,EAAAA,EAAOmP,OAAQ,GAAK,cAAC,IAAD,CAAgBlP,UAAU,QAAW,KACxED,EAAMmP,QAAc,OAALnP,QAAK,IAALA,OAAA,EAAAA,EAAOmP,OAAQ,GAAK,cAAC,IAAD,CAAUlP,UAAU,QAAW,KACpE,cAAC,IAAD,CAASA,UAAU,cAI3B,sBAAKA,UAAU,wGAAf,UAEI,sBAAKA,UAAU,mEAAf,UACI,cAAC,IAAD,CAAoBA,UAAU,QAC9B,mBAAGA,UAAU,uBAAb,2BACA,oBAAGA,UAAU,kBAAb,cAAiCD,EAAMoP,cAAvC,UAEJ,sBAAKnP,UAAU,mEAAf,UACI,cAAC,IAAD,CAAUA,UAAU,QACpB,mBAAGA,UAAU,uBAAb,8BACA,oBAAGA,UAAU,kBAAb,cAAiCD,EAAMqP,iBAAvC,iBCqBLC,GA3EW,WACtB,IAAQ5L,EAAa+J,cAAb/J,SACR,EAAgCyD,qBAAhC,mBAAOoI,EAAP,KAAiBC,EAAjB,KACA,EAAkCrI,mBAAuB,IAAzD,mBAAOsI,EAAP,KAAkBC,EAAlB,KACMlI,EAAUC,cAkBhB,OAhBAsG,qBAAU,YpBeS,SAACrK,GAAD,OAAsBmC,EAAII,IAAJ,eAAgBvC,KoBdrDiM,CAAQjM,GACH8E,MAAK,SAAAoH,GAEF1J,EAAmB,GAAI,GAAI0J,EAAYlH,KAAKmH,KACvCrH,MAAK,SAAAsH,GAAW,OAAIJ,EAAaI,EAAYpH,SAC7CO,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,SAEvEwG,EAAYI,EAAYlH,SAE3BO,OAAM,SAAAC,GACHP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,MACrDxB,EAAQkH,cAEjB,CAAChL,EAAU8D,IAGV,eAAC7F,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,UAMI,cAAC,GAAD,IACA,cAAC,EAAD,UAGI,sBAAKjB,UAAU,yEAAf,UAEI,cAAC,GAAD,CACIyD,SAAQ,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAU7L,SACpBwL,IAAG,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAUL,IACfC,MAAK,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAUJ,MACjBjK,gBAAe,OAAEqK,QAAF,IAAEA,OAAF,EAAEA,EAAUrK,gBAC3BkK,cAAa,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAUQ,MAAMhG,OAC/BsF,iBAAgB,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAUS,SAASjG,OACrC+E,SAAQ,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAUT,SAASmB,aAGjC,oBAAGhQ,UAAU,4BAAb,iBACKsP,QADL,IACKA,OADL,EACKA,EAAU7L,SADf,eAGA,oBAAIzD,UAAU,gEAflB,OAiBKwP,QAjBL,IAiBKA,OAjBL,EAiBKA,EAAWS,KAAI,SAAAtJ,GACZ,IAAMuJ,EAAYvJ,EAAKyD,KAAKN,OAAS,IAC/BnD,EAAKyD,KAAKW,UAAU,EAAG,KAAO,MAC9BpE,EAAKyD,KACX,OACI,cAAC,GAAD,CACIrF,GAAI4B,EAAKiJ,IACT1J,MAAOS,EAAKT,MACZkE,KAAM8F,EACNnD,MAAOpG,EAAKoG,MACZE,UAAWtG,EAAKsG,WACXtG,EAAKiJ,QAKpBJ,EAAU1F,OAER,KADA,cAAC,EAAD,yD,oBClCTqG,GAjCqB,SAAApQ,GAChC,IAAIqQ,EAMJ,OAJIA,EADArQ,EAAMqK,KAAKN,OAAS,GACP/J,EAAMqK,KAAKW,UAAU,EAAG,IAAM,MAE9BhL,EAAMqK,KAGnB,cAAC1I,EAAA,EAAOgB,IAAR,CAAY1C,UAAS,kIACCqC,KAAQ8N,WADT,4EAGjBvO,SAAUJ,EACVK,WAAW,QAJf,SAMI,eAAC,IAAD,CAAM5B,GAAE,mBAAcF,EAAMmG,OAA5B,UACI,cAAC,GAAD,UACKnG,EAAMmG,QAGX,oBAAIlG,UAAU,4BAEd,cAAC,GAAD,UACKoQ,IAEL,sBAAKpQ,UAAU,iDAAf,UACI,cAAC,IAAD,CAAcA,UAAU,yBACxB,oBAAGA,UAAU,uBAAb,UAAqCD,EAAMoP,cAA3C,mBAhBHpP,EAAMmG,QCxBR,OAA0B,8CC2D1BmK,GA9CW,WACtB,MAA8BnJ,mBAAyB,IAAvD,mBAAOoJ,EAAP,KAAgBC,EAAhB,KAQA,OANAzC,qBAAU,WACN/H,IACKwC,MAAK,SAAAiI,GAAc,OAAID,EAAWC,EAAe/H,SACjDO,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WACxE,IAGC,eAACrH,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,UAMI,cAAC,GAAD,IACA,eAAC,EAAD,WAEI,cAAC,GAAD,CACI6K,QAAQ,eACR5F,MAAM,UACNmD,YAAY,gCACZ2C,WAAW,SACXC,iBAAiB,aACjBC,aAAcuE,KAIlB,qBAAKzQ,UAAU,kEAAf,SACKsQ,EAAQL,KAAI,SAAAS,GACT,OACI,cAAC,GAAD,CACIxK,MAAOwK,EAAOxK,MACdkE,KAAMsG,EAAOtG,KACb+E,cAAeuB,EAAOvB,eACjBuB,EAAOxK,mBCjD7B,OAA0B,8CCoG1ByK,GAjFiB,WAC5B,MAA0BzJ,mBAAuB,IAAjD,mBAAO4I,EAAP,KAAcc,EAAd,KACA,EAAoC1J,qBAApC,mBAAOiD,EAAP,KAAmB0G,EAAnB,KACQ1C,EAAeX,cAAfW,WAyBR,OAtBAL,qBAAU,WzBlBa,IAAC5H,KyBmBRiI,EzBnB0BvI,EAAII,IAAJ,gBAAiBE,KyBoBlDqC,MAAK,SAAAC,GACFqI,EAAcrI,EAAIC,SAErBO,OAAM,SAAAC,GACHP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WAE9D,CAACoF,IAGJL,qBAAU,WACN7H,EAAmB,GAAIkI,EAAY,IAC9B5F,MAAK,SAAAC,GACFoI,EAASpI,EAAIC,SAEhBO,OAAM,SAAAC,GACHP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WAE9D,CAACoF,IAIA,eAACzM,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,UAMI,cAAC,GAAD,IACA,eAAC,EAAD,WACI,cAAC,GAAD,CACI6K,QAAQ,eACR5F,MAAOiI,EACP9E,YAAW,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAYC,KACzB4B,WAAW,SACXC,iBAAiB,aACjBC,aAAc4E,KAEjBhB,EAAMhG,OACH,qBAAK9J,UAAU,yEAAf,gBACK8P,QADL,IACKA,OADL,EACKA,EAAOG,KAAI,SAAAtJ,GACR,IAAIuJ,EAQJ,OALIA,EADAvJ,EAAKyD,KAAKN,OAAS,IACRnD,EAAKyD,KAAKW,UAAU,EAAG,KAAO,MAE9BpE,EAAKyD,KAIhB,cAAC,GAAD,CACIrF,GAAI4B,EAAKiJ,IACT1J,MAAOS,EAAKT,MACZkE,KAAM8F,EACNnD,MAAOpG,EAAKoG,MACZE,UAAWtG,EAAKsG,WACXtG,EAAKiJ,UAM1B,qBAAK5P,UAAU,gBAAf,SACI,cAAC,EAAD,mEClBT+Q,GApDuB,SAAAhR,GAClC,MAAgCmH,qBAAhC,mBAAOzD,EAAP,KAAiBgC,EAAjB,KACM8B,EAAUC,cACVwJ,EAAY,IAAIlC,KAAK/O,EAAMkR,MAAMlC,cAAcC,MAAM,GAAI,IAW/D,OATAlB,qBAAU,WACNlH,EAAY7G,EAAM8K,MACbtC,MAAK,SAAAC,GAAG,OAAI/C,EAAY+C,EAAIC,KAAKhF,aACjCuF,OAAM,SAAAC,GACH1B,EAAQkH,SACR/F,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WAE9D,CAACxB,EAASxH,EAAM8K,OAGf,sBACI7K,UAAU,wGADd,UAII,sBAAKA,UAAU,wHAAf,UAEI,cAAC,IAAD,CAAMC,GAAE,iBAAYwD,GAApB,SACI,oBAAGzD,UAAU,4BAAb,iBAA8CyD,OAElD,4BAAIuN,OAGR,sBAAKhR,UAAU,yBAAf,UACI,cAAC,GAAD,UACKD,EAAMmG,QAGX,oBAAIlG,UAAU,4BAEd,cAAC,GAAD,UACKD,EAAMqK,OAEX,qBAAKpK,UAAU,8EAAf,SACI,uCAAUD,EAAMoG,KAAK+K,KAAK,cAIlC,cAAC,GAAD,CACInM,GAAIhF,EAAMgF,GACVqJ,OAAQrO,EAAM8K,KACdkC,MAAOhN,EAAMgN,MACbE,UAAWlN,EAAMkN,gBCPlBkE,GA1CsB,SAAApR,GACjC,MAAgCmH,qBAAhC,mBAAOzD,EAAP,KAAiBgC,EAAjB,KACM8B,EAAUC,cACVwJ,EAAY,IAAIlC,KAAK/O,EAAMkR,MAAMlC,cAAcC,MAAM,GAAI,IAW/D,OATAlB,qBAAU,WACNlH,EAAY7G,EAAM8K,MACbtC,MAAK,SAAAC,GAAG,OAAI/C,EAAY+C,EAAIC,KAAKhF,aACjCuF,OAAM,SAAAC,GACHP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,MACrDxB,EAAQkH,cAEjB,CAAClH,EAASxH,EAAM8K,OAGf,sBAAK7K,UAAU,gGAAf,UAGI,sBAAKA,UAAU,wHAAf,UAEI,cAAC,IAAD,CAAMC,GAAE,iBAAYwD,GAApB,SACI,oBAAGzD,UAAU,4BAAb,iBAA8CyD,OAElD,4BAAIuN,OAGR,qBAAKhR,UAAU,yBAAf,SACI,cAAC,GAAD,UACKD,EAAMqK,SAGf,cAAC,GAAD,CACIrF,GAAIhF,EAAMgF,GACVqJ,OAAQrO,EAAM8K,KACdmD,SAAO,EACPjB,MAAOhN,EAAMgN,MACbE,UAAWlN,EAAMkN,gBCXlBmE,GA9Bc,SAAArR,GACzB,IACMsO,EADSb,cACOa,OAChBgD,EAAazJ,iBAAyB,MAS5C,OACI,qBAAK5H,UAAU,qGAAf,SAEI,uBAAMiI,SAVQ,SAACnB,GAAmC,IAAD,EACrDA,EAAEoB,iBACF,IAAM8F,EAAO,UAAGqD,EAAWlJ,eAAd,aAAG,EAAoB/D,O5BOf,SAACiK,EAAgBL,GAAjB,OAA2CpI,EAAIe,KAAJ,8BAAgC0H,GAAUL,I4BN1GsD,CAAcjD,EAAQ,CAAEjE,KAAM4D,IACzBzF,MAAK,SAAAC,GAAG,OAAIE,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAAE9H,WAAYuI,SAC1DC,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,UAKpC/I,UAAU,oDAAzC,UACI,cAAC,EAAD,CACIkD,YAAY,cACZzC,KAAK,OACL2C,SAAUiO,EACVlO,UAAQ,IAEZ,qBAAKnD,UAAU,OAAf,SACI,cAAC,EAAD,CAAeS,KAAK,SAApB,6BCmDL8Q,GApEe,SAAAxR,GAC1B,MAAwBmH,qBAAxB,mBAAOP,EAAP,KAAa6K,EAAb,KACA,EAAgCtK,qBAAhC,mBAAO6I,EAAP,KAAiB0B,EAAjB,KACMlK,EAAUC,cAEV6G,EADSb,cACOa,OAoBtB,OAlBAP,qBAAU,W7BVW,IAAC/I,K6BWRsJ,E7BXuBzI,EAAII,IAAJ,gBAAiBjB,K6BY7CwD,MAAK,SAAAC,GACFgJ,EAAQhJ,EAAIC,SAEfO,OAAM,SAAAC,GACH1B,EAAQkH,SACR/F,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,S7BPhC,SAACsF,EAAiBjI,GAAlB,OAAsCR,EAAII,IAAJ,8BAA+BqI,EAA/B,mBAAgDjI,I6BUnHsL,CAAsBrD,EAAQ,IACzB9F,MAAK,SAAAC,GAAG,OAAIiJ,EAAYjJ,EAAIC,SAC5BO,OAAM,SAAAC,GACH1B,EAAQkH,SACR/F,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WAE9D,CAACsF,EAAQ9G,IAGR,eAAC7F,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,UAMI,cAAC,GAAD,IACA,cAAC,EAAD,UACI,sBAAKjB,UAAU,gHAAf,UAEK2G,GACG,cAAC,GAAD,CACI5B,GAAI4B,EAAKiJ,IACT/E,KAAMlE,EAAKkE,KACX3E,MAAOS,EAAKT,MACZkE,KAAMzD,EAAKyD,KACX2C,MAAOpG,EAAKoG,MACZE,UAAWtG,EAAKsG,UAChBgE,KAAMtK,EAAKqK,UAAUhB,WACrB7J,KAAMQ,EAAKR,OAGnB,cAAC,GAAD,IAdJ,OAeK4J,QAfL,IAeKA,OAfL,EAeKA,EAAUE,KAAI,SAAAjC,GACX,OACI,cAAC,GAAD,CACIjJ,GAAIiJ,EAAQ4B,IACZ/E,KAAMmD,EAAQnD,KACdoG,KAAMjD,EAAQgD,UAAUhB,WACxB5F,KAAM4D,EAAQ5D,KACd2C,MAAOiB,EAAQjB,MACfE,UAAWe,EAAQf,WACde,EAAQ4B,iBCvB9B+B,GAxCuB,SAAA5R,GAAU,IAAD,EAE3C,OACI,qBAAKC,UAAU,yCAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOA,UAAU,oBAAjB,SAAsCD,EAAMkD,QAC5C,oBAAGjD,UAAU,0BAAb,UACI,uBAAOA,UAAU,uCACbS,KAAK,OACLqB,IAAK/B,EAAMqD,SACXT,QAAS5C,EAAM6R,sBACfC,UAAQ,IACZ,sBAAM7R,UAAU,+DACZ2C,QAAS5C,EAAM6R,sBADnB,SAGK7R,EAAMiC,cAGdjC,EAAM+R,cACH,qBAAK9R,UAAU,gCAAf,SACI,oBAAIA,UAAU,mJAAd,mBAEKD,EAAMgS,kBAFX,aAEK,EAAkB9B,KAAI,SAAA+B,GACnB,OACI,oBAAIhS,UAAU,6HAEV2C,QAAS5C,EAAMkS,oBAFnB,SAIKD,GADIA,gBCtB9BE,GAfI3O,IAAIC,OAAO,CAC1B0C,MAAO3C,IAAIK,SACNK,IAAI,GACJC,IAAI,KACJf,WACLkG,YAAa9F,IAAIK,SACZK,IAAI,IACJC,IAAI,KACJf,WACLmN,QAAS/M,IAAI4O,QACRlO,IAAI,GACJhB,MAAM,QACNE,aCdM,OAA0B,sDCyJ1BiP,GApIW,WACtB,MAAoClL,qBAApC,mBAAOmL,EAAP,KAAmBC,EAAnB,KACA,EAAwCpL,oBAAkB,GAA1D,mBAAO4K,EAAP,KAAqBS,EAArB,KACA,EAA8CrL,mBAAmB,IAAjE,mBAAOsL,EAAP,KAAwBC,EAAxB,KACA,EAAwCvL,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMG,EAAUC,cACVyC,EAAWrC,iBAAyB,MACpCsC,EAAiBtC,iBAA4B,MAC7C8K,EAAkB9K,iBAAyB,MAEjDkG,qBAAU,WACN/H,IACKwC,MAAK,SAAAC,GACF,IAAM8H,EAA0B9H,EAAIC,KAC9BkK,EAAyB,GAC/BrC,EAAQsC,SAAQ,SAAAlC,GAAM,OAAIiC,EAAa7J,KAAK4H,EAAOxK,UACnDoM,EAAcK,MAEjB3J,OAAM,SAAAC,GACH1B,EAAQkH,SACR/F,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,WAE9D,CAACxB,IAmDJ,OACI,eAAC7F,EAAA,EAAOQ,QAAR,CACIN,SAAUjB,EACVwB,QAAQ,SACRC,QAAQ,UACRnB,KAAK,OAJT,UAMI,cAAC,GAAD,IACA,eAAC,EAAD,WACI,cAAC,GAAD,CACI6K,QAAQ,eACR5F,MAAM,WACNmD,YAAY,yGACZ2C,WAAW,SACXC,iBAAiB,aACjBC,aAAc2G,KAElB,qBAAK7S,UAAU,+EAAf,SACI,sBAAKA,UAAU,kIAAf,UAEI,cAAC,EAAD,uBACA,uBAAMiI,SA9CJ,SAACnB,GAAmC,IAAD,IACrDA,EAAEoB,iBACF,IjCvDmB4K,EiCuDb5M,EAAK,UAAG+D,EAAS9B,eAAZ,aAAG,EAAkB/D,MAC1BiF,EAAW,UAAGa,EAAe/B,eAAlB,aAAG,EAAwB/D,MACpCgE,EAAU8J,GAAW7J,SAAS,CAClCnC,QACAmD,cACAiH,QAASkC,IAHLpK,MAKJA,EACAhB,EAAgBgB,EAAME,UjC/DPwK,EiCiEJ,CACP5M,QACAkE,KAAMf,EACNlD,KAAMqM,GjCpE6B5M,EAAIe,KAAK,eAAgBmM,IiCsE3DvK,MAAK,SAAAC,GACFjB,EAAQuB,KAAK,YACbJ,IAAMC,QAAQH,EAAIC,KAAKH,QAAS,CAAE9H,WAAYuI,SAEjDC,OAAM,SAAAC,GAAG,OAAIP,IAAMN,MAAMa,EAAIC,SAAST,KAAKH,QAAS,CAAE9H,WAAYuI,UAyB5B/I,UAAU,0EAAzC,UAEI,cAAC,EAAD,CACIkD,YAAY,+CACZD,MAAM,aACNxC,KAAK,OACL2C,SAAU6G,EACV9G,UAAQ,IAEZ,cAAC,GAAD,CACIF,MAAM,mBACNC,YAAY,mCACZyG,MAAO,IACPI,YAAaG,EACb/G,UAAQ,IAEZ,cAAC,GAAD,CAAcF,MAAM,OAChB8O,WAAYM,EACZG,gBAAiBA,EACjBP,oBArFC,SAACnL,GAC1B,IAAMiM,EAAcjM,EAAE+C,cAAcmJ,YACpCP,GAAmB,SAAAQ,GACf,IAAMC,EAAoBD,EAa1B,OAPKA,EAAapF,SAASkF,GAGvBG,EAAkBC,OAAOD,EAAkBE,QAAQL,GAAc,GAFjEG,EAAkBpK,KAAKiK,GAI1BL,EAAgBvK,QAA6B/D,MAAQ8O,EAAkBhC,KAAK,MAC7EmC,QAAQC,IAAIJ,GACLA,MAsEatB,sBA1FE,WAC1BW,GAAgB,SAAAgB,GAAS,OAAKA,MA0FNzB,aAAcA,EACd1O,SAAUsP,EANd,SAQI,cAAC,IAAD,CAAiB1S,UAAU,+BAE/B,qBAAKA,UAAU,OAAf,SACI,cAAC,EAAD,CAAeS,KAAK,SAApB,uBAGR,cAAC,GAAD,UAAe0G,gB,cCnExBqM,OAxDf,WACE,IAAMnM,EAAWC,eACXG,EAAWC,cACX5C,EAAkB8F,cAAoB,SAAAxF,GAAK,OAAIA,EAAMyF,KAAK/F,mBAchE,OAZAgJ,qBAAU,WlCW4BlI,EAAIe,KAAK,ckCT1C4B,MAAK,SAAAC,GACJnB,EAASlC,KACTkC,EAAS/B,EAAMkD,EAAIC,KAAK1D,KACxBsC,EAAS5B,EAAY+C,EAAIC,KAAKhF,WAC9B4D,EAAS3B,EAAmB8C,EAAIC,KAAKxD,qBAEtC+D,OAAM,SAAAC,SAER,CAAC5B,IAGF,qCACE,cAAC,IAAD,IACA,cAACS,EAAA,EAAD,CAAiB2L,iBAAe,EAAhC,SACE,eAAC,IAAD,CAAQhM,SAAUA,EAAlB,UACE,cAAC,IAAD,CAAOiM,KAAK,UAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAWC,OAAK,EAA5B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,uBAAuBC,OAAK,EAAxC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,+BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SAEI5O,EAEE,cAAC,IAAD,CAAU7E,GAAG,aADb,cAAC,EAAD,QAzByBwH,EAASmM,WC7BnCC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBxL,MAAK,YAAkD,IAA/CyL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCNCO,eAAe,CAC1BC,QAAS,CACLzJ,KAAM0J,KCIdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1BhB,M,mBCtBAiB,EAAOC,QAAU,CAAC,WAAa,8B,mBCA/BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,WAAa,iC","file":"static/js/main.afe57573.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\ninterface Props {\n    loginOnClick?: () => void;\n}\n\nconst HeroNavbar: React.FC<Props> = props => (\n    <div className=\"flex flex-wrap justify-between items-center pt-8 mb-8 md:mx-40 lg:mx-72 font-display font-bold\">\n        <ul className=\"flex items-center\">\n            <li className=\"\">\n                <Link to=\"/\" className=\"text-xl transition-border duration-300 border-2 border-transparent \n                hover:border-red py-4 px-8 text-lg text-syntax-yellow-darker rounded-full\">\n                    Home\n                </Link>\n            </li>\n        </ul>\n        <ul className=\"hidden md:flex items-center\">\n            <li>\n                <Link to=\"/login\" className=\"text-xl transition-border duration-300 border-2 border-transparent \n                hover:border-red py-4 px-7 text-lg text-syntax-yellow-darker rounded-full mx-3\">\n                    Login\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/signup\" className=\"text-xl transition-border duration-300 border-2 border-transparent \n                bg-grey-lighter hover:border-red py-4 px-8 text-lg text-syntax-yellow-darker rounded-full mx-5\">\n                    Sign Up\n                </Link>\n            </li>\n        </ul>\n    </div>\n);\n\nexport default HeroNavbar;","interface Props {\n    src: string;\n}\n\nconst Illustration: React.FC<Props> = (props) => (\n    <div className=\"flex flex-grow flex-col flex-wrap md:max-w-1/3 justify-center items-center text-white mx-8 md:mx-12 my-20 max-w-xs xl:max-w-sm\">\n        <img src={props.src} alt=\"Post Illustration\" />\n    </div>\n);\n\nexport default Illustration;","export const buttonVariants = {\n    hover: {\n        scale: 1.08,\n        transition: {\n            type: \"tween\",\n            duration: 0.4\n        }\n    }\n}\n\nexport const routeVariants = {\n    hidden: {\n        x: 250,\n        opacity: 0\n    },\n    visible: {\n        x: 0,\n        opacity: 1,\n        transition: {\n            type: \"tween\",\n            duration: 0.4,\n            ease: \"easeInOut\"\n        }\n    },\n    exit: {\n        x: -250,\n        opacity: 0,\n        transition: {\n            type: \"tween\",\n            duration: 0.4,\n            ease: \"easeInOut\"\n        }\n    }\n}\n\nexport const modalVariants = {\n    hidden: {\n        opacity: 0,\n        y: -100\n    },\n    visible: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            type: \"spring\",\n            stiffness: 170\n        }\n    },\n    exit: {\n        opacity: 0,\n        y: -100,\n        transition: {\n            type: \"tween\"\n        }\n    }\n}\n\nexport const backdropVariants = {\n    hidden: {\n        opacity: 0,\n        transition: {\n            type: \"tween\"\n        }\n    },\n    visible: {\n        opacity: 1,\n        transition: {\n            type: \"tween\"\n        }\n    }\n}\n\nexport const sidebarVariants = {\n    hidden: {\n        opacity: 0,\n        x: -250\n    },\n    visible: {\n        opacity: 1,\n        x: 0,\n        transition: {\n            type: \"tween\",\n            ease: \"circOut\",\n            duration: 0.6,\n            delay: 0.2\n        }\n    }\n}\n\nexport const cardVariants = {\n    hover: {\n        scale: 1.02,\n        y: -5,\n        transition: {\n            type: \"tween\",\n            duration: 0.5,\n            ease: \"backOut\"\n        }\n    }\n}","import { motion } from 'framer-motion';\nimport { buttonVariants } from '../../variants/index';\n\ninterface Props {\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\n    buttonRef?: React.RefObject<HTMLButtonElement>;\n}\n\nconst DangerButton: React.FC<Props> = props => (\n    <motion.button className=\"bg-red hover:bg-red-lighter hover:shadow-2xl transition-colors duration-300 mt-2 focus:outline-none\n    rounded-xl font-display text-grey font-bold text-l md:text-xl py-2 px-4 md:py-3 md:px-5 xl:px-7\"\n        variants={buttonVariants}\n        whileHover=\"hover\"\n        type={props.type}\n        ref={props.buttonRef}\n    >\n        {props.children}\n    </motion.button>\n);\n\nexport default DangerButton;","export default __webpack_public_path__ + \"static/media/discussion-illustration.e45661d2.svg\";","import HeroNavbar from '../../components/Navbars/HeroNavbar';\nimport Illustration from '../../components/Utilities/Illustration';\nimport classes from './Landing.module.scss';\nimport DangerButton from '../../components/Buttons/DangerButton';\nimport DiscussionIllustration from '../../assets/discussion-illustration.svg';\nimport { Link } from 'react-router-dom';\nimport { routeVariants } from '../../variants';\nimport { motion } from 'framer-motion';\n\nconst Landing: React.FC = () => {\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <div className={`mt-0 pt-0 ${classes.HeroHeader}`}>\n                <HeroNavbar />\n\n                <section className=\"flex flex-wrap justify-center h-1/2 md:h-3/4\">\n                    <div className=\"flex flex-grow flex-col flex-wrap w-full md:max-w-1/2 justify-center items-center md:items-start text-center md:text-left text-white mx-8 lg:mx-16 xl:mx-20 my-4 text-left\">\n                        <h1 className=\"text-4xl md:text-6xl text-red lg:text-8xl font-logo my-4 lg:my-7\">Devit</h1>\n                        <p className=\"text-2xl md:text-3xl lg:text-4xl font-display mb-8 md:mb-16\">A VIT Bhopal discussion forum.</p>\n                        <Link to=\"/threads\">\n                            <DangerButton>Get Started</DangerButton>\n                        </Link>\n                    </div>\n                    <Illustration src={DiscussionIllustration} />\n                </section>\n            </div>\n        </motion.section>\n    );\n}\n\nexport default Landing;","const PageBody: React.FC = props => {\n    /* Add pt-16 to this section if navbar is fixed instead of sticky */ \n    return (\n        < section className=\"flex flex-wrap w-screen h-screen box-border overflow-x-hidden scrollbar\" >\n            { props.children}\n        </section >\n    );\n}\n\nexport default PageBody;\n","import { motion } from 'framer-motion';\nimport { backdropVariants } from '../../variants/index';\n\ninterface Props {\n    clicked: () => void;\n}\n\nconst Backdrop: React.FC<Props> = (props) => (\n    <motion.div\n        className=\"flex justify-center items-center bg-black bg-opacity-50 fixed \n        w-screen h-screen z-40 fixed top-0 left-0 backdrop-filter backdrop-blur-lg\"\n        onClick={props.clicked}\n        variants={backdropVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"hidden\"\n    >\n        {props.children}\n    </motion.div>\n);\n\nexport default Backdrop;","const Heading: React.FC = props => (\n    <h3 className=\"font-display text-3xl sm:text-4xl xl:text-5xl text-center \n                text-syntax-yellow-darker my-2 sm:my-4 mx-2 sm:mx-3\">\n        {props.children}\n    </h3>\n)\n\nexport default Heading;","interface Props {\n    placeholder: string;\n    type: \"email\" | \"text\" | \"password\";\n    label?: string | undefined;\n    name?: string;\n    required?: boolean;\n    inputRef?: React.RefObject<HTMLInputElement>;\n}\n\nconst InputField: React.FC<Props> = props => {\n    const icon = props.children;\n    let leftIconClass;\n    if (icon) {\n        leftIconClass = \"has-icons-left\"\n    }\n\n    return (\n        <div className=\"field w-full mx-4 lg:mx-4 xl:mx-0\">\n            <label className=\"label font-normal\">{props.label}</label>\n            <div className={`control ${leftIconClass}`}>\n                <input\n                    className=\"input rounded-xl\"\n                    type={props.type}\n                    placeholder={props.placeholder}\n                    required={props.required}\n                    ref={props.inputRef} />\n                {icon && (\n                    <span className=\"icon is-small is-left flex justify-center items-center\">\n                        {icon}\n                    </span>\n                )}\n            </div>\n        </div>\n\n    );\n}\n\nexport default InputField;","import { motion } from 'framer-motion';\nimport { buttonVariants } from '../../variants/index';\n\ninterface Props {\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\n    buttonRef?: React.RefObject<HTMLButtonElement>;\n}\n\nconst SuccessButton: React.FC<Props> = props => (\n    <motion.button className=\"bg-green-darker hover:bg-green hover:shadow-2xl transition-colors duration-300 mt-2 focus:outline-none\n    rounded-xl font-display text-grey font-bold text-l md:text-xl py-2 px-4 md:py-3 md:px-5 xl:px-7\"\n        variants={buttonVariants}\n        whileHover=\"hover\"\n        type={props.type}\n        ref={props.buttonRef}\n    >\n        {props.children}\n    </motion.button>\n);\n\nexport default SuccessButton;","import Joi from 'joi';\n\nconst complexityCheck = (value: string, helpers: object) => {\n    // Check for lowercase characters\n    if (!/[a-z]/.test(value)) throw new Error()\n    // Check for uppercase characters\n    if (!/[A-Z]/.test(value)) throw new Error();\n    // Check for digits\n    if (!/\\d/.test(value)) throw new Error();\n\n    return value;\n}\n\nconst usernameValidation = (value: string, helpers: object) => {\n    if (!/^[a-zA-Z]/.test(value)) throw new Error();\n}\n\nconst loginSchema = Joi.object({\n    // The username field must match either email or username format\n    username: Joi.alternatives()\n        .try(\n            // Email validation\n            Joi.string()\n                .email({\n                    // Maybe whitelist domains to ['com', 'ru', 'org', 'dev', 'net', 'in']\n                    tlds: { allow: false }\n                })\n                .required(),\n\n            // Username Validation\n            Joi.string()\n                .alphanum()\n                .min(4)\n                .max(50)\n                .custom(usernameValidation, 'username validation')\n                .required()\n                .messages({\n                    'any.custom': \"Username must start with an uppercase or lowercase letter.\"\n                })\n        )\n        .required()\n        .messages({\n            'alternatives.match': \"Please enter either a valid email or a valid username.\"\n    }),\n    password: Joi.string()\n        .min(12)\n        .max(64)\n        .custom(complexityCheck, 'complexity check')\n        .required()\n        .label(\"Password\")\n        .messages({\n            'any.custom':\n                \"Password must have at least one lowercase character, one uppercase character and one number.\"\n        })\n});\n\nexport default loginSchema;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n        isAuthenticated: false,\n        id: undefined,\n        username: undefined,\n        permissionLevel: 1,\n    },\n    reducers: {\n        authenticate: state => {\n            state.isAuthenticated = true;\n        },\n        deauthenticate: state => {\n            state.isAuthenticated = false;\n        },\n        setId: (state, action) => {\n            state.id = action.payload\n        },\n        setUsername: (state, action) => {\n            state.username = action.payload;\n        },\n        setPermissionLevel: (state, action) => {\n            state.permissionLevel = action.payload;\n        }\n    }\n});\n\nexport const {\n    authenticate,\n    deauthenticate,\n    setId,\n    setUsername,\n    setPermissionLevel\n} = userSlice.actions;\n\nexport default userSlice.reducer;","import axios from 'axios';\nimport { ISignUp, ILogIn, IUpdateUser, IPostData, IThreadData, ICommentData } from './apiInterface';\n\nconst API = axios.create();\n\n// Thread API Routes\nexport const fetchAllThreads = () => API.get('/thrd');\nexport const fetchThread = (title: string) => API.get(`/thrd/${title}`);\nexport const createThread = (threadData: IThreadData) => API.post('/thrd/create', threadData);\nexport const updateThread = (title: string, threadData: IThreadData) => API.patch('/thrd/update', { title, threadData });\n\n\n// Posts API Routes\nexport const fetchAllPosts = () => API.get('/psts');\nexport const fetchPost = (id: string) => API.get(`/psts/${id}`);\nexport const fetchPostsBySearch = (title?: string, tags?: string, userId?: string) => API.get(`/psts/search?title=${title}&tags=${tags}&userId=${userId}`);\nexport const createPost = (postData: IPostData) => API.post('/psts/create', postData);\nexport const updatePost = (id: string, updatedPost: IPostData) => API.patch('/psts/update', { id, updatedPost });\nexport const reactPost = (id: string, action: 'like' | 'dislike') => API.patch(`/psts/react?id=${id}&action=${action}`);\nexport const deletePost = (id: string) => API.delete(`/psts/delete?id=${id}`);\n\n\n// Comments API Routes\nexport const fetchComment = (commentId: string) => API.get('/cmts/' + commentId);\nexport const fetchCommentsBySearch = (postId?: string, userId?: string) => API.get(`/cmts/search?postId=${postId}&userId=${userId}`);\nexport const createComment = (postId: string, comment: ICommentData) => API.post(`/cmts/create?postId=${postId}`, comment);\nexport const updateComment = (commentId: string, comment: ICommentData) => API.patch(`/cmts/update`, { id: commentId, comment });\nexport const reactComment = (commentId: string, action: 'like' | 'dislike') => API.patch(`/cmts/react?commentId=${commentId}&action=${action}`);\nexport const deleteComment = (commentId: string, postId: string) => API.delete(`/cmts/delete?postId=${postId}&commentId=${commentId}`);\n\n\n// User API Routes\nexport const logout = () => API.post('/usr/logout');\nexport const login = (loginData: ILogIn) => API.post('/usr/login', loginData);\nexport const signUp = (signupData: ISignUp) => API.post('/usr/signup', signupData);\nexport const getUser = (username: string) => API.get(`/usr/${username}`);\nexport const getUsername = (userId: string) => API.get(`/usr/username?userId=${userId}`);\nexport const updateUser = (updateData: IUpdateUser) => API.patch('/usr/update', updateData);\nexport const checkAuthenticated = () => API.post('/usr/check');","import { motion } from 'framer-motion';\nimport { modalVariants } from '../../variants/index';\n\nconst ModalContainer: React.FC = props => (\n\n    <motion.div className=\"flex flex-col justify-center items-center bg-grey-lighter rounded-2xl\n                w-10/12 sm:w-3/5 md:w-2/5 2xl:w-4/12 m-4 py-4 sm:py-6 xl:py-10 xl:px-8\"\n        onClick={e => e.stopPropagation()}\n        variants={modalVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"exit\"\n    >\n        {props.children}\n    </motion.div>\n);\n\nexport default ModalContainer;","const ErrorMessage: React.FC = props => (\n    <p className=\"font-display text-red text-lg text-center text-md mt-4 mx-2\">\n        {props.children}\n    </p>\n);\n\nexport default ErrorMessage;","import Backdrop from '../../Backdrop/Backdrop';\nimport Heading from '../../Utilities/Heading';\nimport InputField from '../../Utilities/InputField';\nimport { MailIcon, KeyIcon } from '@heroicons/react/solid';\nimport SuccessButton from '../../Buttons/SuccessButton';\nimport loginSchema from '../../../schema/loginSchema';\nimport { authenticate, setId, setPermissionLevel, setUsername } from '../../../store/userSlice';\nimport { login } from '../../../api/index';\nimport { AnimatePresence } from 'framer-motion';\nimport ModalContainer from '../ModalContainer';\n\nimport { useRef, useState, FormEvent } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { toast, Flip } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport ErrorMessage from '../../Utilities/ErrorMessage';\n\n\ninterface Props {\n    show: boolean;\n    backdropClicked: () => void;\n}\n\nconst LoginModal: React.FC<Props> = props => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const usernameRef = useRef<HTMLInputElement>(null);\n    const passwordRef = useRef<HTMLInputElement>(null);\n\n    const submitHandler = (e: FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        const username = usernameRef.current?.value;\n        const password = passwordRef.current?.value;\n\n        const { error } = loginSchema.validate({\n            username,\n            password\n        });\n\n        if (error) {\n            setErrorMessage(error.message);\n            return;\n        } else {\n            setErrorMessage(undefined);\n            login({\n                username,\n                password\n            })\n                .then(res => {\n                    // Set global application state to indicate that user is authenticated.\n                    dispatch(authenticate());\n                    // Save user data in global state\n                    dispatch(setId(res.data.id));\n                    dispatch(setUsername(res.data.username));\n                    dispatch(setPermissionLevel(res.data.permissionLevel));\n\n                    toast.success(res.data.message, {\n                        onOpen: () => {\n                            // If we're on the signup page, redirect on login\n                            // Else, just close the modal\n                            if (location.pathname === \"/signup\" ||\n                                location.pathname === \"/login\") {\n                                props.backdropClicked();\n                                history.push('/');\n                            }\n                            else\n                                props.backdropClicked()\n                        },\n                        transition: Flip\n                    });\n                })\n                .catch(err => {\n                    switch (err.response.status) {\n                        case 500:\n                            toast.error(\"Server unreachable\", { transition: Flip });\n                            break;\n                        case 401:\n                            toast.error(\"Username or password incorrect\", { transition: Flip });\n                            break;\n                        default:\n                            toast.error(err.response.data.message, { transition: Flip });\n                    }\n                });\n        }\n    }\n\n    return (\n        <AnimatePresence>\n            {props.show && (\n                <Backdrop clicked={props.backdropClicked}>\n                    <ModalContainer>\n                        <Heading> Login </Heading>\n                        <form onSubmit={submitHandler} className=\"mt-4 my-2 flex flex-col flex-1\">\n                            <InputField\n                                label=\"Email or Username\"\n                                placeholder=\"john.doe@example.com\"\n                                type=\"text\"\n                                inputRef={usernameRef}\n                            >\n                                <MailIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n                            <InputField\n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                inputRef={passwordRef}\n                            >\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n                            <div className=\"mt-4 flex justify-center align-center\">\n                                <SuccessButton type=\"submit\">Login</SuccessButton>\n                            </div>\n                        </form>\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\n                    </ModalContainer>\n                </Backdrop>\n            )}\n        </AnimatePresence>\n    );\n}\n\nexport default LoginModal;","import Joi from 'joi';\n\nconst threadSchema = Joi.object({\n    title: Joi.string()\n        .min(3)\n        .max(25)\n        .label(\"Title\")\n        .required(),\n    description: Joi.string()\n        .min(10)\n        .max(185)\n        .label(\"Description\")\n        .required()\n});\n\nexport default threadSchema;","import { useState } from 'react';\n\ninterface Props {\n    placeholder?: string;\n    textAreaRef?: React.RefObject<HTMLTextAreaElement>\n    required?: boolean;\n    limit: Number;\n    label?: string;\n}\n\nconst TextArea: React.FC<Props> = props => {\n    const [contentLength, setContentLength] = useState<Number>(0);\n    const [textColor, setTextColor] = useState<string>(\"grey-light\");\n\n    const fieldOnChangeHandler = (e: React.FormEvent<HTMLTextAreaElement>) => {\n        setContentLength(e.currentTarget.value.length);\n        if (e.currentTarget.value.length <= props.limit) {\n            setTextColor(\"grey-light\");\n        } else {\n            setTextColor(\"red\");\n        }\n    }\n\n    return (\n        <div className=\"flex flex-1 w-full flex-col items-end\">\n            <div className=\"flex w-full justify-between my-2 text-md\">\n                <p className={`text-syntax-yellow`}>{props.label}</p>\n                <p className={`text-${textColor}`}>{contentLength} / {props.limit}</p>\n            </div>\n            <textarea className=\"textarea rounded-2xl w-full\"\n                placeholder={props.placeholder}\n                onChange={fieldOnChangeHandler}\n                ref={props.textAreaRef} required={props.required}\n            />\n        </div>\n    );\n}\n\nexport default TextArea;","import Backdrop from '../../Backdrop/Backdrop';\nimport Heading from '../../Utilities/Heading';\nimport InputField from '../../Utilities/InputField';\nimport ErrorMessage from '../../Utilities/ErrorMessage';\nimport ModalContainer from '../ModalContainer';\nimport SuccessButton from '../../Buttons/SuccessButton';\nimport threadSchema from '../../../schema/theadSchema';\nimport { createThread } from '../../../api/index';\nimport { AnimatePresence } from 'framer-motion';\nimport { useState, useRef, FormEvent } from 'react';\nimport { toast, Flip } from 'react-toastify';\nimport TextArea from '../../Utilities/TextArea';\n\ninterface Props {\n    show: boolean;\n    backdropClicked: () => void;\n}\n\nconst CreateThreadModal: React.FC<Props> = props => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const titleRef = useRef<HTMLInputElement>(null);\n    const descriptionRef = useRef<HTMLTextAreaElement>(null);\n\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const title = titleRef.current?.value as string;\n        const description = descriptionRef.current?.value as string;\n\n        const { error } = threadSchema.validate({\n            title,\n            description\n        });\n\n        if (error)\n            setErrorMessage(error.message);\n        else {\n            setErrorMessage(undefined);\n            createThread({ title, body: description })\n                .then(res => {\n                    toast.success(res.data.message, { transition: Flip })\n                    props.backdropClicked();\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        }\n    }\n\n    return (\n        <AnimatePresence>\n            { props.show && (\n                <Backdrop clicked={props.backdropClicked}>\n                    <ModalContainer>\n                        <Heading>Create Thread</Heading>\n                        <form onSubmit={submitHandler}\n                            className=\"mt-4 my-2 flex flex-col flex-1 w-full px-12\">\n                            <InputField placeholder=\"Thread Title\" label=\"Thread Title\" type=\"text\"\n                                inputRef={titleRef} required\n                            />\n                            <TextArea textAreaRef={descriptionRef} placeholder=\"Thread Description\"\n                                limit={185} label=\"Thread Description\" required />\n                            <div className=\"mt-4 flex justify-center align-center\">\n                                <SuccessButton type=\"submit\">Create</SuccessButton>\n                            </div>\n                        </form>\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\n                    </ModalContainer>\n                </Backdrop>\n            )}\n        </AnimatePresence>\n    );\n}\n\nexport default CreateThreadModal;","interface Props {\n    clicked?: () => void;\n}\n\nconst NavLink: React.FC<Props> = (props) => (\n    <li>\n        <button className=\"transition-border duration-300 border-4 border-transparent hover:bg-grey-lighter\n        py-4 px-3 lg:px-5 lg:mx-1 w-full lg:w-auto text-lg font-medium text-syntax-yellow-darker focus:outline-none\"\n            onClick={props.clicked}\n        >\n            {props.children}\n        </button>\n    </li>\n)\n\nexport default NavLink;","import { Link } from 'react-router-dom';\nimport LoginModal from '../Modals/LoginModal/LoginModal';\nimport CreateThreadModal from '../Modals/CreateThreadModal/CreateThreadModal';\nimport { logout } from '../../api/index';\nimport { LogoutIcon } from '@heroicons/react/solid';\nimport { deauthenticate, setId, setUsername, setPermissionLevel } from '../../store/userSlice';\nimport { toast, Flip } from 'react-toastify';\nimport NavLink from './NavLink';\nimport { IStore } from '../../store/userInterface';\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport '../../scss/Navbar.scss';\n\nconst Navbar: React.FC = () => {\n    const [showLoginModal, setShowLoginModal] = useState(false);\n    const [showCreateThreadModal, setShowCreateThreadModal] = useState(false);\n    const dispatch = useDispatch();\n    const isAuthenticated = useSelector<IStore>(state => state.user.isAuthenticated);\n    const permissionLevel = useSelector<IStore>(state => state.user.permissionLevel) as number;\n    const username = useSelector<IStore>(state => state.user.username) as string;\n\n    const backdropClickHandler = () => {\n        setShowLoginModal(false);\n        setShowCreateThreadModal(false);\n    }\n    const loginClickHandler = () => setShowLoginModal(true);\n    const createThreadClickHandler = () => setShowCreateThreadModal(true);\n\n    const logoutClickHandler = () => {\n        logout()\n            .then(res => {\n                dispatch(deauthenticate());\n                dispatch(setId(undefined));\n                dispatch(setUsername(undefined));\n                dispatch(setPermissionLevel(1));\n                toast.success(res.data.message, { transition: Flip });\n            })\n            .catch(err => {\n                toast.error(err.response.data.message, { transition: Flip });\n            });\n    }\n\n    let rightNavLinks;\n\n    if (isAuthenticated) {\n        rightNavLinks = (\n            <>\n                {permissionLevel >= 3 && (\n                    <NavLink clicked={createThreadClickHandler}>\n                        Create Thread\n                    </NavLink>\n                )}\n                <Link to=\"/posts/new\">\n                    <NavLink>\n                        New Post\n                    </NavLink>\n                </Link>\n                <Link to={`/users/${username}`}>\n                    <NavLink>\n                        {(username?.length > 15)\n                            ? username.substring(0, 15) + '..'\n                            : username}\n                    </NavLink>\n                </Link>\n                <NavLink clicked={logoutClickHandler}>\n                    <div className=\"hidden lg:block\"> <LogoutIcon className=\"w-8 text-red-lighter\" /> </div>\n                    <div className=\"lg:hidden\"> Logout </div>\n                </NavLink>\n            </>\n        );\n    } else {\n        rightNavLinks = (\n            <>\n                <Link to=\"/signup\">\n                    <NavLink>\n                        Sign Up\n                    </NavLink>\n                </Link>\n                <NavLink clicked={loginClickHandler}>\n                    Login\n                </NavLink>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <CreateThreadModal show={showCreateThreadModal} backdropClicked={backdropClickHandler} />\n            <LoginModal show={showLoginModal} backdropClicked={backdropClickHandler} />\n            <nav className=\"flex flex-1 w-screen px-1 bg-grey sticky top-0 left-0 font-display font-medium z-30\"\n                id=\"navbar\">\n                <div className=\"flex flex-1 flex-wrap lg:flex-nowrap justify-between items-center\">\n                    <ul className=\"flex items-center px-6 self-stretch\">\n                        <li className=\"flex align-center self-stretch\">\n                            <Link to=\"/\" className=\"transition-border duration-300 border-4 border-transparent \n                            hover:bg-grey-lighter py-4 px-3 font-logo text-lg text-red\">\n                                Devit\n                            </Link>\n                        </li>\n                    </ul>\n\n                    <label htmlFor=\"hamburger-menu-toggle\" className=\"cursor-pointer lg:hidden border-4 border-transparent py-4 px-6\">\n                        <svg className=\"fill-current text-syntax-yellow-darker\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n                            <title>Menu</title>\n                            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"></path>\n                        </svg>\n                    </label>\n                    <input className=\"hidden\" type=\"checkbox\" id=\"hamburger-menu-toggle\" />\n\n                    <div className=\"hidden lg:flex lg-w-min lg:items-center lg:justify-end w-full lg:px-6\" id=\"hamburger-menu\">\n                        <ul className=\"lg:flex items-center\">\n                            {rightNavLinks}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </>\n    );\n};\n\nexport default Navbar;","import { motion } from 'framer-motion';\nimport { sidebarVariants } from '../../variants/index';\nimport Illustration from '../Utilities/Illustration';\n\nimport '../../scss/sidebar.scss';\n\ninterface Props {\n    logo?: boolean;\n    title?: string;\n    description?: string\n    illustration: string;\n    titleColor?: string\n    descriptionColor?: string\n    bgColor: string;\n}\n\nconst Sidebar: React.FC<Props> = props => {\n    const bgMap = new Map();\n    bgMap.set('yellow', 'sideBgYellow');\n    bgMap.set('grey-lighter', 'sideBgGreyLighter');\n\n    const titleMap = new Map();\n    titleMap.set('yellow', 'sideTitleYellow');\n\n    const borderMap = new Map();\n    borderMap.set('yellow', 'sideBorderYellow');\n\n    const descMap = new Map();\n    descMap.set('yellow', 'sideDescYellow');\n    descMap.set('grey-darker', 'sideDescGreyDarker');\n    descMap.set('grey-light', 'sideDescGreyLight');\n\n    return (\n        <motion.div className={`sticky top-0 left-0 self-start min-h-screen hidden xl:block xl:w-3/12\n        px-5 ${bgMap.has(props.bgColor) ? bgMap.get(props.bgColor) : 'sideBgDefault'} flex flex-col items-start`}\n            variants={sidebarVariants} initial=\"hidden\"\n            animate=\"visible\"\n        >\n            {props.logo &&\n                <h2 className=\"font-logo text-xl text-red text-left pt-28 mx-2 my-4\">Devit</h2>\n            }\n\n            {props.title && (\n                <>\n                    <h2 className={`font-display font-medium text-6xl `+\n                        `${titleMap.has(props.titleColor) ? titleMap.get(props.titleColor) : 'sideTitleDefault'} `+\n                        `text-left pt-20 mx-2 my-4`}>\n                        {props.title}\n                    </h2>\n                    <hr className={`border-2 ${borderMap.get('yellow')} rounded-2xl`} />\n                </>\n            )}\n\n            <p className={`font-body text-2xl tracking-wider `+\n                `${descMap.has(props.descriptionColor) ? descMap.get(props.descriptionColor) : 'sideDescDefault'} `+\n                `text-left mx-2 mt-4 xl:mb-20 2xl:mb-32`}>\n                {props.description}\n            </p>\n            <Illustration src={props.illustration} />\n        </motion.div>\n    )\n};\n\nexport default Sidebar;","import Joi from 'joi';\n\nconst complexityCheck = (value: string, helpers: object) => {\n    // Check for lowercase characters\n    if (!/[a-z]/.test(value)) throw new Error()\n    // Check for uppercase characters\n    if (!/[A-Z]/.test(value)) throw new Error();\n    // Check for digits\n    if (!/\\d/.test(value)) throw new Error();\n\n    return value;\n}\n\nconst usernameValidation = (value: string, helpers: object) => {\n    if (!/^[a-zA-Z]/.test(value)) throw new Error();\n}\n\nconst registrationSchema = Joi.object({\n    email: Joi.string()\n        .email({\n            // Maybe whitelist domains to ['com', 'ru', 'org', 'dev', 'net', 'in']\n            tlds: { allow: false }\n        })\n        .label(\"Email\")\n        .required(),\n    username: Joi.string()\n        .alphanum()\n        .min(4)\n        .max(50)\n        .custom(usernameValidation, 'username validation')\n        .required()\n        .label(\"Username\")\n        .messages({\n            'any.custom': \"Username must start with an uppercase or lowercase letter.\"\n        }),\n    password: Joi.string()\n        .min(12)\n        .max(64)\n        .custom(complexityCheck, 'complexity check')\n        .required()\n        .label(\"Password\")\n        .messages({\n            'any.custom':\n                \"Password must have at least one lowercase character, one uppercase character and one number.\"\n        }),\n    confirmPassword: Joi.string()\n        .valid(Joi.ref('password'))\n        .required()\n        .label(\"Confirm Password\")\n        .messages({\n            'any.only': 'Passwords do not match'\n        })\n});\n\nexport default registrationSchema;","export default __webpack_public_path__ + \"static/media/securelogin-illustration.d4696db7.svg\";","import PageBody from '../../components/Utilities/PageBody';\nimport Navbar from '../../components/Navbars/Navbar';\nimport InputField from '../../components/Utilities/InputField';\nimport { MailIcon, UserIcon, KeyIcon } from '@heroicons/react/solid';\nimport SuccessButton from '../../components/Buttons/SuccessButton';\nimport Heading from '../../components/Utilities/Heading';\nimport Sidebar from '../../components/Utilities/Sidebar';\nimport { signUp } from '../../api/index';\nimport registrationSchema from '../../schema/registrationSchema';\nimport { motion } from 'framer-motion';\nimport { routeVariants } from '../../variants/index';\n\nimport { toast, Flip } from 'react-toastify';\nimport { useState, useRef, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport SecureLoginIllustration from '../../assets/securelogin-illustration.svg';\nimport classes from './Signup.module.scss';\nimport ErrorMessage from '../../components/Utilities/ErrorMessage';\n\nconst Signup: React.FC = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const history = useHistory();\n\n    const emailRef = useRef<HTMLInputElement>(null);\n    const usernameRef = useRef<HTMLInputElement>(null);\n    const passwordRef = useRef<HTMLInputElement>(null);\n    const confirmPasswordRef = useRef<HTMLInputElement>(null);\n\n    const submitHandler = (e: FormEvent<HTMLFormElement>): void => {\n        const email = emailRef.current?.value;\n        const username = usernameRef.current?.value;\n        const password = passwordRef.current?.value;\n        const confirmPassword = confirmPasswordRef.current?.value;\n\n        e.preventDefault();\n\n        const { error } = registrationSchema.validate({\n            email,\n            username,\n            password,\n            confirmPassword\n        });\n\n        // If there's a validation error, show error message, else send request.\n        if (error) {\n            setErrorMessage(error.message);\n            return;\n        } else {\n            setErrorMessage(undefined);\n            signUp({ email, username, password })\n                .then(res => {\n                    toast.success(res.data.message, {\n                        onOpen: () => history.push('/'),\n                        transition: Flip\n                    });\n                })\n                .catch(err => {\n                    if (err.response.status === 500) {\n                        toast.error(\"Server unreachable\",\n                            { transition: Flip }\n                        );\n                    } else {\n                        toast.error(err.response.data.message, { transition: Flip });\n                    }\n                });\n        }\n    }\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <Navbar />\n            <PageBody>\n                <Sidebar\n                    logo\n                    description=\"Engage in meaningful VIT Bhopal discussions.\"\n                    descriptionColor=\"grey-darker\"\n                    bgColor=\"yellow\"\n                    illustration={SecureLoginIllustration}\n                />\n\n                {/* Signup div */}\n                <div className=\"flex flex-1 justify-center items-center mt-8 mb-20\">\n                    <div className={`w-11/12 md:w-3/5 2xl:w-2/5 m-4 py-3 sm:py-6 xl:py-10 xl:px-8\n        bg-grey-lighter rounded-3xl ${classes.Signup} flex flex-col justify-start items-center`}>\n                        <Heading>\n                            Get your access to Devit\n                        </Heading>\n                        <form onSubmit={submitHandler} className=\"w-full mt-4 mb-2 mx-4 flex flex-col items-center\">\n                            <InputField placeholder=\"john.doe@example.com\" type=\"email\" name=\"email\" required\n                                label=\"Email\" inputRef={emailRef} >\n                                <MailIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n\n                            <InputField placeholder=\"johndoe\" type=\"text\" name=\"username\" required\n                                label=\"Username\" inputRef={usernameRef} >\n                                <UserIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n\n                            <InputField placeholder=\"Password\" type=\"password\" name=\"password\" required\n                                label=\"Password\" inputRef={passwordRef} >\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n\n                            <InputField placeholder=\"Confirm Password\" type=\"password\" required\n                                label=\"Confirm Password\" inputRef={confirmPasswordRef} >\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n\n                            <SuccessButton type=\"submit\">Sign Up</SuccessButton>\n                        </form>\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\n                    </div>\n                </div>\n            </PageBody>\n        </motion.section>\n    );\n}\n\nexport default Signup;","export default __webpack_public_path__ + \"static/media/authentication-illustration.1f9133aa.svg\";","import PageBody from '../../components/Utilities/PageBody';\nimport Navbar from '../../components/Navbars/Navbar';\nimport InputField from '../../components/Utilities/InputField';\nimport { UserIcon, KeyIcon } from '@heroicons/react/solid';\nimport SuccessButton from '../../components/Buttons/SuccessButton';\nimport Heading from '../../components/Utilities/Heading';\nimport Sidebar from '../../components/Utilities/Sidebar';\nimport { login } from '../../api/index';\nimport { authenticate, setUsername, setPermissionLevel, setId } from '../../store/userSlice';\nimport loginSchema from '../../schema/loginSchema';\nimport { motion } from 'framer-motion';\nimport { routeVariants } from '../../variants/index';\n\nimport { toast, Flip } from 'react-toastify';\nimport { useState, useRef, FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthenticationIllustration from '../../assets/authentication-illustration.svg';\nimport classes from './Login.module.scss';\nimport ErrorMessage from '../../components/Utilities/ErrorMessage';\n\nconst Login: React.FC = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const usernameRef = useRef<HTMLInputElement>(null);\n    const passwordRef = useRef<HTMLInputElement>(null);\n\n    const submitHandler = (e: FormEvent<HTMLFormElement>): void => {\n        const username = usernameRef.current?.value;\n        const password = passwordRef.current?.value;\n\n        e.preventDefault();\n\n        const { error } = loginSchema.validate({\n            username,\n            password,\n        });\n\n        // If there's a validation error, show error message, else send request.\n        if (error) {\n            setErrorMessage(error.message);\n            return;\n        } else {\n            setErrorMessage(undefined);\n            login({\n                username,\n                password\n            })\n                .then(res => {\n                    // Set global application state to indicate that user is authenticated.\n                    dispatch(authenticate());\n                    // Save user data in global state\n                    dispatch(setId(res.data.id));\n                    dispatch(setUsername(res.data.username));\n                    dispatch(setPermissionLevel(res.data.permissionLevel));\n\n                    toast.success(res.data.message, {\n                        onOpen: () => {\n                            // Redirect to / on successful login\n                            history.push('/');\n                        }\n                    });\n                })\n                .catch(err => {\n                    switch (err.response.status) {\n                        case 500:\n                            toast.error(\"Server unreachable\", { transition: Flip });\n                            break;\n                        case 401:\n                            toast.error(\"Username or password incorrect\", { transition: Flip });\n                            break;\n                        default:\n                            toast.error(err.response.data.message, { transition: Flip });\n                    }\n                });\n        }\n    }\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <Navbar />\n            <PageBody>\n                {/* Sidebar */}\n                <Sidebar\n                    logo\n                    description=\"Engage in meaningful VIT Bhopal discussions.\"\n                    descriptionColor=\"grey-darker\"\n                    bgColor=\"yellow\"\n                    illustration={AuthenticationIllustration}\n                />\n\n                {/* Login div */}\n                <div className=\"flex flex-1 justify-center items-center\">\n                    <div className={`w-11/12 md:w-3/5 2xl:w-2/5 m-4 py-3 sm:py-6 xl:py-10 xl:px-8 bg-grey-lighter \n                    rounded-3xl ${classes.Login} flex flex-col justify-start items-center`}>\n                        <Heading>\n                            Login to Devit\n                        </Heading>\n                        <form onSubmit={submitHandler} className=\"w-full mt-4 mb-2 mx-4 flex flex-col items-center\">\n                            <InputField placeholder=\"john.doe@example.com\" type=\"text\" name=\"username\" required\n                                label=\"Username or Email\" inputRef={usernameRef} >\n                                <UserIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n\n                            <InputField placeholder=\"Password\" type=\"password\" name=\"password\" required\n                                label=\"Password\" inputRef={passwordRef} >\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\n                            </InputField>\n\n                            <SuccessButton type=\"submit\">Login</SuccessButton>\n                        </form>\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\n                    </div>\n                </div>\n            </PageBody>\n        </motion.section>\n    );\n}\n\nexport default Login;","const CardTitle: React.FC = props => (\n    <h2 className=\"text-display font-display text-xl md:text-2xl 2xl:text-3xl text-syntax-yellow my-2\">\n        {props.children}\n    </h2>\n);\n\nexport default CardTitle;","import { ArrowUpIcon, ArrowDownIcon, AnnotationIcon, TrashIcon } from '@heroicons/react/solid';\nimport { IStore } from '../../store/userInterface';\nimport { useLocation, useHistory, useParams, Link } from 'react-router-dom';\nimport { reactComment, reactPost, deleteComment, deletePost } from '../../api/index';\nimport { toast, Flip } from \"react-toastify\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\ninterface Props {\n    id: string; // The id of the post of the comment depending on which card the component is on\n    votes: [string];\n    downVotes: [string]\n    showComments?: boolean; // Do we want to show the comments icon at the right?\n    comment?: boolean; // Does this reactions element belong to a CommentCard or a PostCard?\n    threadName?: string\n    author?: string;\n}\n\ninterface RouteParams {\n    postId: string;\n}\n\nconst CardReactions: React.FC<Props> = props => {\n    const [votes, setVotes] = useState<[string]>();\n    const [downVotes, setDownVotes] = useState<[string]>();\n    const [userUpvoted, setUserUpvoted] = useState(false);\n    const [userDownvoted, setUserDownvoted] = useState(false);\n    const userId = useSelector<IStore>(state => state.user.id) as string;\n    const permissionLevel = useSelector<IStore>(state => state.user.permissionLevel) as number;\n    const params = useParams<RouteParams>();\n    const location = useLocation();\n    const history = useHistory();\n\n    const updateVotes = useCallback((passedVotes: [string], passedDownVotes: [string]) => {\n        if (passedVotes.includes(userId)) {\n            setUserUpvoted(true);\n            setUserDownvoted(false);\n        } else if (passedDownVotes.includes(userId)) {\n            setUserUpvoted(false);\n            setUserDownvoted(true);\n        } else {\n            setUserUpvoted(false);\n            setUserDownvoted(false);\n        }\n    }, [userId]);\n\n    useEffect(() => {\n        setVotes(props.votes);\n        setDownVotes(props.downVotes);\n        updateVotes(props.votes, props.downVotes);\n    }, [props.votes, props.downVotes, userId, updateVotes]);\n\n    const likeHandler = () => {\n        if (props.comment) {\n            reactComment(props.id, 'like')\n                .then(res => {\n                    setVotes(res.data.votes);\n                    setDownVotes(res.data.downVotes);\n                    updateVotes(res.data.votes, res.data.downVotes);\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        } else {\n            reactPost(props.id, 'like')\n                .then(res => {\n                    setVotes(res.data.votes);\n                    setDownVotes(res.data.downVotes);\n                    updateVotes(res.data.votes, res.data.downVotes);\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        }\n    }\n\n    const dislikeHandler = () => {\n        if (props.comment) {\n            reactComment(props.id, 'dislike')\n                .then(res => {\n                    setVotes(res.data.votes);\n                    setDownVotes(res.data.downVotes);\n                    updateVotes(res.data.votes, res.data.downVotes);\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        } else {\n            reactPost(props.id, 'dislike')\n                .then(res => {\n                    setVotes(res.data.votes);\n                    setDownVotes(res.data.downVotes);\n                    updateVotes(res.data.votes, res.data.downVotes);\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        }\n    }\n\n    const deleteHandler = () => {\n        if (props.comment) {\n            const postId = params.postId;\n            deleteComment(props.id, postId)\n                .then(res => {\n                    toast.success(res.data.message, { transition: Flip })\n                    history.replace(location.pathname);\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        } else {\n            deletePost(props.id)\n                .then(res => {\n                    toast.success(res.data.message, { transition: Flip })\n                    history.goBack();\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        }\n    }\n\n    // {/* Post actions (Like, Dislike, etc) */ }\n    return (\n        <div className=\"max-h-min flex justify-between items-center mt-4 px-8 py-4 md:px-12 md:py-6\n            xl:px-12 xl:py-4 bg-grey rounded-b-2xl\">\n            <div className=\"flex justify-start items-center\">\n                {userUpvoted ? (\n                    <ArrowUpIcon className=\"w-7 text-red-lighter hover:text-white cursor-pointer\"\n                        onClick={likeHandler}\n                    />) : (\n                    <ArrowUpIcon className=\"w-7 text-white hover:text-red-lighter cursor-pointer\"\n                        onClick={likeHandler}\n                    />\n                )}\n                < p className=\"mx-4 text-grey-light\">{votes?.length}</p>\n\n                {userDownvoted ? (\n                    <ArrowDownIcon className=\"w-7 text-syntax-purple hover:text-white cursor-pointer\"\n                        onClick={dislikeHandler}\n                    />) : (\n                    <ArrowDownIcon className=\"w-7 text-white hover:text-syntax-purple cursor-pointer\"\n                        onClick={dislikeHandler}\n                    />\n                )}\n                < p className=\"mx-4 text-grey-light\">{downVotes?.length}</p>\n            </div>\n            {props.showComments && (\n                <Link to={`/threads/${props.threadName}/${props.id}`}>\n                    <div className=\"flex justify-start items-center text-grey-light hover:text-red-lighter\">\n                        <AnnotationIcon className=\"w-8\" />\n                        <p className=\"mx-4 hidden md:block\">Comments</p>\n                    </div>\n                </Link>\n            )}\n            {!props.showComments && (userId === props.author || permissionLevel > 1) ? (\n                <div className=\"flex justify-start items-center text-grey-light hover:text-red-lighter\">\n                    <TrashIcon onClick={deleteHandler} className=\"text-red w-8 cursor-pointer\" />\n                </div>\n            ) : null}\n        </div>\n    );\n}\n\nexport default CardReactions;","const CardBody: React.FC = props => (\n    <p className=\"font-body text-md md:text-lg 2xl:text-xl text-white my-1 overflow-ellipsis\">\n        {props.children}\n    </p>\n);\n\nexport default CardBody;","import { Link, useParams } from 'react-router-dom';\nimport CardTitle from \"../CardTitle\";\nimport CardReactions from '../CardReactions';\n\nimport CardBody from \"../CardBody\";\n\ninterface Props {\n    id: string;\n    title: string;\n    body: string\n    votes: [string];\n    downVotes: [string];\n}\n\ninterface RouteParams {\n    threadName: string;\n}\n\nconst PostCard: React.FC<Props> = props => {\n    const params = useParams<RouteParams>();\n    const threadName = params.threadName;\n\n    return (\n        <div\n            className=\"flex flex-col max-h-72 justify-around w-11/12 md:w-10/12 xl:w-9/12 2xl:w-8/12\n            rounded-2xl bg-grey-lighter my-8 box-border\"\n        >\n            {/* Post title and body */}\n            <div className=\"px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:pt-8 cursor-pointer\">\n                <Link to={`/threads/${threadName}/${props.id}`}>\n                    <CardTitle>\n                        {props.title}\n                    </CardTitle>\n\n                    <hr className=\"mb-4 border-red-lighter\" />\n\n                    <CardBody>\n                        {props.body}\n                    </CardBody>\n                </Link>\n            </div>\n            <CardReactions\n                id={props.id}\n                votes={props.votes}\n                downVotes={props.downVotes}\n                showComments\n                threadName={threadName}\n            />\n        </div >\n    );\n}\n\nexport default PostCard;","import { KeyIcon, HeartIcon, BanIcon, TrendingUpIcon, CubeIcon, ChatIcon, DocumentReportIcon, GlobeIcon, SunIcon, ViewGridAddIcon } from '@heroicons/react/solid';\n\ninterface Props {\n    username?: string;\n    bio?: string;\n    score?: number;\n    permissionLevel?: number;\n    numberOfPosts?: number;\n    numberOfComments?: number;\n    joinedAt?: string;\n}\n\nconst ProfileCard: React.FC<Props> = props => {\n    const joinedAt = new Date(props.joinedAt || \"\").toUTCString().slice(0, -13);\n\n    return (\n        <div\n            className=\"flex flex-col justify-around w-11/12 md:w-10/12 xl:w-9/12 2xl:w-8/12\n            rounded-2xl backdrop-filter backdrop-blur-md bg-transparent my-8 border-2 border-syntax-purple\"\n        >\n            {/* Username and bio */}\n            <div className=\"px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:pt-8\">\n                <h2 className=\"flex justify-between text-display tracking-wider font-display text-2xl md:text-3xl 2xl:text-5xl text-syntax-purple my-2\">\n                    <div className=\"flex items-center justify-around\">\n                        {props.username}\n                        {props.permissionLevel && props.permissionLevel === 2 ? <GlobeIcon className=\"w-8 mx-4\"/> : null}\n                        {props.permissionLevel && props.permissionLevel === 3 ? <ViewGridAddIcon className=\"w-8 mx-4\"/> : null}\n                        {props.permissionLevel && props.permissionLevel === 4 ? <SunIcon className=\"w-8 mx-4\"/> : null}\n                    </div>\n                    <p className=\"text-lg md:text-lg 2xl:text-xl text-white my-2\">\n                        ({joinedAt})\n                    </p>\n                </h2>\n\n                <hr className=\"mb-4 border-syntax-purple\" />\n\n                <p className=\"font-body text-lg md:text-xl 2xl:text-2xl text-white my-1 overflow-ellipsis\">\n                    {(props.bio && props.bio?.length > 150) ? props.bio?.substring(0, 150)+'...' : props.bio}\n                </p>\n            </div>\n\n            {/* Score and like profile */}\n            <div className=\"max-h-min flex justify-between items-center mt-4 px-8 py-4 md:px-12 md:py-6 \n                xl:px-12 xl:py-4 text-xl\">\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\n                    <KeyIcon className=\"w-8\" />\n                    <p className=\"mx-4 hidden md:block\">Devit karma :</p>\n                    <p className=\"mx-2 font-black\"> {props.score} </p>\n                </div>\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\n                    <p className=\"mx-4 hidden md:block\">Badges :</p>\n                    { props.score && props?.score > 40 ? <HeartIcon className=\"w-8\" /> : null }\n                    { props.score && props?.score > 40 ? <TrendingUpIcon className=\"w-8\" /> : null }\n                    { props.score && props?.score > 40 ? <CubeIcon className=\"w-8\" /> : null }\n                    <BanIcon className=\"w-8\" />\n                </div>\n            </div>\n            \n            <div className=\"max-h-min flex justify-between items-center mt-4 px-8 py-4 md:px-12 md:py-6 \n                xl:px-12 xl:py-4 text-xl\">\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\n                    <DocumentReportIcon className=\"w-8\" />\n                    <p className=\"mx-4 hidden md:block\">Total Posts :</p>\n                    <p className=\"mx-2 font-black\"> {props.numberOfPosts} </p>\n                </div>\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\n                    <ChatIcon className=\"w-8\" />\n                    <p className=\"mx-4 hidden md:block\">Total Comments :</p>\n                    <p className=\"mx-2 font-black\"> {props.numberOfComments} </p>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default ProfileCard;","import PageBody from '../../components/Utilities/PageBody';\nimport Navbar from '../../components/Navbars/Navbar';\nimport PostCard from '../../components/Cards/PostCard/PostCard';\nimport ProfileCard from '../../components/Cards/ProfileCard/ProfileCard';\nimport { getUser, fetchPostsBySearch, } from '../../api/index';\nimport { IPost, IUser } from '../../api/modelsInterface';\nimport { toast, Flip } from 'react-toastify';\nimport { motion } from 'framer-motion';\nimport { routeVariants } from '../../variants/index';\n\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Heading from '../../components/Utilities/Heading';\n\nconst Profile: React.FC = () => {\n    const { username } = useParams<{ username: string }>();\n    const [userInfo, setUserInfo] = useState<IUser>();\n    const [userPosts, setUserPosts] = useState<Array<IPost>>([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        getUser(username)\n            .then(fetchedUser => {\n                // get user's posts\n                fetchPostsBySearch('', '', fetchedUser.data._id)\n                    .then(fetchedPost => setUserPosts(fetchedPost.data))\n                    .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n                // set user info\n                setUserInfo(fetchedUser.data);\n            })\n            .catch(err => {\n                toast.error(err.response.data.message, { transition: Flip })\n                history.goBack();\n            });\n    }, [username, history]);\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <Navbar />\n            <PageBody>\n\n                {/* Content Column */}\n                <div className=\"flex flex-1 flex-col items-center flex-wrap pt-8 pb-20 mx-2 box-border\">\n\n                    <ProfileCard\n                        username={userInfo?.username}\n                        bio={userInfo?.bio}\n                        score={userInfo?.score}\n                        permissionLevel={userInfo?.permissionLevel}\n                        numberOfPosts={userInfo?.posts.length}\n                        numberOfComments={userInfo?.comments.length}\n                        joinedAt={userInfo?.joinedAt.toString()}\n                    />\n\n                    <p className=\"text-4xl text-white mt-10\">\n                        {userInfo?.username}'s Posts:\n                    </p>\n                    <hr className=\"mb-4 mt-2 w-3/12 border-syntax-orange border-2 rounded-full\" />\n\n                    {userPosts?.map(post => {\n                        const postBody = (post.body.length > 250)\n                            ? post.body.substring(0, 250) + \"...\"\n                            : post.body;\n                        return (\n                            <PostCard\n                                id={post._id}\n                                title={post.title}\n                                body={postBody}\n                                votes={post.votes}\n                                downVotes={post.downVotes}\n                                key={post._id}\n                            />\n                        )\n                    })}\n\n                    {!userPosts.length ? (\n                        <Heading>This user currently has no posts.</Heading>\n                    ) : null}\n                </div>\n            </PageBody>\n        </motion.section>\n    );\n};\n\nexport default Profile;\n","import { cardVariants } from '../../../variants/index'\nimport CardTitle from '../CardTitle';\nimport CardBody from '../CardBody';\nimport { ChatAlt2Icon } from '@heroicons/react/solid';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport classes from './ThreadCard.module.scss';\n\ninterface Props {\n    title: string;\n    body: string;\n    numberOfPosts: Number;\n}\n\nconst ThreadCard: React.FC<Props> = props => {\n    let threadBody;\n    if (props.body.length > 70)\n        threadBody = props.body.substring(0, 60) + \"...\";\n    else\n        threadBody = props.body;\n\n    return (\n        <motion.div className={`flex flex-col justify-around w-11/12 md:w-5/12 xl:w-2/5 2xl:w-4/12 cursor-pointer max-h-72\n                            ${classes.ThreadCard} p-8 md:p-12 xl:px-12 xl:py-8 rounded-2xl bg-grey-lighter m-2 box-border`}\n            key={props.title}\n            variants={cardVariants}\n            whileHover=\"hover\"\n        >\n            <Link to={`/threads/${props.title}`}>\n                <CardTitle>\n                    {props.title}\n                </CardTitle>\n\n                <hr className=\"mb-4 border-red-lighter\" />\n\n                <CardBody>\n                    {threadBody}\n                </CardBody>\n                <div className=\"max-h-min flex justify-start items-center mt-4\">\n                    <ChatAlt2Icon className=\"w-8 text-red-lighter\" />\n                    <p className=\"mx-4 text-grey-light\">{props.numberOfPosts} posts</p>\n                </div>\n            </Link>\n        </motion.div>\n    );\n}\n\nexport default ThreadCard;","export default __webpack_public_path__ + \"static/media/chat-illustration.2dfa110a.svg\";","import PageBody from '../../components/Utilities/PageBody';\nimport Navbar from '../../components/Navbars/Navbar';\nimport { fetchAllThreads } from '../../api/index';\nimport { IThread } from '../../api/modelsInterface';\nimport { toast, Flip } from 'react-toastify';\nimport { motion } from 'framer-motion';\nimport { routeVariants } from '../../variants/index';\nimport Sidebar from '../../components/Utilities/Sidebar';\nimport ThreadCard from '../../components/Cards/ThreadCard/ThreadCard';\nimport ChatIllustration from '../../assets/chat-illustration.svg';\n\nimport { useEffect, useState } from 'react';\n\nconst Threads: React.FC = () => {\n    const [threads, setThreads] = useState<Array<IThread>>([]);\n\n    useEffect(() => {\n        fetchAllThreads()\n            .then(fetchedThreads => setThreads(fetchedThreads.data))\n            .catch(err => toast.error(err.response.data.message, { transition: Flip }))\n    }, []);\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <Navbar />\n            <PageBody>\n                {/* Sidebar */}\n                <Sidebar\n                    bgColor=\"grey-lighter\"\n                    title=\"Threads\"\n                    description=\"Explore top VIT Bhopal topics\"\n                    titleColor=\"yellow\"\n                    descriptionColor=\"grey-light\"\n                    illustration={ChatIllustration}\n                />\n\n                {/* Content Column */}\n                <div className=\"flex flex-1 justify-center flex-wrap pt-8 pb-20 mx-2 box-border\">\n                    {threads.map(thread => {\n                        return (\n                            <ThreadCard\n                                title={thread.title}\n                                body={thread.body}\n                                numberOfPosts={thread.numberOfPosts}\n                                key={thread.title}\n                            />\n                        )\n                    })}\n                </div>\n            </PageBody>\n        </motion.section>\n    );\n};\n\nexport default Threads;\n","export default __webpack_public_path__ + \"static/media/post-illustration.ab23041a.svg\";","import PageBody from '../../components/Utilities/PageBody';\nimport { routeVariants } from '../../variants/index';\nimport { fetchThread, fetchPostsBySearch } from '../../api/index';\nimport { IThread, IPost } from '../../api/modelsInterface';\nimport Sidebar from '../../components/Utilities/Sidebar';\nimport Navbar from '../../components/Navbars/Navbar';\nimport PostCard from '../../components/Cards/PostCard/PostCard';\nimport PostIllustration from '../../assets/post-illustration.svg';\nimport { motion } from 'framer-motion';\nimport { toast, Flip } from 'react-toastify';\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Heading from '../../components/Utilities/Heading';\n\ninterface RouteParams {\n    threadName: string;\n}\n\nconst ThreadDetails: React.FC = () => {\n    const [posts, setPosts] = useState<Array<IPost>>([]);\n    const [threadData, setThreadData] = useState<IThread>();\n    const { threadName } = useParams<RouteParams>();\n\n    // Fetch data for this thread\n    useEffect(() => {\n        fetchThread(threadName)\n            .then(res => {\n                setThreadData(res.data);\n            })\n            .catch(err => {\n                toast.error(err.response.data.message, { transition: Flip });\n            });\n    }, [threadName]);\n\n    // Get posts belonging to this particular thread.\n    useEffect(() => {\n        fetchPostsBySearch('', threadName, '')\n            .then(res => {\n                setPosts(res.data);\n            })\n            .catch(err => {\n                toast.error(err.response.data.message, { transition: Flip });\n            });\n    }, [threadName]);\n\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <Navbar />\n            <PageBody>\n                <Sidebar\n                    bgColor=\"grey-lighter\"\n                    title={threadName}\n                    description={threadData?.body}\n                    titleColor=\"yellow\"\n                    descriptionColor=\"grey-light\"\n                    illustration={PostIllustration}\n                />\n                {posts.length ? (\n                    <div className=\"flex flex-1 flex-col items-center flex-wrap pt-8 pb-20 mx-2 box-border\">\n                        {posts?.map(post => {\n                            let postBody;\n\n                            if (post.body.length > 250) {\n                                postBody = post.body.substring(0, 250) + \"...\"\n                            } else {\n                                postBody = post.body;\n                            }\n\n                            return (\n                                <PostCard\n                                    id={post._id}\n                                    title={post.title}\n                                    body={postBody}\n                                    votes={post.votes}\n                                    downVotes={post.downVotes}\n                                    key={post._id}\n                                />\n                            );\n                        })}\n                    </div>\n                ) : (\n                    <div className=\"mx-auto my-20\">\n                        <Heading>\n                            This thread is empty. Please create a post.\n                        </Heading>\n                    </div>\n                )\n                }\n            </PageBody>\n        </motion.section>\n    );\n}\n\nexport default ThreadDetails;","import CardTitle from \"../CardTitle\";\nimport CardBody from \"../CardBody\";\nimport CardReactions from '../CardReactions';\nimport { getUsername } from '../../../api/index';\nimport { toast, Flip } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\ninterface Props {\n    id: string;\n    user: string;\n    title: string;\n    body: string\n    votes: [string];\n    downVotes: [string];\n    tags: [string];\n    date: string;\n}\n\nconst FullPostCard: React.FC<Props> = props => {\n    const [username, setUsername] = useState<string>();\n    const history = useHistory();\n    const createdAt = new Date(props.date).toUTCString().slice(0, -13);\n\n    useEffect(() => {\n        getUsername(props.user)\n            .then(res => setUsername(res.data.username))\n            .catch(err => {\n                history.goBack();\n                toast.error(err.response.data.message, { transition: Flip });\n            });\n    }, [history, props.user]);\n\n    return (\n        <div\n            className=\"flex flex-col justify-around w-11/12 md:w-9/12 xl:w-7/12 rounded-2xl bg-grey-lighter \n            my-8 box-border\"\n        >\n            <div className=\"w-full flex justify-between items-center xl:mt-7 text-lg text-grey-light\n            px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:py-2\">\n                <Link to={`/users/${username}`}>\n                    <p className=\"font-bold hover:underline\">By: {username}</p>\n                </Link>\n                <p>{createdAt}</p>\n            </div>\n            {/* Post title and body */}\n            <div className=\"px-8 md:px-12 xl:px-12\">\n                <CardTitle>\n                    {props.title}\n                </CardTitle>\n\n                <hr className=\"mb-4 border-red-lighter\" />\n\n                <CardBody>\n                    {props.body}\n                </CardBody>\n                <div className=\"w-full flex justify-start items-center mt-4 xl:mt-7 text-lg text-grey-light\">\n                    <p>Tags: {props.tags.join(\", \")}</p>\n                </div>\n            </div>\n\n            <CardReactions\n                id={props.id}\n                author={props.user}\n                votes={props.votes}\n                downVotes={props.downVotes}\n            />\n        </div >\n    );\n}\n\nexport default FullPostCard;","import CardBody from '../CardBody';\nimport CardReactions from '../CardReactions';\nimport { getUsername } from '../../../api/index';\nimport { toast, Flip } from 'react-toastify';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\ninterface Props {\n    id: string;\n    user: string;\n    body: string;\n    votes: [string];\n    downVotes: [string];\n    date: string;\n}\n\nconst CommentCard: React.FC<Props> = props => {\n    const [username, setUsername] = useState<string>();\n    const history = useHistory();\n    const createdAt = new Date(props.date).toUTCString().slice(0, -13);\n\n    useEffect(() => {\n        getUsername(props.user)\n            .then(res => setUsername(res.data.username))\n            .catch(err => {\n                toast.error(err.response.data.message, { transition: Flip });\n                history.goBack();\n            })\n    }, [history, props.user]);\n\n    return (\n        <div className=\"flex flex-col justify-around w-11/12 md:w-9/12 xl:w-7/12 rounded-2xl bg-grey \n            mt-4 box-border\">\n\n            <div className=\"w-full flex justify-between items-center xl:mt-7 text-lg text-grey-light\n            px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:py-2\">\n                <Link to={`/users/${username}`}>\n                    <p className=\"font-bold hover:underline\">By: {username}</p>\n                </Link>\n                <p>{createdAt}</p>\n            </div>\n\n            <div className=\"px-8 md:px-12 xl:px-12\">\n                <CardBody>\n                    {props.body}\n                </CardBody>\n            </div>\n            <CardReactions\n                id={props.id}\n                author={props.user}\n                comment\n                votes={props.votes}\n                downVotes={props.downVotes}\n            />\n        </div>\n    );\n}\n\nexport default CommentCard;","import InputField from './InputField';\nimport SuccessButton from '../Buttons/SuccessButton';\nimport { createComment } from '../../api/index';\nimport { toast, Flip } from 'react-toastify';\nimport { FormEvent, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    postId: string;\n}\n\nconst AddComment: React.FC = props => {\n    const params = useParams<RouteParams>();\n    const postId = params.postId;\n    const commentRef = useRef<HTMLInputElement>(null);\n\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const comment = commentRef.current?.value as string;\n        createComment(postId, { body: comment })\n            .then(res => toast.success(res.data.message, { transition: Flip }))\n            .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n    }\n    return (\n        <div className=\"p-5 flex bg-grey-lighter justify-center items-center w-11/12 md:w-9/12 xl:w-7/12 \n        mb-4 rounded-2xl\">\n            <form onSubmit={submitHandler} className=\"flex flex-1 flex-wrap justify-around items-center\">\n                <InputField\n                    placeholder=\"Add Comment\"\n                    type=\"text\"\n                    inputRef={commentRef}\n                    required\n                />\n                <div className=\"mx-5\">\n                    <SuccessButton type=\"submit\">Comment</SuccessButton>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default AddComment;","import Navbar from '../../components/Navbars/Navbar';\nimport { toast, Flip } from 'react-toastify';\nimport { fetchPost, fetchCommentsBySearch } from '../../api/index';\nimport { IPost, IComment } from '../../api/modelsInterface';\nimport { motion } from 'framer-motion'\nimport { routeVariants } from '../../variants/index';\nimport FullPostCard from '../../components/Cards/FullPostCard/FullPostCard';\nimport PageBody from '../../components/Utilities/PageBody';\nimport CommentCard from '../../components/Cards/CommentCard/CommentCard';\nimport AddComment from '../../components/Utilities/AddComment';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\ninterface RouteParams {\n    postId: string;\n}\n\nconst PostDetails: React.FC = props => {\n    const [post, setPost] = useState<IPost>();\n    const [comments, setComments] = useState<Array<IComment>>();\n    const history = useHistory();\n    const params = useParams<RouteParams>();\n    const postId = params.postId;\n\n    useEffect(() => {\n        fetchPost(postId)\n            .then(res => {\n                setPost(res.data)\n            })\n            .catch(err => {\n                history.goBack();\n                toast.error(err.response.data.message, { transition: Flip })\n            });\n\n        fetchCommentsBySearch(postId, \"\")\n            .then(res => setComments(res.data))\n            .catch(err => {\n                history.goBack();\n                toast.error(err.response.data.message, { transition: Flip })\n            });\n    }, [postId, history]);\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <Navbar />\n            <PageBody>\n                <div className=\"flex flex-col flex-1 items-center px-2 py-2 pb-28 md:px-4 md:pt-4\n            xl:pt-2 xl:px-8 overflow-x-hidden scrollbar\">\n                    {post && (\n                        <FullPostCard\n                            id={post._id}\n                            user={post.user}\n                            title={post.title}\n                            body={post.body}\n                            votes={post.votes}\n                            downVotes={post.downVotes}\n                            date={post.createdAt.toString()}\n                            tags={post.tags}\n                        />\n                    )}\n                    <AddComment />\n                    {comments?.map(comment => {\n                        return (\n                            <CommentCard\n                                id={comment._id}\n                                user={comment.user}\n                                date={comment.createdAt.toString()}\n                                body={comment.body}\n                                votes={comment.votes}\n                                downVotes={comment.downVotes}\n                                key={comment._id}\n                            />\n                        );\n                    })}\n                </div>\n            </PageBody>\n        </motion.section>\n    );\n}\n\nexport default PostDetails;","import React from \"react\";\n\ninterface Props {\n    allThreads?: string[];\n    selectedThreads: string[] | undefined;\n    label?: string;\n    showDropdown: boolean;\n    inputRef: React.RefObject<HTMLInputElement>;\n    dropdownToggleHandler: () => void;\n    threadSelectHandler: (e: React.MouseEvent<HTMLLIElement>) => void;\n}\n\nconst TagsSelector: React.FC<Props> = props => {\n\n    return (\n        <div className=\"field w-full my-4 mx-4 lg:mx-4 xl:mx-0\">\n            <div className=\"field relative\">\n                <label className=\"label font-normal\">{props.label}</label>\n                <p className=\"control has-icons-right\">\n                    <input className=\"input rounded-xl px-4 cursor-pointer\"\n                        type=\"text\"\n                        ref={props.inputRef}\n                        onClick={props.dropdownToggleHandler}\n                        readOnly />\n                    <span className=\"icon is-small is-right flex justify-center items-center mx-2\"\n                        onClick={props.dropdownToggleHandler}\n                    >\n                        {props.children}\n                    </span>\n                </p>\n                {props.showDropdown && (\n                    <div className=\"p-5 absolute right-0 top-full\">\n                        <ul className=\"flex flex-col justify-start items-start scrollbar shadow-2xl\n                    text-left bg-grey-darker rounded-lg max-w-screen-sm overflow-y-scroll max-h-52 py-1\">\n                            {props.allThreads?.map(tag => {\n                                return (\n                                    <li className=\"w-full hover:bg-grey-lightest my-1 font-body cursor-pointer\n                                text-lg pl-4 pr-20 lg:pr-56 xl:pr-72 2xl:pr-96 py-3 text-white\"\n                                        onClick={props.threadSelectHandler}\n                                        key={tag}>\n                                        {tag}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default TagsSelector;","import Joi from 'joi';\n\nconst postSchema = Joi.object({\n    title: Joi.string()\n        .min(3)\n        .max(120)\n        .required(),\n    description: Joi.string()\n        .min(10)\n        .max(2000)\n        .required(),\n    threads: Joi.array()\n        .min(1)\n        .label(\"Tags\")\n        .required()\n});\n\nexport default postSchema;","export default __webpack_public_path__ + \"static/media/publish-post-illustration.3f77733d.svg\";","import PageBody from '../../components/Utilities/PageBody';\nimport { motion } from 'framer-motion';\nimport Sidebar from '../../components/Utilities/Sidebar';\nimport Navbar from '../../components/Navbars/Navbar';\nimport Heading from '../../components/Utilities/Heading';\nimport InputField from '../../components/Utilities/InputField';\nimport TagsSelector from '../../components/Utilities/TagsSelector';\nimport SuccessButton from '../../components/Buttons/SuccessButton';\nimport TextArea from '../../components/Utilities/TextArea';\nimport ErrorMessage from '../../components/Utilities/ErrorMessage';\nimport { routeVariants } from '../../variants/index';\nimport { fetchAllThreads, createPost } from '../../api/index';\nimport { IThread } from '../../api/modelsInterface';\nimport postSchema from '../../schema/postSchema';\nimport { toast, Flip } from 'react-toastify';\nimport PublishPostIllustration from '../../assets/publish-post-illustration.svg';\nimport { ChevronDownIcon } from '@heroicons/react/solid';\n\nimport { useState, useRef, FormEvent, useEffect, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst NewPost: React.FC = () => {\n    const [threadList, setThreadList] = useState<string[]>();\n    const [showDropdown, setShowDropdown] = useState<boolean>(false);\n    const [selectedThreads, setSelectedThreads] = useState<string[]>([]);\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const history = useHistory();\n    const titleRef = useRef<HTMLInputElement>(null);\n    const descriptionRef = useRef<HTMLTextAreaElement>(null);\n    const tagsSelectorRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        fetchAllThreads()\n            .then(res => {\n                const threads: Array<IThread> = res.data;\n                const threadTitles: string[] = [];\n                threads.forEach(thread => threadTitles.push(thread.title));\n                setThreadList(threadTitles);\n            })\n            .catch(err => {\n                history.goBack();\n                toast.error(err.response.data.message, { transition: Flip });\n            });\n    }, [history]);\n\n    const dropdownToggleHandler = () => {\n        setShowDropdown(prevState => !prevState);\n    }\n\n    const toggleThreadsHandler = (e: MouseEvent<HTMLLIElement>) => {\n        const threadTitle = e.currentTarget.textContent as string;\n        setSelectedThreads(prevSelected => {\n            const currentlySelected = prevSelected;\n\n            // Why doesn't this work though?\n            // console.log(e.currentTarget.textContent);\n\n            // If the thread isn't already selected, \"select\" or add it, otherwise remove it.\n            if (!prevSelected.includes(threadTitle)) {\n                currentlySelected.push(threadTitle);\n            } else {\n                currentlySelected.splice(currentlySelected.indexOf(threadTitle), 1);\n            }\n            (tagsSelectorRef.current as HTMLInputElement).value = currentlySelected.join(', ');\n            console.log(currentlySelected);\n            return currentlySelected\n        });\n    }\n\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const title = titleRef.current?.value as string;\n        const description = descriptionRef.current?.value as string;\n        const { error } = postSchema.validate({\n            title,\n            description,\n            threads: selectedThreads\n        });\n        if (error) {\n            setErrorMessage(error.message);\n        } else {\n            createPost({\n                title,\n                body: description,\n                tags: selectedThreads\n            })\n                .then(res => {\n                    history.push(\"/threads\");\n                    toast.success(res.data.message, { transition: Flip });\n                })\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\n        }\n    }\n\n    return (\n        <motion.section\n            variants={routeVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n        >\n            <Navbar />\n            <PageBody>\n                <Sidebar\n                    bgColor=\"grey-lighter\"\n                    title=\"New Post\"\n                    description=\"Tip: Give your post a short but catchy title and a proper description explaining everything in detail.\"\n                    titleColor=\"yellow\"\n                    descriptionColor=\"grey-light\"\n                    illustration={PublishPostIllustration}\n                />\n                <div className=\"flex flex-1 justify-center items-center flex-wrap mt-8 mb-20 mx-2 box-border\">\n                    <div className=\"bg-grey-lighter flex flex-col items-center w-11/12 md:w-9/12 xl:w-8/12 2xl:w-7/12\n                    m-4 py-6 sm:py-6 xl:py-10 xl:px-2 rounded-3xl\">\n                        <Heading>New Post</Heading>\n                        <form onSubmit={submitHandler} className=\"w-full mt-4 mb-2 mx-4 flex px-8 md:px-10\n                        lg:px-12 flex-col items-center\">\n                            <InputField\n                                placeholder=\"Enter your post title here. (Keep it short!)\"\n                                label=\"Post Title\"\n                                type=\"text\"\n                                inputRef={titleRef}\n                                required\n                            />\n                            <TextArea\n                                label=\"Post Description\"\n                                placeholder=\"Enter your post description here\"\n                                limit={2000}\n                                textAreaRef={descriptionRef}\n                                required\n                            />\n                            <TagsSelector label=\"Tags\"\n                                allThreads={threadList}\n                                selectedThreads={selectedThreads}\n                                threadSelectHandler={toggleThreadsHandler}\n                                dropdownToggleHandler={dropdownToggleHandler}\n                                showDropdown={showDropdown}\n                                inputRef={tagsSelectorRef}\n                            >\n                                <ChevronDownIcon className=\"w-2/3 text-syntax-yellow\" />\n                            </TagsSelector>\n                            <div className=\"mt-4\">\n                                <SuccessButton type=\"submit\">Post</SuccessButton>\n                            </div>\n                        </form>\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\n                    </div>\n                </div>\n            </PageBody>\n        </motion.section>\n    );\n}\n\nexport default NewPost;","import React from 'react';\nimport { Route, Switch, useLocation, Redirect } from 'react-router-dom';\nimport Landing from './screens/Landing/Landing';\nimport Signup from './screens/Signup/Signup';\nimport Login from './screens/Login/Login'\nimport Profile from './screens/Profile/Profile';\nimport Threads from './screens/Threads/Threads';\nimport ThreadDetails from './screens/ThreadDetails/ThreadDetails';\nimport PostDetails from './screens/PostDetails/PostDetails';\nimport NewPost from './screens/NewPost/NewPost';\nimport { ToastContainer } from 'react-toastify';\nimport { checkAuthenticated } from './api/index';\nimport { authenticate, setId, setUsername, setPermissionLevel } from './store/userSlice';\nimport { IStore } from './store/userInterface';\nimport { AnimatePresence } from 'framer-motion';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport './App.scss';\nimport './scss/ReactToastify.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const isAuthenticated = useSelector<IStore>(state => state.user.isAuthenticated);\n\n  useEffect(() => {\n    checkAuthenticated()\n      .then(res => {\n        dispatch(authenticate());\n        dispatch(setId(res.data.id));\n        dispatch(setUsername(res.data.username));\n        dispatch(setPermissionLevel(res.data.permissionLevel));\n      })\n      .catch(err => {\n      })\n  }, [dispatch]);\n\n  return (\n    <>\n      <ToastContainer />\n      <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.key}>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/users/:username\">\n            <Profile />\n          </Route>\n          <Route path=\"/threads\" exact>\n            <Threads />\n          </Route>\n          <Route path=\"/threads/:threadName\" exact>\n            <ThreadDetails />\n          </Route>\n          <Route path=\"/threads/:threadName/:postId\">\n            <PostDetails />\n          </Route>\n          <Route path=\"/posts/new\">\n            <NewPost />\n          </Route>\n          <Route path=\"/\">\n            {/* If user is not authenticated, show landing page, else redirect to /threads */}\n            {!isAuthenticated\n              ? <Landing />\n              : <Redirect to=\"/threads\" />\n            }\n          </Route>\n        </Switch>\n      </AnimatePresence>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from \"./userSlice\";\n\nexport default configureStore({\n    reducer: {\n        user: userReducer\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store/index';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeroHeader\":\"Landing_HeroHeader__8kfSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup___hXHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__Q1Av_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThreadCard\":\"ThreadCard_ThreadCard__a_wik\"};"],"sourceRoot":""}