{"version":3,"sources":["components/Navbars/HeroNavbar.tsx","components/Utilities/Illustration.tsx","variants/index.ts","components/Buttons/DangerButton.tsx","assets/discussion-illustration.svg","screens/Landing/Landing.tsx","components/Utilities/PageBody.tsx","components/Backdrop/Backdrop.tsx","components/Utilities/Heading.tsx","components/Utilities/InputField.tsx","components/Buttons/SuccessButton.tsx","schema/loginSchema.ts","store/userSlice.ts","api/index.ts","components/Modals/ModalContainer.tsx","components/Utilities/ErrorMessage.tsx","components/Modals/LoginModal/LoginModal.tsx","schema/theadSchema.ts","components/Utilities/TextArea.tsx","components/Modals/CreateThreadModal/CreateThreadModal.tsx","components/Navbars/NavLink.tsx","components/Navbars/Navbar.tsx","components/Utilities/Sidebar.tsx","schema/registrationSchema.ts","assets/securelogin-illustration.svg","screens/Signup/Signup.tsx","assets/authentication-illustration.svg","screens/Login/Login.tsx","components/Cards/CardTitle.tsx","components/Cards/CardReactions.tsx","components/Cards/CardBody.tsx","components/Cards/PostCard/PostCard.tsx","components/Cards/ProfileCard/ProfileCard.tsx","screens/Profile/Profile.tsx","components/Cards/ThreadCard/ThreadCard.tsx","assets/chat-illustration.svg","screens/Threads/Threads.tsx","assets/post-illustration.svg","screens/ThreadDetails/ThreadDetails.tsx","components/Cards/FullPostCard/FullPostCard.tsx","components/Cards/CommentCard/CommentCard.tsx","components/Utilities/AddComment.tsx","screens/PostDetails/PostDetails.tsx","components/Utilities/TagsSelector.tsx","schema/postSchema.ts","assets/publish-post-illustration.svg","screens/NewPost/NewPost.tsx","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx","screens/Landing/Landing.module.scss","screens/Signup/Signup.module.scss","screens/Login/Login.module.scss","components/Cards/ThreadCard/ThreadCard.module.scss"],"names":["HeroNavbar","props","className","to","Illustration","src","alt","buttonVariants","hover","scale","transition","type","duration","routeVariants","hidden","x","opacity","visible","ease","exit","modalVariants","y","stiffness","backdropVariants","sidebarVariants","delay","cardVariants","DangerButton","motion","button","variants","whileHover","ref","buttonRef","children","Landing","section","initial","animate","classes","HeroHeader","DiscussionIllustration","PageBody","Backdrop","div","onClick","clicked","Heading","InputField","leftIconClass","icon","label","placeholder","required","inputRef","SuccessButton","loginSchema","Joi","object","username","alternatives","try","string","email","tlds","allow","alphanum","min","max","custom","value","helpers","test","Error","messages","password","userSlice","createSlice","name","initialState","isAuthenticated","id","undefined","permissionLevel","reducers","authenticate","state","deauthenticate","setId","action","payload","setUsername","setPermissionLevel","actions","API","axios","create","baseURL","fetchAllThreads","get","fetchPostsBySearch","title","tags","userId","reactPost","patch","reactComment","commentId","login","loginData","post","getUsername","ModalContainer","e","stopPropagation","ErrorMessage","LoginModal","useState","errorMessage","setErrorMessage","dispatch","useDispatch","history","useHistory","location","useLocation","usernameRef","useRef","passwordRef","AnimatePresence","show","backdropClicked","onSubmit","preventDefault","current","error","validate","message","then","res","data","toast","success","onOpen","pathname","push","Flip","catch","err","response","status","threadSchema","description","TextArea","contentLength","setContentLength","textColor","setTextColor","limit","onChange","currentTarget","length","textAreaRef","CreateThreadModal","titleRef","descriptionRef","threadData","body","NavLink","Navbar","rightNavLinks","showLoginModal","setShowLoginModal","showCreateThreadModal","setShowCreateThreadModal","useSelector","user","backdropClickHandler","substring","htmlFor","xmlns","width","height","viewBox","d","Sidebar","bgMap","Map","set","titleMap","borderMap","descMap","has","bgColor","logo","titleColor","descriptionColor","illustration","registrationSchema","confirmPassword","valid","Signup","emailRef","confirmPasswordRef","SecureLoginIllustration","signupData","Login","AuthenticationIllustration","CardTitle","CardReactions","votes","setVotes","downVotes","setDownVotes","userUpvoted","setUserUpvoted","userDownvoted","setUserDownvoted","updateVotes","useCallback","passedVotes","passedDownVotes","includes","useEffect","likeHandler","comment","dislikeHandler","showComments","threadName","CardBody","PostCard","useParams","ProfileCard","joinedAt","Date","toUTCString","slice","bio","score","numberOfPosts","numberOfComments","Profile","userInfo","setUserInfo","userPosts","setUserPosts","getUser","fetchedUser","_id","fetchedPost","posts","comments","toString","map","postBody","ThreadCard","threadBody","Threads","threads","setThreads","fetchedThreads","ChatIllustration","thread","ThreadDetails","setPosts","setThreadData","PostIllustration","FullPostCard","createdAt","date","goBack","join","CommentCard","AddComment","postId","commentRef","createComment","PostDetails","setPost","setComments","fetchCommentsBySearch","TagsSelector","dropdownToggleHandler","readOnly","showDropdown","allThreads","tag","threadSelectHandler","postSchema","array","NewPost","threadList","setThreadList","setShowDropdown","selectedThreads","setSelectedThreads","tagsSelectorRef","threadTitles","forEach","PublishPostIllustration","postData","threadTitle","textContent","prevSelected","currentlySelected","splice","indexOf","console","log","prevState","App","exitBeforeEnter","path","exact","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.810d5e77.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    loginOnClick?: () => void;\r\n}\r\n\r\nconst HeroNavbar: React.FC<Props> = props => (\r\n    <div className=\"flex flex-wrap justify-between items-center pt-8 mb-8 md:mx-40 lg:mx-72 font-display font-bold\">\r\n        <ul className=\"flex items-center\">\r\n            <li className=\"\">\r\n                <Link to=\"/\" className=\"text-xl transition-border duration-300 border-2 border-transparent \r\n                hover:border-red py-4 px-8 text-lg text-syntax-yellow-darker rounded-full\">\r\n                    Home\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n        <ul className=\"hidden md:flex items-center\">\r\n            <li>\r\n                <Link to=\"/login\" className=\"text-xl transition-border duration-300 border-2 border-transparent \r\n                hover:border-red py-4 px-7 text-lg text-syntax-yellow-darker rounded-full mx-3\">\r\n                    Login\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/signup\" className=\"text-xl transition-border duration-300 border-2 border-transparent \r\n                bg-grey-lighter hover:border-red py-4 px-8 text-lg text-syntax-yellow-darker rounded-full mx-5\">\r\n                    Sign Up\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default HeroNavbar;","interface Props {\r\n    src: string;\r\n}\r\n\r\nconst Illustration: React.FC<Props> = (props) => (\r\n    <div className=\"flex flex-grow flex-col flex-wrap md:max-w-1/3 justify-center items-center text-white mx-8 md:mx-12 my-20 max-w-xs xl:max-w-sm\">\r\n        <img src={props.src} alt=\"Post Illustration\" />\r\n    </div>\r\n);\r\n\r\nexport default Illustration;","export const buttonVariants = {\r\n    hover: {\r\n        scale: 1.08,\r\n        transition: {\r\n            type: \"tween\",\r\n            duration: 0.4\r\n        }\r\n    }\r\n}\r\n\r\nexport const routeVariants = {\r\n    hidden: {\r\n        x: 250,\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        x: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            type: \"tween\",\r\n            duration: 0.4,\r\n            ease: \"easeInOut\"\r\n        }\r\n    },\r\n    exit: {\r\n        x: -250,\r\n        opacity: 0,\r\n        transition: {\r\n            type: \"tween\",\r\n            duration: 0.4,\r\n            ease: \"easeInOut\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const modalVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        y: -100\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: {\r\n            type: \"spring\",\r\n            stiffness: 170\r\n        }\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n        y: -100,\r\n        transition: {\r\n            type: \"tween\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const backdropVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        transition: {\r\n            type: \"tween\"\r\n        }\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            type: \"tween\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const sidebarVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        x: -250\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        x: 0,\r\n        transition: {\r\n            type: \"tween\",\r\n            ease: \"circOut\",\r\n            duration: 0.6,\r\n            delay: 0.2\r\n        }\r\n    }\r\n}\r\n\r\nexport const cardVariants = {\r\n    hover: {\r\n        scale: 1.02,\r\n        y: -5,\r\n        transition: {\r\n            type: \"tween\",\r\n            duration: 0.5,\r\n            ease: \"backOut\"\r\n        }\r\n    }\r\n}","import { motion } from 'framer-motion';\r\nimport { buttonVariants } from '../../variants/index';\r\n\r\ninterface Props {\r\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n    buttonRef?: React.RefObject<HTMLButtonElement>;\r\n}\r\n\r\nconst DangerButton: React.FC<Props> = props => (\r\n    <motion.button className=\"bg-red hover:bg-red-lighter hover:shadow-2xl transition-colors duration-300 mt-2 focus:outline-none\r\n    rounded-xl font-display text-grey font-bold text-l md:text-xl py-2 px-4 md:py-3 md:px-5 xl:px-7\"\r\n        variants={buttonVariants}\r\n        whileHover=\"hover\"\r\n        type={props.type}\r\n        ref={props.buttonRef}\r\n    >\r\n        {props.children}\r\n    </motion.button>\r\n);\r\n\r\nexport default DangerButton;","export default __webpack_public_path__ + \"static/media/discussion-illustration.e45661d2.svg\";","import HeroNavbar from '../../components/Navbars/HeroNavbar';\r\nimport Illustration from '../../components/Utilities/Illustration';\r\nimport classes from './Landing.module.scss';\r\nimport DangerButton from '../../components/Buttons/DangerButton';\r\nimport DiscussionIllustration from '../../assets/discussion-illustration.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { routeVariants } from '../../variants';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Landing: React.FC = () => {\r\n\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <div className={`mt-0 pt-0 ${classes.HeroHeader}`}>\r\n                <HeroNavbar />\r\n\r\n                <section className=\"flex flex-wrap justify-center h-1/2 md:h-3/4\">\r\n                    <div className=\"flex flex-grow flex-col flex-wrap w-full md:max-w-1/2 justify-center items-center md:items-start text-center md:text-left text-white mx-8 lg:mx-16 xl:mx-20 my-4 text-left\">\r\n                        <h1 className=\"text-4xl md:text-6xl text-red lg:text-8xl font-logo my-4 lg:my-7\">Backdoor</h1>\r\n                        <p className=\"text-2xl md:text-3xl lg:text-4xl font-display mb-8 md:mb-16\">A cybersecurity discussion forum.</p>\r\n                        <Link to=\"/threads\">\r\n                            <DangerButton>Get Started</DangerButton>\r\n                        </Link>\r\n                    </div>\r\n                    <Illustration src={DiscussionIllustration} />\r\n                </section>\r\n            </div>\r\n        </motion.section>\r\n    );\r\n}\r\n\r\nexport default Landing;","const PageBody: React.FC = props => {\r\n    /* Add pt-16 to this section if navbar is fixed instead of sticky */ \r\n    return (\r\n        < section className=\"flex flex-wrap w-screen h-screen box-border overflow-x-hidden scrollbar\" >\r\n            { props.children}\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default PageBody;\r\n","import { motion } from 'framer-motion';\r\nimport { backdropVariants } from '../../variants/index';\r\n\r\ninterface Props {\r\n    clicked: () => void;\r\n}\r\n\r\nconst Backdrop: React.FC<Props> = (props) => (\r\n    <motion.div\r\n        className=\"flex justify-center items-center bg-black bg-opacity-50 fixed \r\n        w-screen h-screen z-40 fixed top-0 left-0 backdrop-filter backdrop-blur-lg\"\r\n        onClick={props.clicked}\r\n        variants={backdropVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"hidden\"\r\n    >\r\n        {props.children}\r\n    </motion.div>\r\n);\r\n\r\nexport default Backdrop;","const Heading: React.FC = props => (\r\n    <h3 className=\"font-display text-3xl sm:text-4xl xl:text-5xl text-center \r\n                text-syntax-yellow-darker my-2 sm:my-4 mx-2 sm:mx-3\">\r\n        {props.children}\r\n    </h3>\r\n)\r\n\r\nexport default Heading;","interface Props {\r\n    placeholder: string;\r\n    type: \"email\" | \"text\" | \"password\";\r\n    label?: string | undefined;\r\n    name?: string;\r\n    required?: boolean;\r\n    inputRef?: React.RefObject<HTMLInputElement>;\r\n}\r\n\r\nconst InputField: React.FC<Props> = props => {\r\n    const icon = props.children;\r\n    let leftIconClass;\r\n    if (icon) {\r\n        leftIconClass = \"has-icons-left\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"field w-full mx-4 lg:mx-4 xl:mx-0\">\r\n            <label className=\"label font-normal\">{props.label}</label>\r\n            <div className={`control ${leftIconClass}`}>\r\n                <input\r\n                    className=\"input rounded-xl\"\r\n                    type={props.type}\r\n                    placeholder={props.placeholder}\r\n                    required={props.required}\r\n                    ref={props.inputRef} />\r\n                {icon && (\r\n                    <span className=\"icon is-small is-left flex justify-center items-center\">\r\n                        {icon}\r\n                    </span>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InputField;","import { motion } from 'framer-motion';\r\nimport { buttonVariants } from '../../variants/index';\r\n\r\ninterface Props {\r\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n    buttonRef?: React.RefObject<HTMLButtonElement>;\r\n}\r\n\r\nconst SuccessButton: React.FC<Props> = props => (\r\n    <motion.button className=\"bg-green-darker hover:bg-green hover:shadow-2xl transition-colors duration-300 mt-2 focus:outline-none\r\n    rounded-xl font-display text-grey font-bold text-l md:text-xl py-2 px-4 md:py-3 md:px-5 xl:px-7\"\r\n        variants={buttonVariants}\r\n        whileHover=\"hover\"\r\n        type={props.type}\r\n        ref={props.buttonRef}\r\n    >\r\n        {props.children}\r\n    </motion.button>\r\n);\r\n\r\nexport default SuccessButton;","import Joi from 'joi';\r\n\r\nconst complexityCheck = (value: string, helpers: object) => {\r\n    // Check for lowercase characters\r\n    if (!/[a-z]/.test(value)) throw new Error()\r\n    // Check for uppercase characters\r\n    if (!/[A-Z]/.test(value)) throw new Error();\r\n    // Check for digits\r\n    if (!/\\d/.test(value)) throw new Error();\r\n\r\n    return value;\r\n}\r\n\r\nconst usernameValidation = (value: string, helpers: object) => {\r\n    if (!/^[a-zA-Z]/.test(value)) throw new Error();\r\n}\r\n\r\nconst loginSchema = Joi.object({\r\n    // The username field must match either email or username format\r\n    username: Joi.alternatives()\r\n        .try(\r\n            // Email validation\r\n            Joi.string()\r\n                .email({\r\n                    // Maybe whitelist domains to ['com', 'ru', 'org', 'dev', 'net', 'in']\r\n                    tlds: { allow: false }\r\n                })\r\n                .required(),\r\n\r\n            // Username Validation\r\n            Joi.string()\r\n                .alphanum()\r\n                .min(4)\r\n                .max(50)\r\n                .custom(usernameValidation, 'username validation')\r\n                .required()\r\n                .messages({\r\n                    'any.custom': \"Username must start with an uppercase or lowercase letter.\"\r\n                })\r\n        )\r\n        .required()\r\n        .messages({\r\n            'alternatives.match': \"Please enter either a valid email or a valid username.\"\r\n    }),\r\n    password: Joi.string()\r\n        .min(12)\r\n        .max(64)\r\n        .custom(complexityCheck, 'complexity check')\r\n        .required()\r\n        .label(\"Password\")\r\n        .messages({\r\n            'any.custom':\r\n                \"Password must have at least one lowercase character, one uppercase character and one number.\"\r\n        })\r\n});\r\n\r\nexport default loginSchema;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        isAuthenticated: false,\r\n        id: undefined,\r\n        username: undefined,\r\n        permissionLevel: 1,\r\n    },\r\n    reducers: {\r\n        authenticate: state => {\r\n            state.isAuthenticated = true;\r\n        },\r\n        deauthenticate: state => {\r\n            state.isAuthenticated = false;\r\n        },\r\n        setId: (state, action) => {\r\n            state.id = action.payload\r\n        },\r\n        setUsername: (state, action) => {\r\n            state.username = action.payload;\r\n        },\r\n        setPermissionLevel: (state, action) => {\r\n            state.permissionLevel = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    authenticate,\r\n    deauthenticate,\r\n    setId,\r\n    setUsername,\r\n    setPermissionLevel\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;","import axios from 'axios';\r\nimport { ISignUp, ILogIn, IUpdateUser, IPostData, IThreadData, ICommentData } from './apiInterface';\r\n\r\nconst API = axios.create({ baseURL: 'api/' });\r\n\r\n// Thread API Routes\r\nexport const fetchAllThreads = () => API.get('/threads');\r\nexport const fetchThread = (title: string) => API.get(`/threads/${title}`);\r\nexport const createThread = (threadData: IThreadData) => API.post('/threads/create', threadData);\r\nexport const updateThread = (title: string, threadData: IThreadData) => API.patch('/threads/update', { title, threadData });\r\n\r\n\r\n// Posts API Routes\r\nexport const fetchAllPosts = () => API.get('/posts');\r\nexport const fetchPost = (id: string) => API.get(`/posts/${id}`);\r\nexport const fetchPostsBySearch = (title?: string, tags?: string, userId?: string) => API.get(`/posts/search?title=${title}&tags=${tags}&userId=${userId}`);\r\nexport const createPost = (postData: IPostData) => API.post('/posts/create', postData);\r\nexport const updatePost = (id: string, updatedPost: IPostData) => API.patch('/posts/update', { id, updatedPost });\r\nexport const reactPost = (id: string, action: 'like' | 'dislike') => API.patch(`/posts/react?id=${id}&action=${action}`);\r\nexport const deletePost = (id: string) => API.delete(`/posts/delete?id=${id}`);\r\n\r\n\r\n// Comments API Routes\r\nexport const fetchComment = (commentId: string) => API.get('/comments/' + commentId);\r\nexport const fetchCommentsBySearch = (postId?: string, userId?: string) => API.get(`/comments/search?postId=${postId}&userId=${userId}`);\r\nexport const createComment = (postId: string, comment: ICommentData) => API.post(`/comments/create?postId=${postId}`, comment);\r\nexport const updateComment = (commentId: string, comment: ICommentData) => API.patch(`/comments/update`, { id: commentId, comment });\r\nexport const reactComment = (commentId: string, action: 'like' | 'dislike') => API.patch(`/comments/react?commentId=${commentId}&action=${action}`);\r\nexport const deleteComment = (commentId: string, postId: string) => API.delete(`/comments/delete?postId=${postId}&commentId=${commentId}`);\r\n\r\n\r\n// User API Routes\r\nexport const logout = () => API.post('/user/logout');\r\nexport const login = (loginData: ILogIn) => API.post('/user/login', loginData);\r\nexport const signUp = (signupData: ISignUp) => API.post('/user/signup', signupData);\r\nexport const getUser = (username: string) => API.get(`/user/${username}`);\r\nexport const getUsername = (userId: string) => API.get(`/user/username?userId=${userId}`);\r\nexport const updateUser = (updateData: IUpdateUser) => API.patch('/user/update', updateData);\r\nexport const checkAuthenticated = () => API.post('/user/check');","import { motion } from 'framer-motion';\r\nimport { modalVariants } from '../../variants/index';\r\n\r\nconst ModalContainer: React.FC = props => (\r\n\r\n    <motion.div className=\"flex flex-col justify-center items-center bg-grey-lighter rounded-2xl\r\n                w-10/12 sm:w-3/5 md:w-2/5 2xl:w-4/12 m-4 py-4 sm:py-6 xl:py-10 xl:px-8\"\r\n        onClick={e => e.stopPropagation()}\r\n        variants={modalVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n    >\r\n        {props.children}\r\n    </motion.div>\r\n);\r\n\r\nexport default ModalContainer;","const ErrorMessage: React.FC = props => (\r\n    <p className=\"font-display text-red text-lg text-center text-md mt-4 mx-2\">\r\n        {props.children}\r\n    </p>\r\n);\r\n\r\nexport default ErrorMessage;","import Backdrop from '../../Backdrop/Backdrop';\r\nimport Heading from '../../Utilities/Heading';\r\nimport InputField from '../../Utilities/InputField';\r\nimport { MailIcon, KeyIcon } from '@heroicons/react/solid';\r\nimport SuccessButton from '../../Buttons/SuccessButton';\r\nimport loginSchema from '../../../schema/loginSchema';\r\nimport { authenticate, setId, setPermissionLevel, setUsername } from '../../../store/userSlice';\r\nimport { login } from '../../../api/index';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport ModalContainer from '../ModalContainer';\r\n\r\nimport { useRef, useState, FormEvent } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { useDispatch } from 'react-redux';\r\nimport ErrorMessage from '../../Utilities/ErrorMessage';\r\n\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    backdropClicked: () => void;\r\n}\r\n\r\nconst LoginModal: React.FC<Props> = props => {\r\n    const [errorMessage, setErrorMessage] = useState<string>();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const usernameRef = useRef<HTMLInputElement>(null);\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n        const username = usernameRef.current?.value;\r\n        const password = passwordRef.current?.value;\r\n\r\n        const { error } = loginSchema.validate({\r\n            username,\r\n            password\r\n        });\r\n\r\n        if (error) {\r\n            setErrorMessage(error.message);\r\n            return;\r\n        } else {\r\n            setErrorMessage(undefined);\r\n            login({\r\n                username,\r\n                password\r\n            })\r\n                .then(res => {\r\n                    // Set global application state to indicate that user is authenticated.\r\n                    dispatch(authenticate());\r\n                    // Save user data in global state\r\n                    dispatch(setId(res.data.id));\r\n                    dispatch(setUsername(res.data.username));\r\n                    dispatch(setPermissionLevel(res.data.permissionLevel));\r\n\r\n                    toast.success(res.data.message, {\r\n                        onOpen: () => {\r\n                            // If we're on the signup page, redirect on login\r\n                            // Else, just close the modal\r\n                            if (location.pathname === \"/signup\" ||\r\n                                location.pathname === \"/login\") {\r\n                                props.backdropClicked();\r\n                                history.push('/');\r\n                            }\r\n                            else\r\n                                props.backdropClicked()\r\n                        },\r\n                        transition: Flip\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    switch (err.response.status) {\r\n                        case 500:\r\n                            toast.error(\"Server unreachable\", { transition: Flip });\r\n                            break;\r\n                        case 401:\r\n                            toast.error(\"Username or password incorrect\", { transition: Flip });\r\n                            break;\r\n                        default:\r\n                            toast.error(err.response.data.message, { transition: Flip });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AnimatePresence>\r\n            {props.show && (\r\n                <Backdrop clicked={props.backdropClicked}>\r\n                    <ModalContainer>\r\n                        <Heading> Login </Heading>\r\n                        <form onSubmit={submitHandler} className=\"mt-4 my-2 flex flex-col flex-1\">\r\n                            <InputField\r\n                                label=\"Email or Username\"\r\n                                placeholder=\"john.doe@example.com\"\r\n                                type=\"text\"\r\n                                inputRef={usernameRef}\r\n                            >\r\n                                <MailIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n                            <InputField\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                type=\"password\"\r\n                                inputRef={passwordRef}\r\n                            >\r\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n                            <div className=\"mt-4 flex justify-center align-center\">\r\n                                <SuccessButton type=\"submit\">Login</SuccessButton>\r\n                            </div>\r\n                        </form>\r\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n                    </ModalContainer>\r\n                </Backdrop>\r\n            )}\r\n        </AnimatePresence>\r\n    );\r\n}\r\n\r\nexport default LoginModal;","import Joi from 'joi';\r\n\r\nconst threadSchema = Joi.object({\r\n    title: Joi.string()\r\n        .min(3)\r\n        .max(25)\r\n        .label(\"Title\")\r\n        .required(),\r\n    description: Joi.string()\r\n        .min(10)\r\n        .max(185)\r\n        .label(\"Description\")\r\n        .required()\r\n});\r\n\r\nexport default threadSchema;","import { useState } from 'react';\r\n\r\ninterface Props {\r\n    placeholder?: string;\r\n    textAreaRef?: React.RefObject<HTMLTextAreaElement>\r\n    required?: boolean;\r\n    limit: Number;\r\n    label?: string;\r\n}\r\n\r\nconst TextArea: React.FC<Props> = props => {\r\n    const [contentLength, setContentLength] = useState<Number>(0);\r\n    const [textColor, setTextColor] = useState<string>(\"grey-light\");\r\n\r\n    const fieldOnChangeHandler = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n        setContentLength(e.currentTarget.value.length);\r\n        if (e.currentTarget.value.length <= props.limit) {\r\n            setTextColor(\"grey-light\");\r\n        } else {\r\n            setTextColor(\"red\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-1 w-full flex-col items-end\">\r\n            <div className=\"flex w-full justify-between my-2 text-md\">\r\n                <p className={`text-syntax-yellow`}>{props.label}</p>\r\n                <p className={`text-${textColor}`}>{contentLength} / {props.limit}</p>\r\n            </div>\r\n            <textarea className=\"textarea rounded-2xl w-full\"\r\n                placeholder={props.placeholder}\r\n                onChange={fieldOnChangeHandler}\r\n                ref={props.textAreaRef} required={props.required}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextArea;","import Backdrop from '../../Backdrop/Backdrop';\r\nimport Heading from '../../Utilities/Heading';\r\nimport InputField from '../../Utilities/InputField';\r\nimport ErrorMessage from '../../Utilities/ErrorMessage';\r\nimport ModalContainer from '../ModalContainer';\r\nimport SuccessButton from '../../Buttons/SuccessButton';\r\nimport threadSchema from '../../../schema/theadSchema';\r\nimport { createThread } from '../../../api/index';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { useState, useRef, FormEvent } from 'react';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport TextArea from '../../Utilities/TextArea';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    backdropClicked: () => void;\r\n}\r\n\r\nconst CreateThreadModal: React.FC<Props> = props => {\r\n    const [errorMessage, setErrorMessage] = useState<string>();\r\n    const titleRef = useRef<HTMLInputElement>(null);\r\n    const descriptionRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const title = titleRef.current?.value as string;\r\n        const description = descriptionRef.current?.value as string;\r\n\r\n        const { error } = threadSchema.validate({\r\n            title,\r\n            description\r\n        });\r\n\r\n        if (error)\r\n            setErrorMessage(error.message);\r\n        else {\r\n            setErrorMessage(undefined);\r\n            createThread({ title, body: description })\r\n                .then(res => {\r\n                    toast.success(res.data.message, { transition: Flip })\r\n                    props.backdropClicked();\r\n                })\r\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AnimatePresence>\r\n            { props.show && (\r\n                <Backdrop clicked={props.backdropClicked}>\r\n                    <ModalContainer>\r\n                        <Heading>Create Thread</Heading>\r\n                        <form onSubmit={submitHandler}\r\n                            className=\"mt-4 my-2 flex flex-col flex-1 w-full px-12\">\r\n                            <InputField placeholder=\"Thread Title\" label=\"Thread Title\" type=\"text\"\r\n                                inputRef={titleRef} required\r\n                            />\r\n                            <TextArea textAreaRef={descriptionRef} placeholder=\"Thread Description\"\r\n                                limit={185} label=\"Thread Description\" required />\r\n                            <div className=\"mt-4 flex justify-center align-center\">\r\n                                <SuccessButton type=\"submit\">Create</SuccessButton>\r\n                            </div>\r\n                        </form>\r\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n                    </ModalContainer>\r\n                </Backdrop>\r\n            )}\r\n        </AnimatePresence>\r\n    );\r\n}\r\n\r\nexport default CreateThreadModal;","interface Props {\r\n    clicked?: () => void;\r\n}\r\n\r\nconst NavLink: React.FC<Props> = (props) => (\r\n    <li>\r\n        <button className=\"transition-border duration-300 border-4 border-transparent hover:bg-grey-lighter\r\n        py-4 px-3 lg:px-5 lg:mx-1 w-full lg:w-auto text-lg font-medium text-syntax-yellow-darker focus:outline-none\"\r\n            onClick={props.clicked}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    </li>\r\n)\r\n\r\nexport default NavLink;","import { Link } from 'react-router-dom';\r\nimport LoginModal from '../Modals/LoginModal/LoginModal';\r\nimport CreateThreadModal from '../Modals/CreateThreadModal/CreateThreadModal';\r\nimport { logout } from '../../api/index';\r\nimport { LogoutIcon } from '@heroicons/react/solid';\r\nimport { deauthenticate, setId, setUsername, setPermissionLevel } from '../../store/userSlice';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport NavLink from './NavLink';\r\nimport { IStore } from '../../store/userInterface';\r\n\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport '../../scss/Navbar.scss';\r\n\r\nconst Navbar: React.FC = () => {\r\n    const [showLoginModal, setShowLoginModal] = useState(false);\r\n    const [showCreateThreadModal, setShowCreateThreadModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const isAuthenticated = useSelector<IStore>(state => state.user.isAuthenticated);\r\n    const permissionLevel = useSelector<IStore>(state => state.user.permissionLevel) as number;\r\n    const username = useSelector<IStore>(state => state.user.username) as string;\r\n\r\n    const backdropClickHandler = () => {\r\n        setShowLoginModal(false);\r\n        setShowCreateThreadModal(false);\r\n    }\r\n    const loginClickHandler = () => setShowLoginModal(true);\r\n    const createThreadClickHandler = () => setShowCreateThreadModal(true);\r\n\r\n    const logoutClickHandler = () => {\r\n        logout()\r\n            .then(res => {\r\n                dispatch(deauthenticate());\r\n                dispatch(setId(undefined));\r\n                dispatch(setUsername(undefined));\r\n                dispatch(setPermissionLevel(1));\r\n                toast.success(res.data.message, { transition: Flip });\r\n            })\r\n            .catch(err => {\r\n                toast.error(err.response.data.message, { transition: Flip });\r\n            });\r\n    }\r\n\r\n    let rightNavLinks;\r\n\r\n    if (isAuthenticated) {\r\n        rightNavLinks = (\r\n            <>\r\n                {permissionLevel >= 3 && (\r\n                    <NavLink clicked={createThreadClickHandler}>\r\n                        Create Thread\r\n                    </NavLink>\r\n                )}\r\n                <Link to=\"/posts/new\">\r\n                    <NavLink>\r\n                        New Post\r\n                    </NavLink>\r\n                </Link>\r\n                <Link to={`/users/${username}`}>\r\n                    <NavLink>\r\n                        {(username?.length > 15)\r\n                            ? username.substring(0, 15) + '..'\r\n                            : username}\r\n                    </NavLink>\r\n                </Link>\r\n                <NavLink clicked={logoutClickHandler}>\r\n                    <div className=\"hidden lg:block\"> <LogoutIcon className=\"w-8 text-red-lighter\" /> </div>\r\n                    <div className=\"lg:hidden\"> Logout </div>\r\n                </NavLink>\r\n            </>\r\n        );\r\n    } else {\r\n        rightNavLinks = (\r\n            <>\r\n                <Link to=\"/signup\">\r\n                    <NavLink>\r\n                        Sign Up\r\n                    </NavLink>\r\n                </Link>\r\n                <NavLink clicked={loginClickHandler}>\r\n                    Login\r\n                </NavLink>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CreateThreadModal show={showCreateThreadModal} backdropClicked={backdropClickHandler} />\r\n            <LoginModal show={showLoginModal} backdropClicked={backdropClickHandler} />\r\n            <nav className=\"flex flex-1 w-screen px-1 bg-grey sticky top-0 left-0 font-display font-medium z-30\"\r\n                id=\"navbar\">\r\n                <div className=\"flex flex-1 flex-wrap lg:flex-nowrap justify-between items-center\">\r\n                    <ul className=\"flex items-center px-6 self-stretch\">\r\n                        <li className=\"flex align-center self-stretch\">\r\n                            <Link to=\"/\" className=\"transition-border duration-300 border-4 border-transparent \r\n                            hover:bg-grey-lighter py-4 px-3 font-logo text-lg text-red\">\r\n                                Backdoor\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <label htmlFor=\"hamburger-menu-toggle\" className=\"cursor-pointer lg:hidden border-4 border-transparent py-4 px-6\">\r\n                        <svg className=\"fill-current text-syntax-yellow-darker\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\r\n                            <title>Menu</title>\r\n                            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"></path>\r\n                        </svg>\r\n                    </label>\r\n                    <input className=\"hidden\" type=\"checkbox\" id=\"hamburger-menu-toggle\" />\r\n\r\n                    <div className=\"hidden lg:flex lg-w-min lg:items-center lg:justify-end w-full lg:px-6\" id=\"hamburger-menu\">\r\n                        <ul className=\"lg:flex items-center\">\r\n                            {rightNavLinks}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import { motion } from 'framer-motion';\r\nimport { sidebarVariants } from '../../variants/index';\r\nimport Illustration from '../Utilities/Illustration';\r\n\r\nimport '../../scss/sidebar.scss';\r\n\r\ninterface Props {\r\n    logo?: boolean;\r\n    title?: string;\r\n    description?: string\r\n    illustration: string;\r\n    titleColor?: string\r\n    descriptionColor?: string\r\n    bgColor: string;\r\n}\r\n\r\nconst Sidebar: React.FC<Props> = props => {\r\n    const bgMap = new Map();\r\n    bgMap.set('yellow', 'sideBgYellow');\r\n    bgMap.set('grey-lighter', 'sideBgGreyLighter');\r\n\r\n    const titleMap = new Map();\r\n    titleMap.set('yellow', 'sideTitleYellow');\r\n\r\n    const borderMap = new Map();\r\n    borderMap.set('yellow', 'sideBorderYellow');\r\n\r\n    const descMap = new Map();\r\n    descMap.set('yellow', 'sideDescYellow');\r\n    descMap.set('grey-darker', 'sideDescGreyDarker');\r\n    descMap.set('grey-light', 'sideDescGreyLight');\r\n\r\n    return (\r\n        <motion.div className={`sticky top-0 left-0 self-start min-h-screen hidden xl:block xl:w-3/12\r\n        px-5 ${bgMap.has(props.bgColor) ? bgMap.get(props.bgColor) : 'sideBgDefault'} flex flex-col items-start`}\r\n            variants={sidebarVariants} initial=\"hidden\"\r\n            animate=\"visible\"\r\n        >\r\n            {props.logo &&\r\n                <h2 className=\"font-logo text-xl text-red text-left pt-28 mx-2 my-4\">Backdoor</h2>\r\n            }\r\n\r\n            {props.title && (\r\n                <>\r\n                    <h2 className={`font-display font-medium text-6xl `+\r\n                        `${titleMap.has(props.titleColor) ? titleMap.get(props.titleColor) : 'sideTitleDefault'} `+\r\n                        `text-left pt-20 mx-2 my-4`}>\r\n                        {props.title}\r\n                    </h2>\r\n                    <hr className={`border-2 ${borderMap.get('yellow')} rounded-2xl`} />\r\n                </>\r\n            )}\r\n\r\n            <p className={`font-body text-2xl tracking-wider `+\r\n                `${descMap.has(props.descriptionColor) ? descMap.get(props.descriptionColor) : 'sideDescDefault'} `+\r\n                `text-left mx-2 mt-4 xl:mb-20 2xl:mb-32`}>\r\n                {props.description}\r\n            </p>\r\n            <Illustration src={props.illustration} />\r\n        </motion.div>\r\n    )\r\n};\r\n\r\nexport default Sidebar;","import Joi from 'joi';\r\n\r\nconst complexityCheck = (value: string, helpers: object) => {\r\n    // Check for lowercase characters\r\n    if (!/[a-z]/.test(value)) throw new Error()\r\n    // Check for uppercase characters\r\n    if (!/[A-Z]/.test(value)) throw new Error();\r\n    // Check for digits\r\n    if (!/\\d/.test(value)) throw new Error();\r\n\r\n    return value;\r\n}\r\n\r\nconst usernameValidation = (value: string, helpers: object) => {\r\n    if (!/^[a-zA-Z]/.test(value)) throw new Error();\r\n}\r\n\r\nconst registrationSchema = Joi.object({\r\n    email: Joi.string()\r\n        .email({\r\n            // Maybe whitelist domains to ['com', 'ru', 'org', 'dev', 'net', 'in']\r\n            tlds: { allow: false }\r\n        })\r\n        .label(\"Email\")\r\n        .required(),\r\n    username: Joi.string()\r\n        .alphanum()\r\n        .min(4)\r\n        .max(50)\r\n        .custom(usernameValidation, 'username validation')\r\n        .required()\r\n        .label(\"Username\")\r\n        .messages({\r\n            'any.custom': \"Username must start with an uppercase or lowercase letter.\"\r\n        }),\r\n    password: Joi.string()\r\n        .min(12)\r\n        .max(64)\r\n        .custom(complexityCheck, 'complexity check')\r\n        .required()\r\n        .label(\"Password\")\r\n        .messages({\r\n            'any.custom':\r\n                \"Password must have at least one lowercase character, one uppercase character and one number.\"\r\n        }),\r\n    confirmPassword: Joi.string()\r\n        .valid(Joi.ref('password'))\r\n        .required()\r\n        .label(\"Confirm Password\")\r\n        .messages({\r\n            'any.only': 'Passwords do not match'\r\n        })\r\n});\r\n\r\nexport default registrationSchema;","export default __webpack_public_path__ + \"static/media/securelogin-illustration.d4696db7.svg\";","import PageBody from '../../components/Utilities/PageBody';\r\nimport Navbar from '../../components/Navbars/Navbar';\r\nimport InputField from '../../components/Utilities/InputField';\r\nimport { MailIcon, UserIcon, KeyIcon } from '@heroicons/react/solid';\r\nimport SuccessButton from '../../components/Buttons/SuccessButton';\r\nimport Heading from '../../components/Utilities/Heading';\r\nimport Sidebar from '../../components/Utilities/Sidebar';\r\nimport { signUp } from '../../api/index';\r\nimport registrationSchema from '../../schema/registrationSchema';\r\nimport { motion } from 'framer-motion';\r\nimport { routeVariants } from '../../variants/index';\r\n\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { useState, useRef, FormEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport SecureLoginIllustration from '../../assets/securelogin-illustration.svg';\r\nimport classes from './Signup.module.scss';\r\nimport ErrorMessage from '../../components/Utilities/ErrorMessage';\r\n\r\nconst Signup: React.FC = () => {\r\n    const [errorMessage, setErrorMessage] = useState<string>();\r\n    const history = useHistory();\r\n\r\n    const emailRef = useRef<HTMLInputElement>(null);\r\n    const usernameRef = useRef<HTMLInputElement>(null);\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n    const confirmPasswordRef = useRef<HTMLInputElement>(null);\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>): void => {\r\n        const email = emailRef.current?.value;\r\n        const username = usernameRef.current?.value;\r\n        const password = passwordRef.current?.value;\r\n        const confirmPassword = confirmPasswordRef.current?.value;\r\n\r\n        e.preventDefault();\r\n\r\n        const { error } = registrationSchema.validate({\r\n            email,\r\n            username,\r\n            password,\r\n            confirmPassword\r\n        });\r\n\r\n        // If there's a validation error, show error message, else send request.\r\n        if (error) {\r\n            setErrorMessage(error.message);\r\n            return;\r\n        } else {\r\n            setErrorMessage(undefined);\r\n            signUp({ email, username, password })\r\n                .then(res => {\r\n                    toast.success(res.data.message, {\r\n                        onOpen: () => history.push('/'),\r\n                        transition: Flip\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    if (err.response.status === 500) {\r\n                        toast.error(\"Server unreachable\",\r\n                            { transition: Flip }\r\n                        );\r\n                    } else {\r\n                        toast.error(err.response.data.message, { transition: Flip });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <Navbar />\r\n            <PageBody>\r\n                <Sidebar\r\n                    logo\r\n                    description=\"Engage in meaningful cybersecurity discussions.\"\r\n                    descriptionColor=\"grey-darker\"\r\n                    bgColor=\"yellow\"\r\n                    illustration={SecureLoginIllustration}\r\n                />\r\n\r\n                {/* Signup div */}\r\n                <div className=\"flex flex-1 justify-center items-center mt-8 mb-20\">\r\n                    <div className={`w-11/12 md:w-3/5 2xl:w-2/5 m-4 py-3 sm:py-6 xl:py-10 xl:px-8\r\n        bg-grey-lighter rounded-3xl ${classes.Signup} flex flex-col justify-start items-center`}>\r\n                        <Heading>\r\n                            Get your access to Backdoor\r\n                        </Heading>\r\n                        <form onSubmit={submitHandler} className=\"w-full mt-4 mb-2 mx-4 flex flex-col items-center\">\r\n                            <InputField placeholder=\"john.doe@example.com\" type=\"email\" name=\"email\" required\r\n                                label=\"Email\" inputRef={emailRef} >\r\n                                <MailIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n\r\n                            <InputField placeholder=\"johndoe\" type=\"text\" name=\"username\" required\r\n                                label=\"Username\" inputRef={usernameRef} >\r\n                                <UserIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n\r\n                            <InputField placeholder=\"Password\" type=\"password\" name=\"password\" required\r\n                                label=\"Password\" inputRef={passwordRef} >\r\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n\r\n                            <InputField placeholder=\"Confirm Password\" type=\"password\" required\r\n                                label=\"Confirm Password\" inputRef={confirmPasswordRef} >\r\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n\r\n                            <SuccessButton type=\"submit\">Sign Up</SuccessButton>\r\n                        </form>\r\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n                    </div>\r\n                </div>\r\n            </PageBody>\r\n        </motion.section>\r\n    );\r\n}\r\n\r\nexport default Signup;","export default __webpack_public_path__ + \"static/media/authentication-illustration.1f9133aa.svg\";","import PageBody from '../../components/Utilities/PageBody';\r\nimport Navbar from '../../components/Navbars/Navbar';\r\nimport InputField from '../../components/Utilities/InputField';\r\nimport { UserIcon, KeyIcon } from '@heroicons/react/solid';\r\nimport SuccessButton from '../../components/Buttons/SuccessButton';\r\nimport Heading from '../../components/Utilities/Heading';\r\nimport Sidebar from '../../components/Utilities/Sidebar';\r\nimport { login } from '../../api/index';\r\nimport { authenticate, setUsername, setPermissionLevel, setId } from '../../store/userSlice';\r\nimport loginSchema from '../../schema/loginSchema';\r\nimport { motion } from 'framer-motion';\r\nimport { routeVariants } from '../../variants/index';\r\n\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { useState, useRef, FormEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport AuthenticationIllustration from '../../assets/authentication-illustration.svg';\r\nimport classes from './Login.module.scss';\r\nimport ErrorMessage from '../../components/Utilities/ErrorMessage';\r\n\r\nconst Login: React.FC = () => {\r\n    const [errorMessage, setErrorMessage] = useState<string>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const usernameRef = useRef<HTMLInputElement>(null);\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>): void => {\r\n        const username = usernameRef.current?.value;\r\n        const password = passwordRef.current?.value;\r\n\r\n        e.preventDefault();\r\n\r\n        const { error } = loginSchema.validate({\r\n            username,\r\n            password,\r\n        });\r\n\r\n        // If there's a validation error, show error message, else send request.\r\n        if (error) {\r\n            setErrorMessage(error.message);\r\n            return;\r\n        } else {\r\n            setErrorMessage(undefined);\r\n            login({\r\n                username,\r\n                password\r\n            })\r\n                .then(res => {\r\n                    // Set global application state to indicate that user is authenticated.\r\n                    dispatch(authenticate());\r\n                    // Save user data in global state\r\n                    dispatch(setId(res.data.id));\r\n                    dispatch(setUsername(res.data.username));\r\n                    dispatch(setPermissionLevel(res.data.permissionLevel));\r\n\r\n                    toast.success(res.data.message, {\r\n                        onOpen: () => {\r\n                            // Redirect to / on successful login\r\n                            history.push('/');\r\n                        }\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    switch (err.response.status) {\r\n                        case 500:\r\n                            toast.error(\"Server unreachable\", { transition: Flip });\r\n                            break;\r\n                        case 401:\r\n                            toast.error(\"Username or password incorrect\", { transition: Flip });\r\n                            break;\r\n                        default:\r\n                            toast.error(err.response.data.message, { transition: Flip });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <Navbar />\r\n            <PageBody>\r\n                {/* Sidebar */}\r\n                <Sidebar\r\n                    logo\r\n                    description=\"Engage in meaningful cybersecurity discussions.\"\r\n                    descriptionColor=\"grey-darker\"\r\n                    bgColor=\"yellow\"\r\n                    illustration={AuthenticationIllustration}\r\n                />\r\n\r\n                {/* Login div */}\r\n                <div className=\"flex flex-1 justify-center items-center\">\r\n                    <div className={`w-11/12 md:w-3/5 2xl:w-2/5 m-4 py-3 sm:py-6 xl:py-10 xl:px-8 bg-grey-lighter \r\n                    rounded-3xl ${classes.Login} flex flex-col justify-start items-center`}>\r\n                        <Heading>\r\n                            Login to Backdoor\r\n                        </Heading>\r\n                        <form onSubmit={submitHandler} className=\"w-full mt-4 mb-2 mx-4 flex flex-col items-center\">\r\n                            <InputField placeholder=\"john.doe@example.com\" type=\"text\" name=\"username\" required\r\n                                label=\"Username or Email\" inputRef={usernameRef} >\r\n                                <UserIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n\r\n                            <InputField placeholder=\"Password\" type=\"password\" name=\"password\" required\r\n                                label=\"Password\" inputRef={passwordRef} >\r\n                                <KeyIcon className=\"w-2/3 h-2/3\" />\r\n                            </InputField>\r\n\r\n                            <SuccessButton type=\"submit\">Login</SuccessButton>\r\n                        </form>\r\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n                    </div>\r\n                </div>\r\n            </PageBody>\r\n        </motion.section>\r\n    );\r\n}\r\n\r\nexport default Login;","const CardTitle: React.FC = props => (\r\n    <h2 className=\"text-display font-display text-xl md:text-2xl 2xl:text-3xl text-syntax-yellow my-2\">\r\n        {props.children}\r\n    </h2>\r\n);\r\n\r\nexport default CardTitle;","import { ArrowUpIcon, ArrowDownIcon, AnnotationIcon } from '@heroicons/react/solid';\r\nimport { IStore } from '../../store/userInterface';\r\nimport { Link } from 'react-router-dom';\r\nimport { reactComment, reactPost } from '../../api/index';\r\nimport { toast, Flip } from \"react-toastify\";\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface Props {\r\n    id: string; // The id of the post of the comment depending on which card the component is on\r\n    votes: [string];\r\n    downVotes: [string]\r\n    showComments?: boolean; // Do we want to show the comments icon at the right?\r\n    comment?: boolean; // Does this reactions element belong to a CommentCard or a PostCard?\r\n    threadName?: string\r\n}\r\n\r\nconst CardReactions: React.FC<Props> = props => {\r\n    const [votes, setVotes] = useState<[string]>();\r\n    const [downVotes, setDownVotes] = useState<[string]>();\r\n    const [userUpvoted, setUserUpvoted] = useState(false);\r\n    const [userDownvoted, setUserDownvoted] = useState(false);\r\n    const userId = useSelector<IStore>(state => state.user.id) as string;\r\n\r\n    const updateVotes = useCallback((passedVotes: [string], passedDownVotes: [string]) => {\r\n        if (passedVotes.includes(userId)) {\r\n            setUserUpvoted(true);\r\n            setUserDownvoted(false);\r\n        } else if (passedDownVotes.includes(userId)) {\r\n            setUserUpvoted(false);\r\n            setUserDownvoted(true);\r\n        } else {\r\n            setUserUpvoted(false);\r\n            setUserDownvoted(false);\r\n        }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        setVotes(props.votes);\r\n        setDownVotes(props.downVotes);\r\n        updateVotes(props.votes, props.downVotes);\r\n    }, [props.votes, props.downVotes, userId, updateVotes]);\r\n\r\n    const likeHandler = () => {\r\n        if (props.comment) {\r\n            reactComment(props.id, 'like')\r\n                .then(res => {\r\n                    setVotes(res.data.votes);\r\n                    setDownVotes(res.data.downVotes);\r\n                    updateVotes(res.data.votes, res.data.downVotes);\r\n                })\r\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n        } else {\r\n            reactPost(props.id, 'like')\r\n                .then(res => {\r\n                    setVotes(res.data.votes);\r\n                    setDownVotes(res.data.downVotes);\r\n                    updateVotes(res.data.votes, res.data.downVotes);\r\n                })\r\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n        }\r\n    }\r\n\r\n    const dislikeHandler = () => {\r\n        if (props.comment) {\r\n            reactComment(props.id, 'dislike')\r\n                .then(res => {\r\n                    setVotes(res.data.votes);\r\n                    setDownVotes(res.data.downVotes);\r\n                    updateVotes(res.data.votes, res.data.downVotes);\r\n                })\r\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n        } else {\r\n            reactPost(props.id, 'dislike')\r\n                .then(res => {\r\n                    setVotes(res.data.votes);\r\n                    setDownVotes(res.data.downVotes);\r\n                    updateVotes(res.data.votes, res.data.downVotes);\r\n                })\r\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n        }\r\n    }\r\n\r\n    // {/* Post actions (Like, Dislike, etc) */ }\r\n    return (\r\n        <div className=\"max-h-min flex justify-between items-center mt-4 px-8 py-4 md:px-12 md:py-6\r\n            xl:px-12 xl:py-4 bg-grey rounded-b-2xl\">\r\n            <div className=\"flex justify-start items-center\">\r\n                {userUpvoted ? (\r\n                    <ArrowUpIcon className=\"w-7 text-red-lighter hover:text-white cursor-pointer\"\r\n                        onClick={likeHandler}\r\n                    />) : (\r\n                    <ArrowUpIcon className=\"w-7 text-white hover:text-red-lighter cursor-pointer\"\r\n                        onClick={likeHandler}\r\n                    />\r\n                )}\r\n                < p className=\"mx-4 text-grey-light\">{votes?.length}</p>\r\n\r\n                {userDownvoted ? (\r\n                    <ArrowDownIcon className=\"w-7 text-syntax-purple hover:text-white cursor-pointer\"\r\n                        onClick={dislikeHandler}\r\n                    />) : (\r\n                    <ArrowDownIcon className=\"w-7 text-white hover:text-syntax-purple cursor-pointer\"\r\n                        onClick={dislikeHandler}\r\n                    />\r\n                )}\r\n                < p className=\"mx-4 text-grey-light\">{downVotes?.length}</p>\r\n            </div>\r\n            {props.showComments && (\r\n                <Link to={`/threads/${props.threadName}/${props.id}`}>\r\n                    <div className=\"flex justify-start items-center text-grey-light hover:text-red-lighter\">\r\n                        <AnnotationIcon className=\"w-8\" />\r\n                        <p className=\"mx-4 hidden md:block\">Comments</p>\r\n                    </div>\r\n                </Link>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardReactions;","const CardBody: React.FC = props => (\r\n    <p className=\"font-body text-md md:text-lg 2xl:text-xl text-white my-1 overflow-ellipsis\">\r\n        {props.children}\r\n    </p>\r\n);\r\n\r\nexport default CardBody;","import { Link, useParams } from 'react-router-dom';\r\nimport CardTitle from \"../CardTitle\";\r\nimport CardReactions from '../CardReactions';\r\n\r\nimport CardBody from \"../CardBody\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    title: string;\r\n    body: string\r\n    votes: [string];\r\n    downVotes: [string];\r\n}\r\n\r\ninterface RouteParams {\r\n    threadName: string;\r\n}\r\n\r\nconst PostCard: React.FC<Props> = props => {\r\n    const params = useParams<RouteParams>();\r\n    const threadName = params.threadName;\r\n\r\n    return (\r\n        <div\r\n            className=\"flex flex-col max-h-72 justify-around w-11/12 md:w-10/12 xl:w-9/12 2xl:w-8/12\r\n            rounded-2xl bg-grey-lighter my-8 box-border\"\r\n        >\r\n            {/* Post title and body */}\r\n            <div className=\"px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:pt-8 cursor-pointer\">\r\n                <Link to={`/threads/${threadName}/${props.id}`}>\r\n                    <CardTitle>\r\n                        {props.title}\r\n                    </CardTitle>\r\n\r\n                    <hr className=\"mb-4 border-red-lighter\" />\r\n\r\n                    <CardBody>\r\n                        {props.body}\r\n                    </CardBody>\r\n                </Link>\r\n            </div>\r\n            <CardReactions\r\n                id={props.id}\r\n                votes={props.votes}\r\n                downVotes={props.downVotes}\r\n                showComments\r\n                threadName={threadName}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PostCard;","import { KeyIcon, HeartIcon, BanIcon, TrendingUpIcon, CubeIcon, ChatIcon, DocumentReportIcon, GlobeIcon, SunIcon, ViewGridAddIcon } from '@heroicons/react/solid';\r\n\r\ninterface Props {\r\n    username?: string;\r\n    bio?: string;\r\n    score?: number;\r\n    permissionLevel?: number;\r\n    numberOfPosts?: number;\r\n    numberOfComments?: number;\r\n    joinedAt?: string;\r\n}\r\n\r\nconst ProfileCard: React.FC<Props> = props => {\r\n    const joinedAt = new Date(props.joinedAt || \"\").toUTCString().slice(0, -13);\r\n\r\n    return (\r\n        <div\r\n            className=\"flex flex-col justify-around w-11/12 md:w-10/12 xl:w-9/12 2xl:w-8/12\r\n            rounded-2xl backdrop-filter backdrop-blur-md bg-transparent my-8 border-2 border-syntax-purple\"\r\n        >\r\n            {/* Username and bio */}\r\n            <div className=\"px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:pt-8\">\r\n                <h2 className=\"flex justify-between text-display tracking-wider font-display text-2xl md:text-3xl 2xl:text-5xl text-syntax-purple my-2\">\r\n                    <div className=\"flex\">\r\n                        {props.username}\r\n                        {props.permissionLevel && props.permissionLevel === 2 ? <GlobeIcon className=\"w-8 mx-4\"/> : null}\r\n                        {props.permissionLevel && props.permissionLevel === 3 ? <ViewGridAddIcon className=\"w-8 mx-4\"/> : null}\r\n                        {props.permissionLevel && props.permissionLevel === 4 ? <SunIcon className=\"w-8 mx-4\"/> : null}\r\n                    </div>\r\n                    <p className=\"text-lg md:text-lg 2xl:text-xl text-white my-2\">\r\n                        ({joinedAt})\r\n                    </p>\r\n                </h2>\r\n\r\n                <hr className=\"mb-4 border-syntax-purple\" />\r\n\r\n                <p className=\"font-body text-lg md:text-xl 2xl:text-2xl text-white my-1 overflow-ellipsis\">\r\n                    {(props.bio && props.bio?.length > 150) ? props.bio?.substring(0, 150)+'...' : props.bio}\r\n                </p>\r\n            </div>\r\n\r\n            {/* Score and like profile */}\r\n            <div className=\"max-h-min flex justify-between items-center mt-4 px-8 py-4 md:px-12 md:py-6 \r\n                xl:px-12 xl:py-4 text-xl\">\r\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\r\n                    <KeyIcon className=\"w-8\" />\r\n                    <p className=\"mx-4 hidden md:block\">Backdoor Keys :</p>\r\n                    <p className=\"mx-2 font-black\"> {props.score} </p>\r\n                </div>\r\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\r\n                    <p className=\"mx-4 hidden md:block\">Badges :</p>\r\n                    { props.score && props?.score > 40 ? <HeartIcon className=\"w-8\" /> : null }\r\n                    { props.score && props?.score > 40 ? <TrendingUpIcon className=\"w-8\" /> : null }\r\n                    { props.score && props?.score > 40 ? <CubeIcon className=\"w-8\" /> : null }\r\n                    <BanIcon className=\"w-8\" />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"max-h-min flex justify-between items-center mt-4 px-8 py-4 md:px-12 md:py-6 \r\n                xl:px-12 xl:py-4 text-xl\">\r\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\r\n                    <DocumentReportIcon className=\"w-8\" />\r\n                    <p className=\"mx-4 hidden md:block\">Total Posts :</p>\r\n                    <p className=\"mx-2 font-black\"> {props.numberOfPosts} </p>\r\n                </div>\r\n                <div className=\"flex justify-start items-center text-grey-light text-red-lighter\">\r\n                    <ChatIcon className=\"w-8\" />\r\n                    <p className=\"mx-4 hidden md:block\">Total Comments :</p>\r\n                    <p className=\"mx-2 font-black\"> {props.numberOfComments} </p>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ProfileCard;","import PageBody from '../../components/Utilities/PageBody';\r\nimport Navbar from '../../components/Navbars/Navbar';\r\nimport PostCard from '../../components/Cards/PostCard/PostCard';\r\nimport ProfileCard from '../../components/Cards/ProfileCard/ProfileCard';\r\nimport { getUser, fetchPostsBySearch, } from '../../api/index';\r\nimport { IPost, IUser } from '../../api/modelsInterface';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { routeVariants } from '../../variants/index';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Profile: React.FC = () => {\r\n    const { username } = useParams<{ username: string }>();\r\n    const [userInfo, setUserInfo] = useState<IUser>();\r\n    const [userPosts, setUserPosts] = useState<Array<IPost>>();\r\n\r\n    useEffect(() => {\r\n        getUser(username)\r\n            .then(fetchedUser => {\r\n                // get user's posts\r\n                fetchPostsBySearch('', '', fetchedUser.data._id)\r\n                    .then(fetchedPost => setUserPosts( fetchedPost.data ))\r\n                    .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n                // set user info\r\n                setUserInfo(fetchedUser.data);\r\n            })\r\n            .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n    }, [username]);\r\n\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <Navbar />\r\n            <PageBody>\r\n\r\n                {/* Content Column */}\r\n                <div className=\"flex flex-1 flex-col items-center flex-wrap pt-8 pb-20 mx-2 box-border\">\r\n\r\n                    <ProfileCard \r\n                        username={userInfo?.username}\r\n                        bio={userInfo?.bio}\r\n                        score={userInfo?.score}\r\n                        permissionLevel={userInfo?.permissionLevel}\r\n                        numberOfPosts={userInfo?.posts.length}\r\n                        numberOfComments={userInfo?.comments.length}\r\n                        joinedAt={userInfo?.joinedAt.toString()}\r\n                    />\r\n\r\n                    <p className=\"text-4xl text-white mt-10\">\r\n                        {userInfo?.username}'s Posts:\r\n                        <hr className=\"mb-4 border-syntax-orange border-2 rounded-2xl\" />\r\n                    </p>\r\n\r\n                    {userPosts?.map(post => {\r\n                        const postBody = (post.body.length > 250)\r\n                            ? post.body.substring(0, 250) + \"...\"\r\n                            : post.body;\r\n                        return (\r\n                            <PostCard\r\n                                id={post._id}\r\n                                title={post.title}\r\n                                body={postBody}\r\n                                votes={post.votes}\r\n                                downVotes={post.downVotes}\r\n                                key={post._id}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </PageBody>\r\n        </motion.section>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { cardVariants } from '../../../variants/index'\r\nimport CardTitle from '../CardTitle';\r\nimport CardBody from '../CardBody';\r\nimport { ChatAlt2Icon } from '@heroicons/react/solid';\r\nimport { motion } from 'framer-motion';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './ThreadCard.module.scss';\r\n\r\ninterface Props {\r\n    title: string;\r\n    body: string;\r\n    numberOfPosts: Number;\r\n}\r\n\r\nconst ThreadCard: React.FC<Props> = props => {\r\n    let threadBody;\r\n    if (props.body.length > 70)\r\n        threadBody = props.body.substring(0, 60) + \"...\";\r\n    else\r\n        threadBody = props.body;\r\n\r\n    return (\r\n        <motion.div className={`flex flex-col justify-around w-11/12 md:w-5/12 xl:w-2/5 2xl:w-4/12 cursor-pointer max-h-72\r\n                            ${classes.ThreadCard} p-8 md:p-12 xl:px-12 xl:py-8 rounded-2xl bg-grey-lighter m-2 box-border`}\r\n            key={props.title}\r\n            variants={cardVariants}\r\n            whileHover=\"hover\"\r\n        >\r\n            <Link to={`/threads/${props.title}`}>\r\n                <CardTitle>\r\n                    {props.title}\r\n                </CardTitle>\r\n\r\n                <hr className=\"mb-4 border-red-lighter\" />\r\n\r\n                <CardBody>\r\n                    {threadBody}\r\n                </CardBody>\r\n                <div className=\"max-h-min flex justify-start items-center mt-4\">\r\n                    <ChatAlt2Icon className=\"w-8 text-red-lighter\" />\r\n                    <p className=\"mx-4 text-grey-light\">{props.numberOfPosts} posts</p>\r\n                </div>\r\n            </Link>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default ThreadCard;","export default __webpack_public_path__ + \"static/media/chat-illustration.2dfa110a.svg\";","import PageBody from '../../components/Utilities/PageBody';\r\nimport Navbar from '../../components/Navbars/Navbar';\r\nimport { fetchAllThreads } from '../../api/index';\r\nimport { IThread } from '../../api/modelsInterface';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { routeVariants } from '../../variants/index';\r\nimport Sidebar from '../../components/Utilities/Sidebar';\r\nimport ThreadCard from '../../components/Cards/ThreadCard/ThreadCard';\r\nimport ChatIllustration from '../../assets/chat-illustration.svg';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Threads: React.FC = () => {\r\n    const [threads, setThreads] = useState<Array<IThread>>([]);\r\n\r\n    useEffect(() => {\r\n        fetchAllThreads()\r\n            .then(fetchedThreads => setThreads(fetchedThreads.data))\r\n            .catch(err => toast.error(err.response.data.message, { transition: Flip }))\r\n    }, []);\r\n\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <Navbar />\r\n            <PageBody>\r\n                {/* Sidebar */}\r\n                <Sidebar\r\n                    bgColor=\"grey-lighter\"\r\n                    title=\"Threads\"\r\n                    description=\"Explore top cybersecurity topics\"\r\n                    titleColor=\"yellow\"\r\n                    descriptionColor=\"grey-light\"\r\n                    illustration={ChatIllustration}\r\n                />\r\n\r\n                {/* Content Column */}\r\n                <div className=\"flex flex-1 justify-center flex-wrap pt-8 pb-20 mx-2 box-border\">\r\n                    {threads.map(thread => {\r\n                        return (\r\n                            <ThreadCard\r\n                                title={thread.title}\r\n                                body={thread.body}\r\n                                numberOfPosts={thread.numberOfPosts}\r\n                                key={thread.title}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </PageBody>\r\n        </motion.section>\r\n    );\r\n};\r\n\r\nexport default Threads;\r\n","export default __webpack_public_path__ + \"static/media/post-illustration.ab23041a.svg\";","import PageBody from '../../components/Utilities/PageBody';\r\nimport { routeVariants } from '../../variants/index';\r\nimport { fetchThread, fetchPostsBySearch } from '../../api/index';\r\nimport { IThread, IPost } from '../../api/modelsInterface';\r\nimport Sidebar from '../../components/Utilities/Sidebar';\r\nimport Navbar from '../../components/Navbars/Navbar';\r\nimport PostCard from '../../components/Cards/PostCard/PostCard';\r\nimport PostIllustration from '../../assets/post-illustration.svg';\r\nimport { motion } from 'framer-motion';\r\nimport { toast, Flip } from 'react-toastify';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface RouteParams {\r\n    threadName: string;\r\n}\r\n\r\nconst ThreadDetails: React.FC = () => {\r\n    const [posts, setPosts] = useState<Array<IPost>>();\r\n    const [threadData, setThreadData] = useState<IThread>();\r\n    const { threadName } = useParams<RouteParams>();\r\n\r\n    // Fetch data for this thread\r\n    useEffect(() => {\r\n        fetchThread(threadName)\r\n            .then(res => {\r\n                setThreadData(res.data);\r\n            })\r\n            .catch(err => {\r\n                toast.error(err.response.data.message, { transition: Flip });\r\n            });\r\n    }, [threadName]);\r\n\r\n    // Get posts belonging to this particular thread.\r\n    useEffect(() => {\r\n        fetchPostsBySearch('', threadName, '')\r\n            .then(res => {\r\n                setPosts(res.data);\r\n            })\r\n            .catch(err => {\r\n                toast.error(err.response.data.message, { transition: Flip });\r\n            });\r\n    }, [threadName]);\r\n\r\n\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <Navbar />\r\n            <PageBody>\r\n                <Sidebar\r\n                    bgColor=\"grey-lighter\"\r\n                    title={threadName}\r\n                    description={threadData?.body}\r\n                    titleColor=\"yellow\"\r\n                    descriptionColor=\"grey-light\"\r\n                    illustration={PostIllustration}\r\n                />\r\n                <div className=\"flex flex-1 flex-col items-center flex-wrap pt-8 pb-20 mx-2 box-border\">\r\n                    {posts?.map(post => {\r\n                        let postBody;\r\n\r\n                        if (post.body.length > 250) {\r\n                            postBody = post.body.substring(0, 250) + \"...\"\r\n                        } else {\r\n                            postBody = post.body;\r\n                        }\r\n\r\n                        return (\r\n                            <PostCard\r\n                                id={post._id}\r\n                                title={post.title}\r\n                                body={postBody}\r\n                                votes={post.votes}\r\n                                downVotes={post.downVotes}\r\n                                key={post._id}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </PageBody>\r\n        </motion.section>\r\n    );\r\n}\r\n\r\nexport default ThreadDetails;","import CardTitle from \"../CardTitle\";\r\nimport CardBody from \"../CardBody\";\r\nimport CardReactions from '../CardReactions';\r\nimport { getUsername } from '../../../api/index';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    id: string;\r\n    user: string;\r\n    title: string;\r\n    body: string\r\n    votes: [string];\r\n    downVotes: [string];\r\n    tags: [string];\r\n    date: string;\r\n}\r\n\r\nconst FullPostCard: React.FC<Props> = props => {\r\n    const [username, setUsername] = useState<string>();\r\n    const history = useHistory();\r\n    const createdAt = new Date(props.date).toUTCString().slice(0, -13);\r\n\r\n    useEffect(() => {\r\n        getUsername(props.user)\r\n            .then(res => setUsername(res.data.username))\r\n            .catch(err => {\r\n                history.goBack();\r\n                toast.error(err.response.data.message, { transition: Flip });\r\n            });\r\n    }, [history, props.user]);\r\n\r\n    return (\r\n        <div\r\n            className=\"flex flex-col justify-around w-11/12 md:w-9/12 xl:w-7/12 rounded-2xl bg-grey-lighter \r\n            my-8 box-border\"\r\n        >\r\n            <div className=\"w-full flex justify-between items-center xl:mt-7 text-lg text-grey-light\r\n            px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:py-2\">\r\n                <Link to={`/users/${username}`}>\r\n                    <p className=\"font-bold hover:underline\">By: {username}</p>\r\n                </Link>\r\n                <p>{createdAt}</p>\r\n            </div>\r\n            {/* Post title and body */}\r\n            <div className=\"px-8 md:px-12 xl:px-12\">\r\n                <CardTitle>\r\n                    {props.title}\r\n                </CardTitle>\r\n\r\n                <hr className=\"mb-4 border-red-lighter\" />\r\n\r\n                <CardBody>\r\n                    {props.body}\r\n                </CardBody>\r\n                <div className=\"w-full flex justify-start items-center mt-4 xl:mt-7 text-lg text-grey-light\">\r\n                    <p>Tags: {props.tags.join(\", \")}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <CardReactions\r\n                id={props.id}\r\n                votes={props.votes}\r\n                downVotes={props.downVotes}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default FullPostCard;","import CardBody from '../CardBody';\r\nimport CardReactions from '../CardReactions';\r\nimport { getUsername } from '../../../api/index';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\ninterface Props {\r\n    id: string;\r\n    user: string;\r\n    body: string;\r\n    votes: [string];\r\n    downVotes: [string];\r\n    date: string;\r\n}\r\n\r\nconst CommentCard: React.FC<Props> = props => {\r\n    const [username, setUsername] = useState<string>();\r\n    const history = useHistory();\r\n    const createdAt = new Date(props.date).toUTCString().slice(0, -13);\r\n\r\n    useEffect(() => {\r\n        getUsername(props.user)\r\n            .then(res => setUsername(res.data.username))\r\n            .catch(err => {\r\n                toast.error(err.response.data.message, { transition: Flip });\r\n                history.goBack();\r\n            })\r\n    }, [history, props.user]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-around w-11/12 md:w-9/12 xl:w-7/12 rounded-2xl bg-grey-lighter \r\n            mt-4 box-border\">\r\n\r\n            <div className=\"w-full flex justify-between items-center xl:mt-7 text-lg text-grey-light\r\n            px-8 pt-8 md:px-12 md:pt-12 xl:px-12 xl:py-2\">\r\n                <Link to={`/users/${username}`}>\r\n                    <p className=\"font-bold hover:underline\">By: {username}</p>\r\n                </Link>\r\n                <p>{createdAt}</p>\r\n            </div>\r\n\r\n            <div className=\"px-8 md:px-12 xl:px-12\">\r\n                <CardBody>\r\n                    {props.body}\r\n                </CardBody>\r\n            </div>\r\n            <CardReactions\r\n                id={props.id}\r\n                comment\r\n                votes={props.votes}\r\n                downVotes={props.downVotes}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentCard;","import InputField from './InputField';\r\nimport SuccessButton from '../Buttons/SuccessButton';\r\nimport { createComment } from '../../api/index';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { FormEvent, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface RouteParams {\r\n    postId: string;\r\n}\r\n\r\nconst AddComment: React.FC = props => {\r\n    const params = useParams<RouteParams>();\r\n    const postId = params.postId;\r\n    const commentRef = useRef<HTMLInputElement>(null);\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const comment = commentRef.current?.value as string;\r\n        createComment(postId, { body: comment })\r\n            .then(res => toast.success(res.data.message, { transition: Flip }))\r\n            .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n    }\r\n    return (\r\n        <div className=\"p-5 flex bg-grey-lighter justify-center items-center w-11/12 md:w-9/12 xl:w-7/12 \r\n        mb-4 rounded-2xl\">\r\n            <form onSubmit={submitHandler} className=\"flex flex-1 flex-wrap justify-around items-center\">\r\n                <InputField\r\n                    placeholder=\"Add Comment\"\r\n                    type=\"text\"\r\n                    inputRef={commentRef}\r\n                    required\r\n                />\r\n                <div className=\"mx-5\">\r\n                    <SuccessButton type=\"submit\">Comment</SuccessButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddComment;","import Navbar from '../../components/Navbars/Navbar';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport { fetchPost, fetchCommentsBySearch } from '../../api/index';\r\nimport { IPost, IComment } from '../../api/modelsInterface';\r\nimport { motion } from 'framer-motion'\r\nimport { routeVariants } from '../../variants/index';\r\nimport FullPostCard from '../../components/Cards/FullPostCard/FullPostCard';\r\nimport PageBody from '../../components/Utilities/PageBody';\r\nimport CommentCard from '../../components/Cards/CommentCard/CommentCard';\r\nimport AddComment from '../../components/Utilities/AddComment';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\ninterface RouteParams {\r\n    postId: string;\r\n}\r\n\r\nconst PostDetails: React.FC = props => {\r\n    const [post, setPost] = useState<IPost>();\r\n    const [comments, setComments] = useState<Array<IComment>>();\r\n    const history = useHistory();\r\n    const params = useParams<RouteParams>();\r\n    const postId = params.postId;\r\n\r\n    useEffect(() => {\r\n        fetchPost(postId)\r\n            .then(res => {\r\n                setPost(res.data)\r\n            })\r\n            .catch(err => {\r\n                history.goBack();\r\n                toast.error(err.response.data.message, { transition: Flip })\r\n            });\r\n\r\n        fetchCommentsBySearch(postId, \"\")\r\n            .then(res => setComments(res.data))\r\n            .catch(err => {\r\n                history.goBack();\r\n                toast.error(err.response.data.message, { transition: Flip })\r\n            });\r\n    }, [postId, history]);\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <Navbar />\r\n            <PageBody>\r\n                <div className=\"flex flex-col flex-1 items-center px-2 py-2 pb-28 md:px-4 md:pt-4\r\n            xl:pt-2 xl:px-8 overflow-x-hidden scrollbar\">\r\n                    {post && (\r\n                        <FullPostCard\r\n                            id={post._id}\r\n                            user={post.user}\r\n                            title={post.title}\r\n                            body={post.body}\r\n                            votes={post.votes}\r\n                            downVotes={post.downVotes}\r\n                            date={post.createdAt.toString()}\r\n                            tags={post.tags}\r\n                        />\r\n                    )}\r\n                    <AddComment />\r\n                    {comments?.map(comment => {\r\n                        return (\r\n                            <CommentCard\r\n                                id={comment._id}\r\n                                user={comment.user}\r\n                                date={comment.createdAt.toString()}\r\n                                body={comment.body}\r\n                                votes={comment.votes}\r\n                                downVotes={comment.downVotes}\r\n                                key={comment._id}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </PageBody>\r\n        </motion.section>\r\n    );\r\n}\r\n\r\nexport default PostDetails;","import React from \"react\";\r\n\r\ninterface Props {\r\n    allThreads?: string[];\r\n    selectedThreads: string[] | undefined;\r\n    label?: string;\r\n    showDropdown: boolean;\r\n    inputRef: React.RefObject<HTMLInputElement>;\r\n    dropdownToggleHandler: () => void;\r\n    threadSelectHandler: (e: React.MouseEvent<HTMLLIElement>) => void;\r\n}\r\n\r\nconst TagsSelector: React.FC<Props> = props => {\r\n\r\n    return (\r\n        <div className=\"field w-full my-4 mx-4 lg:mx-4 xl:mx-0\">\r\n            <div className=\"field relative\">\r\n                <label className=\"label font-normal\">{props.label}</label>\r\n                <p className=\"control has-icons-right\">\r\n                    <input className=\"input rounded-xl px-4 cursor-pointer\"\r\n                        type=\"text\"\r\n                        ref={props.inputRef}\r\n                        onClick={props.dropdownToggleHandler}\r\n                        readOnly />\r\n                    <span className=\"icon is-small is-right flex justify-center items-center mx-2\"\r\n                        onClick={props.dropdownToggleHandler}\r\n                    >\r\n                        {props.children}\r\n                    </span>\r\n                </p>\r\n                {props.showDropdown && (\r\n                    <div className=\"p-5 absolute right-0 top-full\">\r\n                        <ul className=\"flex flex-col justify-start items-start scrollbar shadow-2xl\r\n                    text-left bg-grey-darker rounded-lg max-w-screen-sm overflow-y-scroll max-h-52 py-1\">\r\n                            {props.allThreads?.map(tag => {\r\n                                return (\r\n                                    <li className=\"w-full hover:bg-grey-lightest my-1 font-body cursor-pointer\r\n                                text-lg pl-4 pr-20 lg:pr-56 xl:pr-72 2xl:pr-96 py-3 text-grey-light\"\r\n                                        onClick={props.threadSelectHandler}\r\n                                        key={tag}>\r\n                                        {tag}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TagsSelector;","import Joi from 'joi';\r\n\r\nconst postSchema = Joi.object({\r\n    title: Joi.string()\r\n        .min(3)\r\n        .max(120)\r\n        .required(),\r\n    description: Joi.string()\r\n        .min(10)\r\n        .max(2000)\r\n        .required(),\r\n    threads: Joi.array()\r\n        .min(1)\r\n        .label(\"Tags\")\r\n        .required()\r\n});\r\n\r\nexport default postSchema;","export default __webpack_public_path__ + \"static/media/publish-post-illustration.3f77733d.svg\";","import PageBody from '../../components/Utilities/PageBody';\r\nimport { motion } from 'framer-motion';\r\nimport Sidebar from '../../components/Utilities/Sidebar';\r\nimport Navbar from '../../components/Navbars/Navbar';\r\nimport Heading from '../../components/Utilities/Heading';\r\nimport InputField from '../../components/Utilities/InputField';\r\nimport TagsSelector from '../../components/Utilities/TagsSelector';\r\nimport SuccessButton from '../../components/Buttons/SuccessButton';\r\nimport TextArea from '../../components/Utilities/TextArea';\r\nimport ErrorMessage from '../../components/Utilities/ErrorMessage';\r\nimport { routeVariants } from '../../variants/index';\r\nimport { fetchAllThreads, createPost } from '../../api/index';\r\nimport { IThread } from '../../api/modelsInterface';\r\nimport postSchema from '../../schema/postSchema';\r\nimport { toast, Flip } from 'react-toastify';\r\nimport PublishPostIllustration from '../../assets/publish-post-illustration.svg';\r\nimport { ChevronDownIcon } from '@heroicons/react/solid';\r\n\r\nimport { useState, useRef, FormEvent, useEffect, MouseEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst NewPost: React.FC = () => {\r\n    const [threadList, setThreadList] = useState<string[]>();\r\n    const [showDropdown, setShowDropdown] = useState<boolean>(false);\r\n    const [selectedThreads, setSelectedThreads] = useState<string[]>([]);\r\n    const [errorMessage, setErrorMessage] = useState<string>();\r\n    const history = useHistory();\r\n    const titleRef = useRef<HTMLInputElement>(null);\r\n    const descriptionRef = useRef<HTMLTextAreaElement>(null);\r\n    const tagsSelectorRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        fetchAllThreads()\r\n            .then(res => {\r\n                const threads: Array<IThread> = res.data;\r\n                const threadTitles: string[] = [];\r\n                threads.forEach(thread => threadTitles.push(thread.title));\r\n                setThreadList(threadTitles);\r\n            })\r\n            .catch(err => {\r\n                history.goBack();\r\n                toast.error(err.response.data.message, { transition: Flip });\r\n            });\r\n    }, [history]);\r\n\r\n    const dropdownToggleHandler = () => {\r\n        setShowDropdown(prevState => !prevState);\r\n    }\r\n\r\n    const toggleThreadsHandler = (e: MouseEvent<HTMLLIElement>) => {\r\n        const threadTitle = e.currentTarget.textContent as string;\r\n        setSelectedThreads(prevSelected => {\r\n            const currentlySelected = prevSelected;\r\n\r\n            // Why doesn't this work though?\r\n            // console.log(e.currentTarget.textContent);\r\n\r\n            // If the thread isn't already selected, \"select\" or add it, otherwise remove it.\r\n            if (!prevSelected.includes(threadTitle)) {\r\n                currentlySelected.push(threadTitle);\r\n            } else {\r\n                currentlySelected.splice(currentlySelected.indexOf(threadTitle), 1);\r\n            }\r\n            (tagsSelectorRef.current as HTMLInputElement).value = currentlySelected.join(', ');\r\n            console.log(currentlySelected);\r\n            return currentlySelected\r\n        });\r\n    }\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const title = titleRef.current?.value as string;\r\n        const description = descriptionRef.current?.value as string;\r\n        const { error } = postSchema.validate({\r\n            title,\r\n            description,\r\n            threads: selectedThreads\r\n        });\r\n        if (error) {\r\n            setErrorMessage(error.message);\r\n        } else {\r\n            createPost({\r\n                title,\r\n                body: description,\r\n                tags: selectedThreads\r\n            })\r\n                .then(res => {\r\n                    history.push(\"/threads\");\r\n                    toast.success(res.data.message, { transition: Flip });\r\n                })\r\n                .catch(err => toast.error(err.response.data.message, { transition: Flip }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.section\r\n            variants={routeVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n        >\r\n            <Navbar />\r\n            <PageBody>\r\n                <Sidebar\r\n                    bgColor=\"grey-lighter\"\r\n                    title=\"New Post\"\r\n                    description=\"Tip: Give your post a short but catchy title and a proper description explaining everything in detail.\"\r\n                    titleColor=\"yellow\"\r\n                    descriptionColor=\"grey-light\"\r\n                    illustration={PublishPostIllustration}\r\n                />\r\n                <div className=\"flex flex-1 justify-center items-center flex-wrap mt-8 mb-20 mx-2 box-border\">\r\n                    <div className=\"bg-grey-lighter flex flex-col items-center w-11/12 md:w-9/12 xl:w-8/12 2xl:w-7/12\r\n                    m-4 py-6 sm:py-6 xl:py-10 xl:px-2 rounded-3xl\">\r\n                        <Heading>New Post</Heading>\r\n                        <form onSubmit={submitHandler} className=\"w-full mt-4 mb-2 mx-4 flex px-8 md:px-10\r\n                        lg:px-12 flex-col items-center\">\r\n                            <InputField\r\n                                placeholder=\"Enter your post title here. (Keep it short!)\"\r\n                                label=\"Post Title\"\r\n                                type=\"text\"\r\n                                inputRef={titleRef}\r\n                                required\r\n                            />\r\n                            <TextArea\r\n                                label=\"Post Description\"\r\n                                placeholder=\"Enter your post description here\"\r\n                                limit={2000}\r\n                                textAreaRef={descriptionRef}\r\n                                required\r\n                            />\r\n                            <TagsSelector label=\"Tags\"\r\n                                allThreads={threadList}\r\n                                selectedThreads={selectedThreads}\r\n                                threadSelectHandler={toggleThreadsHandler}\r\n                                dropdownToggleHandler={dropdownToggleHandler}\r\n                                showDropdown={showDropdown}\r\n                                inputRef={tagsSelectorRef}\r\n                            >\r\n                                <ChevronDownIcon className=\"w-2/3 text-syntax-yellow\" />\r\n                            </TagsSelector>\r\n                            <div className=\"mt-4\">\r\n                                <SuccessButton type=\"submit\">Post</SuccessButton>\r\n                            </div>\r\n                        </form>\r\n                        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n                    </div>\r\n                </div>\r\n            </PageBody>\r\n        </motion.section>\r\n    );\r\n}\r\n\r\nexport default NewPost;","import React from 'react';\r\nimport { Route, Switch, useLocation, Redirect } from 'react-router-dom';\r\nimport Landing from './screens/Landing/Landing';\r\nimport Signup from './screens/Signup/Signup';\r\nimport Login from './screens/Login/Login'\r\nimport Profile from './screens/Profile/Profile';\r\nimport Threads from './screens/Threads/Threads';\r\nimport ThreadDetails from './screens/ThreadDetails/ThreadDetails';\r\nimport PostDetails from './screens/PostDetails/PostDetails';\r\nimport NewPost from './screens/NewPost/NewPost';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { checkAuthenticated } from './api/index';\r\nimport { authenticate, setId, setUsername, setPermissionLevel } from './store/userSlice';\r\nimport { IStore } from './store/userInterface';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport './App.scss';\r\nimport './scss/ReactToastify.scss';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const isAuthenticated = useSelector<IStore>(state => state.user.isAuthenticated);\r\n\r\n  useEffect(() => {\r\n    checkAuthenticated()\r\n      .then(res => {\r\n        dispatch(authenticate());\r\n        dispatch(setId(res.data.id));\r\n        dispatch(setUsername(res.data.username));\r\n        dispatch(setPermissionLevel(res.data.permissionLevel));\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <AnimatePresence exitBeforeEnter>\r\n        <Switch location={location} key={location.key}>\r\n          <Route path=\"/signup\">\r\n            <Signup />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/users/:username\">\r\n            <Profile />\r\n          </Route>\r\n          <Route path=\"/threads\" exact>\r\n            <Threads />\r\n          </Route>\r\n          <Route path=\"/threads/:threadName\" exact>\r\n            <ThreadDetails />\r\n          </Route>\r\n          <Route path=\"/threads/:threadName/:postId\">\r\n            <PostDetails />\r\n          </Route>\r\n          <Route path=\"/posts/new\">\r\n            <NewPost />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {/* If user is not authenticated, show landing page, else redirect to /threads */}\r\n            {!isAuthenticated\r\n              ? <Landing />\r\n              : <Redirect to=\"/threads\" />\r\n            }\r\n          </Route>\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from \"./userSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userReducer\r\n    }\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './store/index';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeroHeader\":\"Landing_HeroHeader__yvdBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__br52S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1mBOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThreadCard\":\"ThreadCard_ThreadCard__1D_WY\"};"],"sourceRoot":""}